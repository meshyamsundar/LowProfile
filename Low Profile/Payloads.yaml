CommonPayloadKeys:
  description: Payload dictionary keys common to all payload types
  payload:
    payloadtype: CommonPayloadKeys
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '5.0'
        supervised: false
      watchOS:
        allowmanualinstall: true
        introduced: '1.0'
  payloadkeys:
  - content: 'The reverse-DNS-style identifier for the payload. This identifier is usually the same as the TopLevel value, with an additional appended component. This string must be unique within the profile.

      During a profile replacement, the system updates payloads with the same ''PayloadIdentifier'' and ''PayloadUUID'' in the old and new profiles.'
    key: PayloadIdentifier
    presence: required
    type: <string>
  - content: 'The globally unique identifier for the payload. The actual content is unimportant, but must be globally unique. In macOS, use ''uuidgen'' to generate UUIDs.

      During a profile replacement, the system updates payloads with the same ''PayloadIdentifier'' and ''PayloadUUID'' in the old and new profiles.'
    key: PayloadUUID
    presence: required
    type: <string>
  - content: The payload type, which each payload domain's reference page specifies.
    key: PayloadType
    presence: required
    type: <string>
  - content: The version of this specific payload.
    key: PayloadVersion
    presence: required
    rangelist:
    - 1
    type: <integer>
  - content: The human-readable description of this payload. This description appears on the Detail screen.
    key: PayloadDescription
    presence: optional
    type: <string>
  - content: The human-readable name for the profile payload. The name appears on the Detail screen and doesn't need to be unique.
    key: PayloadDisplayName
    presence: optional
    type: <string>
  - content: The human-readable string containing the name of the organization that provides the profile. This value doesn't need to match the organization payload value in the enclosing dictionary.
    key: PayloadOrganization
    presence: optional
    type: <string>
  title: Common Payload Keys
GlobalPreferences:
  description: ''
  payload:
    content: Global preferences on macOS
    payloadtype: .GlobalPreferences
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'false', disables fast user switching.
    default: true
    key: MultipleSessionEnabled
    presence: optional
    type: <boolean>
  - content: The 'autologout' delay, in seconds. A value of '0' means 'autologout' is off. In some cases, this delay may be restricted to values between 5 minutes and 24 hours.
    key: com.apple.autologout.AutoLogOutDelay
    presence: optional
    type: <real>
  title: Global Preferences
TopLevel:
  description: ''
  payload:
    payloadtype: TopLevel
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '5.0'
        supervised: false
      watchOS:
        allowmanualinstall: true
        introduced: '1.0'
  payloadkeys:
  - content: The reverse-DNS style identifier ('com.example.myprofile', for example) that identifies the profile. This string is used to determine whether a new profile should replace an existing one or should be added.
    key: PayloadIdentifier
    presence: required
    type: <string>
  - content: The globally unique identifier for the profile. The actual content is unimportant. In macOS, you can use 'uuidgen' to generate reasonable UUIDs.
    key: PayloadUUID
    presence: required
    type: <string>
  - content: The type of payload. The only supported value is 'Configuration'.
    key: PayloadType
    presence: required
    rangelist:
    - Configuration
    type: <string>
  - content: The version number of the profile format. This number represents the version of the configuration profile as a whole, not of the individual profiles within it. The value should be 1.
    key: PayloadVersion
    presence: required
    rangelist:
    - 1
    type: <integer>
  - content: Set to 'true' if the profile is encrypted.
    default: false
    key: IsEncrypted
    presence: optional
    type: <boolean>
  - content: The array of payload dictionaries. If 'IsEncrypted' is 'true', this array isn't needed.
    key: PayloadContent
    presence: required
    subkeys:
    - key: PayloadContentItem
      subkeys:
      - content: A payload item as defined by each payload type.
        key: ANY
        presence: required
        type: <any>
      type: <dictionary>
    type: <array>
  - content: Enabled if 'IsEncrypted' is 'true'.
    key: EncryptedPayloadContent
    presence: optional
    type: <data>
  - content: The description of the profile, shown on the Detail screen for the profile. This description should be detailed enough to help the user decide whether to install the profile.
    key: PayloadDescription
    presence: optional
    type: <string>
  - content: The human-readable name for the profile. This value is displayed on the Detail screen. It doesn't have to be unique.
    key: PayloadDisplayName
    presence: optional
    type: <string>
  - content: Set to 'true' if there is a removal passcode.
    default: false
    key: HasRemovalPasscode
    presence: optional
    type: <boolean>
  - content: The human-readable string containing the name of the organization that provided the profile.
    key: PayloadOrganization
    presence: optional
    type: <string>
  - content: 'If present and set to ''true'', the user can''t delete the profile (unless the profile has a removal password and the user provides it).

      On macOS, as of 10.15, this key only affects removal of manually installed profiles. If set to ''true'' and no profile removal payload is present, removing the profile requires admin auth.

      On macOS versions prior to 10.15, this key would prevent admins from removing MDM installed profiles but as of macOS 10.15, users can never remove MDM profiles, not even the admin.

      Requires a supervised device.'
    default: false
    key: PayloadRemovalDisallowed
    presence: optional
    supportedOS:
      iOS:
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        supervised: true
        userenrollment:
          mode: forbidden
      tvOS:
        supervised: true
      watchOS:
        introduced: n/a
    type: <boolean>
  - content: A string that defines whether the profile should be installed for the system or the user. In many cases, it determines the location of certificate items, such as keychains. Though it isn't possible to declare different payload scopes, payloads, like VPN, may automatically install their items in both scopes, if needed.
    key: PayloadScope
    presence: optional
    rangelist:
    - System
    - User
    supportedOS:
      macOS:
        introduced: '10.8'
    type: <string>
  - content: The date when the profile is automatically removed.
    key: RemovalDate
    presence: optional
    type: <date>
  - content: The number of seconds until the profile is automatically removed. If the 'RemovalDate' key is present, whichever field yields the earliest date is used.
    key: DurationUntilRemoval
    presence: optional
    type: <real>
  - content: The date when a profile is no longer valid and an update button is presented to the user.
    key: PayloadExpirationDate
    presence: optional
    supportedOS:
      watchOS:
        introduced: n/a
    type: <date>
  - content: 'The type of platform of the target device. Specifying the platform type helps prevent unintended installations.

      For interactive installations on iOS devices, specifying a target platform avoids the interstitial alerts that prompt the user to choose a profile target when multiple targets are eligible.

      0 = Any/unspecified

      1 = iPhone/iPad/iPod Touch

      2 = Apple Watch

      3 = HomePod

      4 = Apple TV

      5 = Mac'
    default: 0
    key: TargetDeviceType
    presence: optional
    rangelist:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    supportedOS:
      iOS:
        introduced: '12.2'
      macOS:
        introduced: '10.15'
      tvOS:
        introduced: '12.2'
      watchOS:
        introduced: '5.2'
    type: <integer>
  - content: 'A dictionary containing a key that consists of the IETF BCP 47 identifier for a language (for example, en or jp) and a value consisting of the agreement localized to that language. The agreement is displayed in a dialog, and the user must agree before installing the profile.


      The dictionary can also contain an optional key, ''default'', with its value consisting of the unlocalized (usually in en) agreement.


      The system chooses a localized version in the order of preference specified by the user (macOS) or based on the user''s current language setting (iOS). If no exact match is found, the default localization is used. If there is no default localization, the en localization is used. If there is no en localization, the first available localization is used.


      Provide a default value, if possible. No warning is displayed if the user''s locale doesn''t match any localization in the ''ConsentText'' dictionary.'
    key: ConsentText
    presence: optional
    subkeys:
    - content: The dictionary containing a key that consists of the IETF BCP 47 identifier for a language (for example, en or jp) and a value that consists of the agreement localized to that language.
      key: ConsentTextItem
      presence: required
      subkeys:
      - content: The key consisting of the IETF BCP 47 identifier for a language (for example, en or jp) and the value consisting of the agreement localized to that language.
        key: ANY
        presence: required
        type: <string>
      type: <dictionary>
    type: <dictionary>
  title: Top Level
com.apple.ADCertificate.managed:
  description: Active Directory Certificate
  payload:
    content: A certificate can be requested from a Microsoft Certificate Authority (CA) using DCE/RPC and the Active Directory Certificate profile payload instructions detailed at support.apple.com/kb/HT5357.
    payloadtype: com.apple.ADCertificate.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The fully qualified host name of the CA.
    key: CertServer
    presence: required
    title: Certificate Server
    type: <string>
  - content: The certificate template for your environment. The default user certificate value is `User`. The default computer certificate value is `Machine`.
    key: CertTemplate
    presence: required
    title: Certificate Template
    type: <string>
  - content: A user-friendly description of the certification identity.
    key: Description
    presence: optional
    title: Description
    type: <string>
  - content: The number of days in advance of certificate expiration that the notification center notifies the user.
    key: CertificateRenewalTimeInterval
    presence: optional
    title: Certificate Renewal Time Interval
    type: <integer>
  - content: 'The name of the certificate authority (CA). This value is determined from the common name (CN) of the Active Directory entry. Available in macOS 10.8 and later.


      Valid values:

      * CN=<your CA Name>

      * CN=''Certification Authorities''

      * CN=''Public Key Services''

      * ''''CN=''Services''

      * ''''CN=''Configuration''

      * ''''CN=<your base Domain Name>'
    key: CertificateAuthority
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.8'
    title: Certificate Authority
    type: <string>
  - content: This value is most commonly 'RPC'; if using web enrollment, use 'HTTP'. Available in macOS 10.8 and later.
    key: CertificateAcquisitionMechanism
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.8'
    title: Certificate Acquisition Mechanism
    type: <string>
  - content: If 'true', gives apps access to the private key. Available in macOS 10.10 and later.
    default: false
    key: AllowAllAppsAccess
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.10'
    title: Allow All Apps Access
    type: <boolean>
  - content: If 'true', the user is prompted for credentials when the profile is installed. This key applies only to user certificates with the Manual Download profile delivery method. Omit this key for computer certificates. Available in macOS 10.8 and later.
    default: false
    key: PromptForCredentials
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.8'
    title: Prompt For Credentials
    type: <boolean>
  - content: If 'true', allows exporting the private key. Available in macOS 10.10 and later.
    default: false
    key: KeyIsExtractable
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.10'
    title: Key Is Extractable
    type: <boolean>
  - content: The RSA key size for the certificate signing request (CSR). Available in macOS 10.11 and later.
    default: 2048
    key: Keysize
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.11'
    title: Key Size
    type: <integer>
  - content: If 'true', the certificate obtained with this payload attempts auto-renewal. Auto-renewal can only be used with device Active Directory certificate payloads. Available in macOS 10.13.4 and later.
    default: false
    key: EnableAutoRenewal
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    title: Key Size
    type: <boolean>
  title: Active Directory Certificate
com.apple.AIM.account:
  description: Use this section to define settings for configuration access to AIM servers.
  payload:
    content: An AIM payload creates an AIM account on the device.
    payloadtype: com.apple.AIM.account
    supportedOS:
      macOS:
        allowmanualinstall: true
        deprecated: '10.13'
        devicechannel: false
        introduced: '10.7'
        removed: '10.14'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The description of the account.
    key: AIMAccountDescription
    presence: optional
    title: Account Description
    type: <string>
  - content: The server address.
    key: AIMHostName
    presence: required
    rangelist:
    - slogin.oscar.aol.com
    title: Account Hostname
    type: <string>
  - content: The user's login name.
    key: AIMUserName
    presence: optional
    title: Account Username
    type: <string>
  - content: The user's password.
    key: AIMPassword
    presence: optional
    title: Account Password
    type: <string>
  - content: If 'true', enables SSL.
    default: true
    key: AIMUseSSL
    presence: optional
    title: Use SSL
    type: <boolean>
  - content: The connection port for the server.
    default: 5190
    key: AIMPort
    presence: optional
    range:
      max: 65535
      min: 0
    title: Port Number
    type: <integer>
  - content: The authentication method for the account.
    key: AIMAuthentication
    presence: required
    rangelist:
    - AIMAuthPassword
    title: AIM Authentication
    type: <string>
  title: AIM Account
com.apple.AssetCache.managed:
  description: ''
  payload:
    content: Configures the Content Caching service.
    payloadtype: com.apple.AssetCache.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: 10.13.4
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: 'Allow the system to purge content from the cache automatically when it needs disk space for other apps (i.e. when free disk space runs low on the computer). Customers who want Content Caching to be as effective as possible should turn this setting off.

      Available in macOS 10.15 and later.'
    default: true
    key: AllowCacheDelete
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: 'If ''true'', caches the user''s iCloud data. Clients may take some time (hours or days) to react to changes to this setting; it doesn''t have an immediate effect.


      At least one of the ''AllowPersonalCaching'' or ''AllowSharedCaching'' keys must be ''true''.'
    default: true
    key: AllowPersonalCaching
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: 'If ''true'', caches non-iCloud content, such as apps and software updates. Clients may take some time (hours, days) to react to changes to this setting; it does not have an immediate effect.


      At least one of the ''AllowPersonalCaching'' or ''AllowSharedCaching'' keys must be ''true''.'
    default: true
    key: AllowSharedCaching
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: 'If ''true'', automatically activates the content cache when possible and prevents it from being disabled. If the ''allowContentCaching'' restriction is set to ''false'', ''AutoActivation'' is also ''false''.

      Removing a profile that set ''AutoActivation'' to ''true'' does not deactivate the Content Cache.'
    default: false
    key: AutoActivation
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: 'Automatically enable Internet connection sharing when possible and prevent disabling Internet connection sharing. ''DenyTetheredCaching'' overrides ''AutoEnableTetheredCaching''. Tethered caching requires Content Caching.

      Available in macOS 10.15.4 and later.'
    default: false
    key: AutoEnableTetheredCaching
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.15.4
    type: <boolean>
  - content: The maximum number of bytes of disk space that will be used for the content cache. A value of 0 means unlimited disk space.
    default: 0
    key: CacheLimit
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <integer>
  - content: 'The path to the directory used to store cached content. Changing this setting manually doesn''t automatically move cached content from the old location to the new one. To move content automatically, use the Sharing preference''s Content Caching pane. The value must be (or end with) ''/Library/Application Support/Apple/AssetCache/Data''.


      A directory and its intermediates are created for the given data path if it doesn''t already exist. The directory is owned by ''_assetcache:_assetcache'' and has mode 0750. Its immediate parent directory (''.../Library/Application Support/Apple/AssetCache'') is owned by ''_assetcache:_assetcache'' and has mode ''0755''.'
    default: /Library/Application Support/Apple/AssetCache/Data
    key: DataPath
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <string>
  - content: If 'true', disables tethered caching.
    default: false
    key: DenyTetheredCaching
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: 'If ''true'', Content Caching displays exceptional conditions (alerts) as system notifications in the upper corner of the screen. Alerts were automatically displayed starting in macOS 10.13. In macOS 10.15 the alerts are off by default, but still available via this setting.

      Available in macOS 10.15 and later.'
    default: false
    key: DisplayAlerts
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: 'If ''true'', prevents the computer from sleeping as long as Content Caching is on (System Preferences > Sharing > Content Caching is on). Customers who want Content Caching to be as available as much as possible should turn this setting on.

      Available in macOS 10.15 and later.'
    default: false
    key: KeepAwake
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: An array of dictionaries describing a range of client IP addresses to serve.
    key: ListenRanges
    presence: optional
    subkeys: &id001
    - key: RangesItem
      subkeys:
      - content: The IP address type.
        default: IPv4
        key: type
        presence: optional
        rangelist:
        - IPv4
        - IPv6
        supportedOS:
          macOS:
            introduced: 10.13.4
        type: <string>
      - content: The first IP address in the range.
        key: first
        presence: required
        supportedOS:
          macOS:
            introduced: 10.13.4
        type: <string>
      - content: The last IP address in the range.
        key: last
        presence: required
        supportedOS:
          macOS:
            introduced: 10.13.4
        type: <string>
      type: <dictionary>
    subkeytype: Ranges
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <array>
  - content: If 'true', the content cache provides content to the clients in the 'ListenRanges'.
    default: false
    key: ListenRangesOnly
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: If 'true', the content cache provides content to the clients in the union of the 'ListenRanges', 'PeerListenRanges' and 'Parents'.
    default: true
    key: ListenWithPeersAndParents
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: If 'true', the content cache offers content to clients only on the same immediate local network only. No content is offered to clients on other networks reachable by the content cache. If 'LocalSubnetsOnly' is set to 'true', 'ListenRanges' will be ignored.
    default: true
    key: LocalSubnetsOnly
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: If 'true', the Content Cache logs the IP address and port number of the clients that request content.
    default: false
    key: LogClientIdentity
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: An array of the local IP addresses of other content caches that this cache should download from or upload to, instead of downloading from or uploading to Apple directly. Invalid addresses and addresses of computers that aren't content caches are ignored. Parent caches that become unavailable are skipped. If all parent content caches become unavailable, the content cache downloads from or uploads to Apple directly, until a parent content cache becomes available again.
    key: Parents
    presence: optional
    subkeys:
    - content: An IP address.
      key: ParentsItem
      presence: required
      type: <string>
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <array>
  - content: 'The policy to implement when choosing among more than one configured parent content cache. With every policy, parent caches that are temporarily unavailable are skipped.


      ''first-available'': Always use the first available parent in the Parents list. Use this policy to designate permanent primary, secondary, and subsequent parents.


      ''url-path-hash'': Hash the path part of the requested URL so that the same parent is always used for the same URL. This is useful for maximizing the size of the combined caches of the parents.


      ''random'': Choose a parent at random. Use this policy for load balancing.


      ''round-robin'': Rotate through the parents in order. Use this policy for load balancing.


      ''sticky-available'': Use the first available parent that is available in the Parents list until it becomes unavailable, then advance to the next one. Use this policy for designating floating primary, secondary, and subsequent parents.'
    default: round-robin
    key: ParentSelectionPolicy
    presence: optional
    rangelist:
    - first-available
    - url-path-hash
    - random
    - round-robin
    - sticky-available
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <string>
  - content: An array of dictionaries describing a range of peer IP addresses that the content cache uses to filter its list of peers to query for content. The content cache only queries peers in 'PeerFilterRanges'. When 'PeerFilterRanges' is an empty array, the content cache doesn't query any peers.
    key: PeerFilterRanges
    presence: optional
    subkeys: *id001
    subkeytype: Ranges
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <array>
  - content: An array of dictionaries describing a range of peer IP addresses the content cache responds to. When 'PeerListenRanges' is an empty array, the content cache responds with an error to all cache queries.
    key: PeerListenRanges
    presence: optional
    subkeys: *id001
    subkeytype: Ranges
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <array>
  - content: If 'true', the content cache only peers with other content caches on the same immediate local network, rather than with content caches that use the same public IP address as the device. When 'PeerLocalSubnetsOnly' is 'true', it overrides the configuration of 'PeerFilterRanges' and 'PeerListenRanges'. If the network changes, the local network peering restrictions update appropriately. If 'false', the content cache defers to 'PeerFilterRanges' and 'PeerListenRanges' for configuring the peering restrictions.
    default: true
    key: PeerLocalSubnetsOnly
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: The TCP port number on which the content cache accepts requests for uploads or downloads. Set the port to 0 to pick a random, available port.
    default: 0
    key: Port
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <integer>
  - content: An array of dictionaries describing a range of public IP addresses that the cloud servers should use for matching clients to content caches.
    key: PublicRanges
    presence: optional
    subkeys: *id001
    subkeytype: Ranges
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <array>
  title: Content Caching
com.apple.Dictionary:
  description: ''
  payload:
    content: Parental controls dictionary restrictions.
    payloadtype: com.apple.Dictionary
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables parental controls dictionary restrictions.
    key: parentalControl
    presence: required
    type: <boolean>
  title: 'Parental Controls: Dictionary'
com.apple.DirectoryService.managed:
  description: Directory Service
  payload:
    content: In macOS 10.9 and later, a configuration profile can be used to configure macOS to join an Active Directory (AD) domain. Advanced AD options available via Directory Utility or the dsconfigad command line tool can also be set using a configuration profile.
    payloadtype: com.apple.DirectoryService.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.8'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The Active Directory domain to join.
    key: HostName
    presence: required
    title: HostName
    type: <string>
  - content: The user name of the account for the domain.
    key: UserName
    presence: optional
    title: UserName
    type: <string>
  - content: The password of the account for the domain.
    key: Password
    presence: optional
    title: Password
    type: <string>
  - content: The client's identifier.
    key: ClientID
    presence: optional
    title: Client ID
    type: <string>
  - content: The directory service description.
    key: Description
    presence: optional
    title: Description
    type: <string>
  - content: The organizational unit where the joining computer object is added.
    key: ADOrganizationalUnit
    presence: optional
    title: ADOrganizationalUnit
    type: <string>
  - content: 'The network home protocol to use: ''afp'' or ''smb''.'
    key: ADMountStyle
    presence: optional
    title: ADMountStyle
    type: <string>
  - content: If 'true', enables the 'ADCreateMobileAccountAtLogin' key.
    default: false
    key: ADCreateMobileAccountAtLoginFlag
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    title: ADCreateMobileAccountAtLoginFlag
    type: <boolean>
  - content: If 'true', creates a mobile account at login.
    default: false
    key: ADCreateMobileAccountAtLogin
    presence: optional
    title: ADCreateMobileAccountAtLogin
    type: <boolean>
  - content: If 'true', enables the 'ADWarnUserBeforeCreatingMA' key.
    default: false
    key: ADWarnUserBeforeCreatingMAFlag
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    title: ADWarnUserBeforeCreatingMAFlag
    type: <boolean>
  - content: If 'true', enables the warning before creating the mobile account.
    default: false
    key: ADWarnUserBeforeCreatingMA
    presence: optional
    title: ADWarnUserBeforeCreatingMA
    type: <boolean>
  - content: If 'true', enables the 'ADForceHomeLocal' key.
    default: false
    key: ADForceHomeLocalFlag
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    title: ADForceHomeLocalFlag
    type: <boolean>
  - content: If 'true', forces a local home directory.
    default: false
    key: ADForceHomeLocal
    presence: optional
    title: ADForceHomeLocal
    type: <boolean>
  - content: If 'true', enables the 'ADUseWindowsUNCPath' key.
    default: false
    key: ADUseWindowsUNCPathFlag
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    title: ADUseWindowsUNCPathFlag
    type: <boolean>
  - content: If 'true', uses the UNC path from Active Directory to derive the network home location.
    default: false
    key: ADUseWindowsUNCPath
    presence: optional
    title: ADUseWindowsUNCPath
    type: <boolean>
  - content: If 'true', enables the 'ADAllowMultiDomainAuth' key.
    default: false
    key: ADAllowMultiDomainAuthFlag
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    title: ADAllowMultiDomainAuthFlag
    type: <boolean>
  - content: If 'true', allows authentication from any domain in the namespace.
    default: false
    key: ADAllowMultiDomainAuth
    presence: optional
    title: ADAllowMultiDomainAuth
    type: <boolean>
  - content: If 'true', enables the 'ADDefaultUserShell' key.
    default: false
    key: ADDefaultUserShellFlag
    presence: optional
    title: ADDefaultUserShellFlag
    type: <boolean>
  - content: The default user shell.
    key: ADDefaultUserShell
    presence: optional
    title: ADDefaultUserShell
    type: <string>
  - content: If 'true', enables the 'ADMapUIDAttribute' key.
    default: false
    key: ADMapUIDAttributeFlag
    presence: optional
    title: ADMapUIDAttributeFlag
    type: <boolean>
  - content: The map UID to attribute.
    key: ADMapUIDAttribute
    presence: optional
    title: ADMapUIDAttribute
    type: <string>
  - content: If 'true', enables the 'ADMapGIDAttribute' key.
    default: false
    key: ADMapGIDAttributeFlag
    presence: optional
    title: ADMapGIDAttributeFlag
    type: <boolean>
  - content: The map GID to attribute.
    key: ADMapGIDAttribute
    presence: optional
    title: ADMapGIDAttribute
    type: <string>
  - content: If 'true', enables the 'ADMapGGIDAttributeFlag' key.
    default: false
    key: ADMapGGIDAttributeFlag
    presence: optional
    title: ADMapGGIDAttributeFlag
    type: <boolean>
  - content: The map group GID to attribute.
    key: ADMapGGIDAttribute
    presence: optional
    title: ADMapGGIDAttribute
    type: <string>
  - content: If 'true', enables the 'ADPreferredDCServer' key.
    default: false
    key: ADPreferredDCServerFlag
    presence: optional
    title: ADPreferredDCServerFlag
    type: <boolean>
  - content: The preferred domain server.
    key: ADPreferredDCServer
    presence: optional
    title: ADPreferredDCServer
    type: <string>
  - content: If 'true', enables the 'ADDomainAdminGroupList' key.
    default: false
    key: ADDomainAdminGroupListFlag
    presence: optional
    title: ADDomainAdminGroupListFlag
    type: <boolean>
  - content: The list of Active Directory groups that are granted admin access.
    key: ADDomainAdminGroupList
    presence: optional
    subkeys:
    - key: ADDomainAdminGroupListItem
      type: <string>
    title: ADDomainAdminGroupList
    type: <array>
  - content: If 'true', enables the 'ADNamespace' key.
    default: false
    key: ADNamespaceFlag
    presence: optional
    title: ADNamespaceFlag
    type: <boolean>
  - content: The primary user account naming convention; either 'forest' or 'domain'.
    key: ADNamespace
    presence: optional
    title: ADNamespace
    type: <string>
  - content: If 'true', enables the 'ADPacketSign' key.
    default: false
    key: ADPacketSignFlag
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.8'
    title: ADPacketSignFlag
    type: <boolean>
  - content: The packet signing policy.
    key: ADPacketSign
    presence: optional
    title: ADPacketSign
    type: <string>
  - content: If 'true', enables the 'ADPacketEncrypt' key.
    default: false
    key: ADPacketEncryptFlag
    presence: optional
    title: ADPacketEncryptFlag
    type: <boolean>
  - content: The packet encryption policy.
    key: ADPacketEncrypt
    presence: optional
    title: ADPacketEncrypt
    type: <string>
  - content: If 'true', enables the 'ADRestrictDDNS' key.
    default: false
    key: ADRestrictDDNSFlag
    presence: optional
    title: ADRestrictDDNSFlag
    type: <boolean>
  - content: An array of strings representing the interfaces that are allowed for dynamic DNS updates (for example, en0, en1, and so on).
    key: ADRestrictDDNS
    presence: optional
    subkeys:
    - key: ADRestrictDDNSItem
      type: <string>
    supportedOS:
      macOS:
        introduced: '10.8'
    title: ADRestrictDDNS
    type: <array>
  - content: If true, enables the 'ADTrustChangePassIntervalDays 'key.
    default: false
    key: ADTrustChangePassIntervalDaysFlag
    presence: optional
    title: ADTrustChangePassIntervalDaysFlag
    type: <boolean>
  - content: The number of days before requiring a change of the computer trust account password. '0' disables the feature.
    key: ADTrustChangePassIntervalDays
    presence: optional
    title: ADTrustChangePassIntervalDays
    type: <integer>
  title: Directory Service
com.apple.DiscRecording:
  description: ''
  payload:
    payloadtype: com.apple.DiscRecording
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: 'If ''off'', disables disc burning.


      If ''on'', allows normal default operation. Setting this key to ''on'' doesn''t enable disc burn support if it has already been disabled by other mechanisms or preferences. It also must be enabled with the Finder profile.


      If ''authenticate'', requires authentication.'
    key: BurnSupport
    presence: required
    rangelist:
    - 'off'
    - authenticate
    - 'on'
    type: <string>
  title: 'Media Management: Disc Burning'
com.apple.MCX(Accounts):
  description: ''
  payload:
    payloadtype: com.apple.MCX
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables the guest account.
    default: false
    key: EnableGuestAccount
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.7'
    type: <boolean>
  - content: If 'true', disables the guest account. This property has no effect if 'EnableGuestAccount' is 'true'.
    default: false
    key: DisableGuestAccount
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.7'
    type: <boolean>
  title: Accounts
com.apple.MCX(EnergySaver):
  description: ''
  payload:
    payloadtype: com.apple.MCX
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The settings for a desktop computer.
    key: com.apple.EnergySaver.desktop.ACPower
    presence: optional
    subkeys: &id002
    - content: The display sleep time, in minutes. A value of 0 means never.
      key: Display Sleep Timer
      presence: optional
      range:
        max: 180
        min: 1
      rangelist:
      - 0
      type: <integer>
    - content: The disk sleep time, in minutes. A value of 0 means never.
      key: Disk Sleep Timer
      presence: optional
      range:
        max: 180
        min: 1
      rangelist:
      - 0
      type: <integer>
    - content: System sleep time, in minutes. A value of 0 means never.
      key: System Sleep Timer
      presence: optional
      range:
        max: 180
        min: 1
      rangelist:
      - 0
      type: <integer>
    - content: May not be available on all systems.
      key: Reduce Processor Speed
      presence: optional
      rangelist:
      - 0
      - 1
      type: <integer>
    - content: May not be available on all systems.
      key: Dynamic Power Step
      presence: optional
      rangelist:
      - 0
      - 1
      type: <integer>
    - content: If 'true', enables 'Wake for network access.'
      key: Wake on LAN
      presence: optional
      rangelist:
      - 0
      - 1
      type: <integer>
    - content: If 'true', enables 'Wake for modem ring.'
      key: Wake On Modem Ring
      presence: optional
      rangelist:
      - 0
      - 1
      type: <integer>
    - content: If 'true', enables 'Start up automatically after a power failure.'
      key: Automatic Restart On Power Loss
      presence: optional
      rangelist:
      - 0
      - 1
      type: <integer>
    subkeytype: PowerSettings
    type: <dictionary>
  - content: The settings for a laptop computer using AC power.
    key: com.apple.EnergySaver.portable.ACPower
    presence: optional
    subkeys: *id002
    subkeytype: PowerSettings
    type: <dictionary>
  - content: The settings for a laptop computer using battery power.
    key: com.apple.EnergySaver.portable.BatteryPower
    presence: optional
    subkeys: *id002
    subkeytype: PowerSettings
    type: <dictionary>
  - content: The schedule for turning a computer on and off.
    key: com.apple.EnergySaver.desktop.Schedule
    presence: optional
    subkeys:
    - content: The schedule for turning the device on.
      key: RepeatingPowerOn
      presence: optional
      subkeys: &id003
      - content: The type of action defined by this schedule.
        key: eventtype
        presence: required
        rangelist:
        - wake
        - poweron
        - wakepoweron
        - sleep
        - shutdown
        - restart
        type: <string>
      - content: 'One or more days of the week in an unsigned integer bitmap:

          * ''1'' = Mon

          * ''2'' = Tue

          * ''4'' = Wed

          * ''8'' = Thu

          * ''16'' = Fri

          * ''32'' = Sat

          * ''64'' = Sun'
        key: weekdays
        presence: optional
        type: <integer>
      - content: The time, in minutes, since midnight.
        key: time
        presence: optional
        type: <integer>
      subkeytype: RepeatingPowerItem
      type: <dictionary>
    - content: The schedule for turning the device off.
      key: RepeatingPowerOff
      presence: optional
      subkeys: *id003
      subkeytype: RepeatingPowerItem
      type: <dictionary>
    subkeytype: EnergySaver Schedule
    type: <dictionary>
  - content: If 'true', disables sleep.
    default: false
    key: SleepDisabled
    presence: optional
    type: <boolean>
  - content: If 'true', prevents the OS from storing a temporary FileVault key in SMC or RAM for standby.
    default: false
    key: DestroyFVKeyOnStandby
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.10'
    type: <boolean>
  title: Energy Saver
com.apple.MCX(FileVault2):
  description: ''
  payload:
    content: The FileVault accounts payload sets up options for enabling FileVault.
    payloadtype: com.apple.MCX
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: Set to 'true' to prevent FileVault from being disabled.
    default: false
    key: dontAllowFDEDisable
    presence: optional
    type: <boolean>
  - content: Set to 'true' to prevent FileVault from being enabled.
    default: false
    key: dontAllowFDEEnable
    presence: optional
    type: <boolean>
  - content: Set to 'true' to prevent storing the FileVault key across restarts.
    default: false
    key: DestroyFVKeyOnStandby
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    type: <boolean>
  title: FDE FileVault Options
com.apple.MCX(Mobililty):
  description: ''
  payload:
    content: Sets up mobile account options for network based user accounts.
    payloadtype: com.apple.MCX
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', creates the mobile account at login time.
    default: false
    key: com.apple.cachedaccounts.CreateAtLogin
    presence: optional
    type: <boolean>
  - content: If 'true', asks the user if the mobile account should be created and allow the user to not create it.
    default: false
    key: com.apple.cachedaccounts.WarnOnCreate
    presence: optional
    type: <boolean>
  - content: If 'true', allows the user to stop the prompts about mobile account creation every time the user logs in. This key is only valid if 'com.apple.cachedaccounts.WarnOnCreate' is set to 'true'.
    default: false
    key: cachedaccounts.WarnOnCreate.allowNever
    presence: optional
    type: <boolean>
  - content: 'The minimum number of seconds a mobile account can exist before an automatic attempt is made to remove the mobile account.

      Set to ''0'' to try to remove it at next login or logout time. Set to ''-1'' to never try to remove the mobile account.'
    default: -1
    key: cachedaccounts.expiry.delete.disusedSeconds
    presence: optional
    type: <integer>
  - content: If 'true', bypasses the secure token authorization dialog. This dialog only appears on APFS volumes.
    default: false
    key: cachedaccounts.askForSecureTokenAuthBypass
    presence: optional
    type: <boolean>
  title: Mobile Accounts
com.apple.MCX(TimeServer):
  description: ''
  payload:
    content: Settings for time zone and server
    payloadtype: com.apple.MCX
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: 10.12.4
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The NTP server to connect to. Use commas to separate multiple time servers.
    key: timeServer
    presence: optional
    type: <string>
  - content: The time zone path location string in '/usr/share/zoneinfo/'; for example, 'America/Denver' or 'Zulu'.
    key: timeZone
    presence: optional
    type: <string>
  title: Time Server
com.apple.MCX(WiFi):
  description: ''
  payload:
    payloadtype: com.apple.MCX
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If YES, requires administrator authorization to enable IBSS.
    default: false
    key: RequireAdminForIBSS
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    type: <boolean>
  - content: If YES, requires administrator authorization for network changes.
    default: false
    key: RequireAdminForAirPortNetworkChange
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    type: <boolean>
  - content: If YES, requires administrator authorization to turn Wi-Fi on or off.
    default: false
    key: RequireAdminToTurnAirPortOnOff
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    type: <boolean>
  title: Wi-Fi Managed Settings
com.apple.MCX.FileVault2:
  description: ''
  payload:
    content: The FileVault payload only works on macOS to enable or disable FileVault. Starting with macOS 10.15, this payload requires UAMDM to enable FileVault.
    payloadtype: com.apple.MCX.FileVault2
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: true
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables FileVault.
    key: Enable
    presence: required
    rangelist:
    - 'On'
    - 'Off'
    type: <string>
  - content: If 'true', defers enabling FileVault until the designated user logs out. For details, see 'fdesetup(8)'. The person enabling FileVault must be either a local user or a mobile account user.
    default: false
    key: Defer
    presence: optional
    type: <boolean>
  - content: If 'true', enables a prompt for missing user name or password fields.
    default: false
    key: UserEntersMissingInfo
    presence: optional
    type: <boolean>
  - content: If 'true', creates a personal recovery key and displays it to the user.
    default: true
    key: UseRecoveryKey
    presence: optional
    type: <boolean>
  - content: If 'false', prevents display of the personal recovery key to the user after FileVault is enabled.
    default: true
    key: ShowRecoveryKey
    presence: optional
    type: <boolean>
  - content: The path to the location where the recovery key and computer information property list are stored.
    key: OutputPath
    presence: optional
    type: <string>
  - content: The DER-encoded certificate data if 'UseRecoveryKey' is enabled.
    key: Certificate
    presence: optional
    type: <data>
  - content: The UUID of the payload within the same profile containing the asymmetric recovery key certificate payload.
    key: PayloadCertificateUUID
    presence: optional
    type: <string>
  - content: The user name of the Open Directory user to be added to FileVault.
    key: Username
    presence: optional
    type: <string>
  - content: The password of the Open Directory user to be added to FileVault. Use the 'UserEntersMissingInfo' key if you want to prompt for this information.
    key: Password
    presence: optional
    type: <string>
  - content: If 'true' and no certificate information is provided in this payload, the keychain created at '/Library/Keychains/FileVaultMaster.keychain' is used when the institutional recovery key is added.
    default: false
    key: UseKeychain
    presence: optional
    type: <boolean>
  - content: "The maximum number of times users can bypass enabling FileVault before being required to enable it to log in. If the value is '0', the user will be required to enabled FileVault the next time they attempt to log in. Setting this key to '\u20131' disables the feature."
    key: DeferForceAtUserLoginMaxBypassAttempts
    presence: optional
    range:
      max: 9999
      min: -1
    type: <integer>
  - content: If 'true', prevents requests for enabling FileVault at user logout time.
    default: false
    key: DeferDontAskAtUserLogout
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.10'
    type: <boolean>
  title: FDE FileVault
com.apple.MCX.TimeMachine:
  payload:
    payloadtype: com.apple.MCX.TimeMachine
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', performs automatic backups at regular intervals.
    default: true
    key: AutoBackup
    presence: optional
    type: <boolean>
  - content: If true, backs up only the startup volume by default.
    default: false
    key: BackupAllVolumes
    presence: optional
    type: <boolean>
  - content: The URL of the backup destination.
    key: BackupDestURL
    presence: required
    type: <string>
  - content: The backup size limit, in megabytes. Set to 0 for unlimited.
    default: 0
    key: BackupSizeMB
    presence: optional
    type: <integer>
  - content: If 'true', skips system files and folders by default.
    default: false
    key: BackupSkipSys
    presence: optional
    type: <boolean>
  - content: If 'true', create local backup snapshots when not connected to the network.
    default: true
    key: MobileBackups
    presence: optional
    type: <boolean>
  - content: The list of paths to back up besides the startup volume.
    key: BasePaths
    presence: optional
    subkeys:
    - key: BasePathItem
      presence: required
      type: <string>
    type: <array>
  - content: The path to skip from start volume.
    key: SkipPaths
    presence: optional
    subkeys:
    - key: SkipPathItem
      presence: required
      type: <string>
    type: <array>
  title: Time Machine
com.apple.ManagedClient.preferences:
  description: ''
  payload:
    payloadtype: com.apple.ManagedClient.preferences
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The dictionary containing app preference domains.
    key: PreferenceDomain
    presence: required
    subkeys:
    - content: The dictionary of forced settings.
      key: Forced
      presence: required
      subkeys: &id004
      - key: Settings
        presence: required
        subkeys:
        - content: The dictionary of settings.
          key: mcx_preference_settings
          presence: required
          subkeys:
          - content: The setting/value pairs.
            key: ANY
            presence: optional
            type: <any>
          type: <dictionary>
        type: <dictionary>
      type: <array>
    - content: The dictionary of one-time settings.
      key: Set-Once
      presence: required
      subkeys: *id004
      type: <array>
    type: <dictionary>
  title: Managed Preferences
com.apple.NSExtension:
  description: ''
  payload:
    content: Specifies which NSExtension extensions are to be allowed or disallowed on a system. Extensions can be managed by bundleID allow/deny lists and "extension points".
    payloadtype: com.apple.NSExtension
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.13'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: An array of identifiers for extensions that are allowed to run on the system.
    key: AllowedExtensions
    presence: optional
    subkeys:
    - content: An extension identifier.
      key: AllowedExtensionsItem
      presence: required
      type: <string>
    type: <array>
  - content: An array of identifiers for extensions that aren't allowed to run on the system.
    key: DeniedExtensions
    presence: optional
    subkeys:
    - content: An extension identifier.
      key: DeniedExtensionsItem
      presence: required
      type: <string>
    type: <array>
  - content: An array of extension points for extensions that aren't allowed to run on the system.
    key: DeniedExtensionPoints
    presence: optional
    subkeys:
    - content: An extension identifier.
      key: DeniedExtensionPointsItem
      presence: required
      type: <string>
    type: <array>
  title: NSExtension Management
com.apple.SetupAssistant.managed:
  description: ''
  payload:
    content: On macOS, this payload can specify Setup Assistant options for either the system or particular users.
    payloadtype: com.apple.SetupAssistant.managed
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '14.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.12'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', skips the Apple ID setup window.
    default: false
    key: SkipCloudSetup
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', skips the Siri setup window.
    default: false
    key: SkipSiriSetup
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', skips the Privacy consent window.
    default: false
    key: SkipPrivacySetup
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: If 'true', skips the iCloud Storage window.
    default: false
    key: SkipiCloudStorageSetup
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: 10.13.4
    type: <boolean>
  - content: If 'true', skips the True Tone Display window.
    default: false
    key: SkipTrueTone
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: 10.13.6
    type: <boolean>
  - content: If 'true', skips the Choose Your Look window.
    default: false
    key: SkipAppearance
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.14'
    type: <boolean>
  - content: If true, skips the Touch ID setup window.
    default: false
    key: SkipTouchIDSetup
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: If true, skips the Screen Time window.
    default: false
    key: SkipScreenTime
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: Skips Accessibility window
    default: false
    key: SkipAccessibility
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.0'
    type: <boolean>
  - content: 'An array strings describing setup items to skip. SkipKeys provides a list of valid strings and their meanings.

      Available in iOS 14 and later.'
    key: SkipSetupItems
    presence: optional
    subkeys:
    - key: SkipSetupItems
      type: <string>
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: n/a
    type: <array>
  - content: Skips Unlock With Apple Watch window
    default: false
    key: SkipUnlockWithWatch
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '12.0'
    type: <boolean>
  title: Setup Assistant
com.apple.ShareKitHelper:
  description: ''
  payload:
    content: macOS only. Specifies which ShareKit plugin can be accessed on client. Both allow and disallow lists can be specified.
    payloadtype: com.apple.ShareKitHelper
    supportedOS:
      macOS:
        allowmanualinstall: true
        deprecated: '10.12'
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The list of plugin IDs that show up in the user's Share menu. If this array exists, only these items are permitted.
    key: SHKAllowedShareServices
    presence: optional
    subkeys:
    - content: A plugin ID.
      key: SHKAllowedShareServicesItem
      presence: required
      type: <string>
    type: <array>
  - content: The list of plugin IDs that won't show up in the user's Share menu. This key is used only if there is no 'SHKAllowedShareServices' key.
    key: SHKDeniedShareServices
    presence: optional
    subkeys:
    - content: A plugin ID.
      key: SHKDeniedShareServicesItem
      presence: required
      type: <string>
    type: <array>
  title: ShareKit
com.apple.SoftwareUpdate:
  description: Software Update Managed Settings
  payload:
    content: Software update catalog options.
    payloadtype: com.apple.SoftwareUpdate
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The URL of the software update catalog. This property is not supported in macOS 11 and later.
    key: CatalogURL
    presence: optional
    supportedOS:
      macOS:
        deprecated: '11.0'
        introduced: '10.7'
        userenrollment:
          mode: forbidden
    type: <string>
  - content: If 'true', prerelease software can be installed on this computer.
    default: true
    key: AllowPreReleaseInstallation
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    title: Allow Pre-Release Update Installation
    type: <boolean>
  - content: If 'true', restrict app installations to admin users. This key has the same function as the  'restrict-store-require-admin-to-install' key in the 'com.apple.appstore' payload.
    default: false
    key: restrict-software-update-require-admin-to-install
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.14'
    type: <boolean>
  - content: If 'false', restricts the 'Install macOS Updates' option and prevents the user from changing the option.
    default: true
    key: AutomaticallyInstallMacOSUpdates
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: If 'false', deselects the 'Install app updates from the App Store' option and prevents the user from changing the option.
    default: true
    key: AutomaticallyInstallAppUpdates
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: If 'false', deselects the 'Check for updates' option and prevents the user from changing the option.
    default: true
    key: AutomaticCheckEnabled
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: If 'false', deselects the 'Download new updates when available from the App Store' option and prevents the user from changing the option.
    default: true
    key: AutomaticDownload
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: If 'false', disables the automatic installation of critical updates and prevents the user from changing the 'Install system data files and security updates' option.
    default: true
    key: CriticalUpdateInstall
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: If 'false', restricts the automatic installation of configuration data.
    default: true
    key: ConfigDataInstall
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  title: Software Update
com.apple.SystemConfiguration:
  payload:
    payloadtype: com.apple.SystemConfiguration
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The dictionary containing all the proxies for this device.
    key: Proxies
    presence: required
    subkeys:
    - content: If 'true', enables FTP proxy.
      key: FTPEnable
      presence: optional
      type: <integer>
    - content: If 'true', enables passive FTP mode.
      key: FTPPassive
      presence: optional
      type: <integer>
    - content: The FTP proxy port.
      key: FTPPort
      presence: optional
      type: <integer>
    - content: The host name or IP address for the FTP proxy.
      key: FTPProxy
      presence: optional
      type: <string>
    - content: If 'true', enables gopher proxy.
      key: GopherEnable
      presence: optional
      type: <integer>
    - content: The gopher proxy port.
      key: GopherPort
      presence: optional
      type: <integer>
    - content: The host name or IP address for the gopher proxy.
      key: GopherProxy
      presence: optional
      type: <string>
    - content: If 'true', enables web proxy.
      key: HTTPEnable
      presence: optional
      type: <integer>
    - content: The web proxy port.
      key: HTTPPort
      presence: optional
      type: <integer>
    - content: The host name or IP address for the web proxy.
      key: HTTPProxy
      presence: optional
      type: <string>
    - content: If 'true', enables secure web proxy.
      key: HTTPSEnable
      presence: optional
      type: <integer>
    - content: The secure web proxy port.
      key: HTTPSPort
      presence: optional
      type: <integer>
    - content: The host name or IP address for the secure web proxy.
      key: HTTPSProxy
      presence: optional
      type: <string>
    - content: If 'true', enables automatic proxy configuration.
      key: ProxyAutoConfigEnable
      presence: optional
      type: <integer>
    - content: The automatic proxy configuration URL.
      key: ProxyAutoConfigURLString
      presence: optional
      type: <string>
    - content: If 1, allows client to log into captive portal network.
      key: ProxyCaptiveLoginAllowed
      presence: optional
      supportedOS:
        macOS:
          introduced: '10.9'
      type: <integer>
    - content: If 'true', enable streaming proxy.
      key: RTSPEnable
      presence: optional
      type: <integer>
    - content: The streaming proxy port.
      key: RTSPPort
      presence: optional
      type: <integer>
    - content: The host name or IP address for the streaming proxy.
      key: RTSPProxy
      presence: optional
      type: <string>
    - content: If 'true', enable the SOCKS proxy.
      key: SOCKSEnable
      presence: optional
      type: <integer>
    - content: The SOCKS proxy port.
      key: SOCKSPortinteger
      presence: optional
      type: <integer>
    - content: The host name or IP address for the SOCKS proxy.
      key: SOCKSProxy
      presence: optional
      type: <string>
    - content: 'If ''1'', enables fallback. Default is ''1''.

        For managed devices, if not supplied, the default is ''0''.'
      key: FallBackAllowed
      presence: optional
      type: <integer>
    - content: The list of hosts and domains that should bypass proxy settings.
      key: ExceptionsList
      presence: optional
      subkeys:
      - content: Bypass proxy settings for these Hosts & Domains
        key: Exception
        presence: required
        type: <string>
      type: <array>
    type: <dictionary>
  title: Network Proxy Configuration
com.apple.TCC.configuration-profile-policy:
  description: Configures Security Preferences:Privacy settings
  payload:
    payloadtype: com.apple.TCC.configuration-profile-policy
    supportedOS:
      macOS:
        allowmanualinstall: false
        devicechannel: true
        introduced: '10.14'
        requiresdep: false
        userapprovedmdm: true
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: A dictionary whose keys are limited to the privacy policy control services.  In the case of conflicting specifications, the most restrictive setting (deny) is used.
    key: Services
    presence: required
    subkeys:
    - content: Specifies the policies for contact information managed by the Contacts.app.
      key: AddressBook
      presence: optional
      subkeys: &id005
      - key: IdentityDict
        subkeys:
        - content: The bundle ID or installation path of the binary.
          key: Identifier
          presence: required
          type: <string>
        - content: The type of identifier value. Application bundles must be identified by bundle ID. Nonbundled binaries must be identified by installation path. Helper tools embedded within an application bundle automatically inherit the permissions of their enclosing app bundle.
          key: IdentifierType
          presence: required
          rangelist:
          - bundleID
          - path
          type: <string>
        - content: "Obtained via the command ''codesign \u2013display -r -''."
          key: CodeRequirement
          presence: required
          type: <string>
        - content: If 'true', statically validate the code requirement. Used only if the process invalidates its dynamic code signature.
          default: false
          key: StaticCode
          presence: optional
          type: <boolean>
        - content: If 'true', access is granted; otherwise, the process doesn't have access. The user isn't prompted and can't change this value.
          key: Allowed
          presence: required
          type: <boolean>
        - content: 'The ''Authorization'' key is an optional replacement for the ''Allowed'' key. Every payload must specify either ''Authorization'' or ''Allowed'', but not both.

            ''Allow'': Equivalent to a ''true'' value for the ''Allowed'' key.

            ''Deny'': Equivalent to a ''false'' value for the ''Allowed'' key.

            ''AllowStandardUserToSetSystemService:'' allows a standard (non-admin) user to configure the permissions for the specified app in the Privacy preferences for services that otherwise require admin authorization. ''AllowStandardUserToSetSystemService'' is only valid for the ''ListenEvent'' and ''ScreenCapture'' services.

            Available in macOS 11 and later.'
          key: Authorization
          presence: optional
          rangelist:
          - Allow
          - Deny
          - AllowStandardUserToSetSystemService
          supportedOS:
            macOS:
              introduced: '11.0'
          type: <string>
        - content: Not used.
          key: Comment
          presence: optional
          type: <string>
        - content: The identifier of the process receiving an AppleEvent sent by the Identifier process. This identifier is required for AppleEvents service; not valid for other services.
          key: AEReceiverIdentifier
          presence: optional
          type: <string>
        - content: The type of AEReceiverIdentifier value, either 'bundleID' or 'path'. This setting is required for AppleEvents service; not valid for other services.
          key: AEReceiverIdentifierType
          presence: optional
          rangelist:
          - bundleID
          - path
          type: <string>
        - content: The code requirement for the receiving binary. This code requirement is required for AppleEvents service; not valid for other services.
          key: AEReceiverCodeRequirement
          presence: optional
          type: <string>
        type: <dictionary>
      subkeytype: Identity
      type: <array>
    - content: Specifies the policies for calendar information managed by the Calendar.app.
      key: Calendar
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: Specifies the policies for reminders information managed by the Reminders app.
      key: Reminders
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: The pictures managed by the Photos app in '~/Pictures/.photoslibrary'.
      key: Photos
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: A system camera. Access to the camera can't be given in a profile; it can only be denied.
      key: Camera
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: A system microphone. Access to the microphone can't be given in a profile; it can only be denied.
      key: Microphone
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: Specifies the policies for the app via the Accessibility subsystem.
      key: Accessibility
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: Specifies the policies for the application to use CoreGraphics APIs to send CGEvents to the system event stream.
      key: PostEvent
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: Allows the application access to all protected files, including system administration files.
      key: SystemPolicyAllFiles
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: Allows the application access to some files used in system administration.
      key: SystemPolicySysAdminFiles
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: Specifies the policies for the app sending restricted AppleEvents to another process.
      key: AppleEvents
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      type: <array>
    - content: Allows the application to access Apple Music, music and video activity, and the media library.
      key: MediaLibrary
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows a File Provider application to know when the user is using files managed by the File Provider.
      key: FileProviderPresence
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows the application to use CoreGraphics and HID APIs to listen to (receive) CGEvents and HID events from all processes. Access to these events can't be given in a profile; it can only be denied.
      key: ListenEvent
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows the application to capture (read) the contents of the system display. Access to the contents can't be given in a profile; it can only be denied.
      key: ScreenCapture
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows the application to use the system Speech Recognition facility and to send speech data to Apple.
      key: SpeechRecognition
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows the application to access files in the user's Desktop folder.
      key: SystemPolicyDesktopFolder
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows the application to access files in the user's Documents folder.
      key: SystemPolicyDocumentsFolder
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows the application to access files in the user's Downloads folder.
      key: SystemPolicyDownloadsFolder
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows the application to access files on network volumes.
      key: SystemPolicyNetworkVolumes
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows the application to access files on removable volumes.
      key: SystemPolicyRemovableVolumes
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '10.15'
      type: <array>
    - content: Allows the application to update or delete other apps. Available in macOS 13 and later.
      key: SystemPolicyAppBundles
      presence: optional
      subkeys: *id005
      subkeytype: Identity
      supportedOS:
        macOS:
          introduced: '13.0'
      type: <array>
    type: <dictionary>
  title: Privacy Preferences Policy Control
com.apple.airplay:
  description: AirPlay settings
  payload:
    content: macOS supports more than one payload, iOS does not. Supported on the user channel for macOS only.
    payloadtype: com.apple.airplay
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '7.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.10'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: If present, only AirPlay destinations in this list are available to the device. This allow list applies to supervised devices.
    key: AllowList
    presence: optional
    subkeys: &id006
    - key: AllowListItem
      presence: required
      subkeys:
      - content: The device ID of the AirPlay destination in the format 'xx:xx:xx:xx:xx:xx'. This field isn't case-sensitive.
        format: ^([0-9A-Fa-f]{2}:){5}([0-9A-Fa-f]{2})$
        key: DeviceID
        presence: required
        title: Device ID
        type: <string>
      supportedOS:
        iOS:
          introduced: '7.0'
          supervised: true
          userenrollment:
            mode: forbidden
        macOS:
          introduced: '10.10'
          userenrollment:
            mode: ignored
      title: AllowList Content Item
      type: <dictionary>
    supportedOS:
      iOS:
        introduced: '14.5'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '11.3'
        userenrollment:
          mode: ignored
    title: AllowList
    type: <array>
  - content: 'If present, sets passwords for known AirPlay destinations.

      Using multiple entries for the same destination, whether within the same payload or across multiple installed payloads, is an error and results in undefined behavior.'
    key: Passwords
    presence: optional
    subkeys:
    - key: PasswordsItem
      presence: required
      subkeys:
      - content: The name of the AirPlay destination; used in iOS.
        key: DeviceName
        presence: required
        supportedOS:
          macOS:
            introduced: n/a
        title: Device Name
        type: <string>
      - content: The password for the AirPlay destination.
        key: Password
        presence: required
        title: Password
        type: <string>
      - content: The device ID of the AirPlay destination; used in macOS.
        key: DeviceID
        presence: required
        supportedOS:
          iOS:
            introduced: n/a
        type: <string>
      title: Password Content Item
      type: <dictionary>
    title: Passwords
    type: <array>
  - content: Use 'AllowList' instead. As of macOS 11.3 and iOS 14.5 this key is deprecated.
    key: Whitelist
    presence: optional
    subkeys: *id006
    supportedOS:
      iOS:
        deprecated: '14.5'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        deprecated: '11.3'
        userenrollment:
          mode: ignored
    title: Whitelist
    type: <array>
  title: AirPlay
com.apple.airplay.security:
  description: AirPlay Security settings
  payload:
    content: Manages the AirPlay Security settings on Apple TV (Settings > AirPlay > Security). Use this payload to lock Apple TV to a particular style of AirPlay security. The setting can enable/disable an on-screen passcode, or require a specific password phrase.
    payloadtype: com.apple.airplay.security
    supportedOS:
      tvOS:
        allowmanualinstall: true
        introduced: '11.0'
        supervised: false
  payloadkeys:
  - content: 'The security policy for AirPlay.

      ''PASSCODE_ONCE'' requires an onscreen passcode on first connection from a device. Subsequent connections from the same device aren''t prompted.

      ''PASSCODE_ALWAYS'' requires an onscreen passcode for every AirPlay connection. After an AirPlay connection ends, reconnecting within 30 seconds is allowed without a password.


      ''PASSWORD'' requires a passphrase as specified in the ''Password'' key.


      ''NONE'' was deprecated in tvOS 11.3. Existing profiles using ''NONE'' get the ''PASSWORD_ONCE'' behavior.'
    key: SecurityType
    presence: required
    rangelist:
    - PASSCODE_ONCE
    - PASSCODE_ALWAYS
    - PASSWORD
    title: Security Type
    type: <string>
  - content: 'The access policy for AirPlay.

      ''ANY'' allows connections from both Ethernet/WiFi and Apple Wireless Direct Link.

      ''WIFI_ONLY'' allows connections only from devices on the same Ethernet/WiFi network as Apple TV.'
    key: AccessType
    presence: required
    rangelist:
    - ANY
    - WIFI_ONLY
    title: Access Type
    type: <string>
  - content: The AirPlay password; required if SecurityType is 'PASSWORD'.
    key: Password
    presence: optional
    title: Password
    type: <string>
  title: AirPlay Security
com.apple.airprint:
  description: Use this section to define settings for AirPrint.
  payload:
    payloadtype: com.apple.airprint
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '7.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.10'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: An array of AirPrint printers that are presented to the user.
    key: AirPrint
    presence: required
    subkeys:
    - key: AirPrintItem
      subkeys:
      - content: The IP address or hostname of the AirPrint destination.
        key: IPAddress
        presence: required
        supportedOS:
          iOS:
            introduced: '7.0'
        title: IP Address
        type: <string>
      - content: 'The resource path associated with the printer. This path corresponds to the ''rp'' parameter of the ''_ipps.tcp'' Bonjour record. For example:

          * ''printers/Canon_MG5300_series''

          * ''printers/Xerox_Phaser_7600''

          * ''ipp/print''

          * ''Epson_IPP_Printer'''
        key: ResourcePath
        presence: required
        supportedOS:
          iOS:
            introduced: '7.0'
        title: Resource Path
        type: <string>
      - content: The listening port of the AirPrint destination. Available only in iOS 11 and later.
        key: Port
        presence: optional
        range:
          max: 65535
          min: 0
        supportedOS:
          iOS:
            introduced: '11.0'
          macOS:
            introduced: n/a
        title: Port Number
        type: <integer>
      - content: If 'true', AirPrint connections are secured by Transport Layer Security (TLS). Available only in iOS 11 and later.
        default: false
        key: ForceTLS
        presence: optional
        supportedOS:
          iOS:
            introduced: '11.0'
          macOS:
            introduced: n/a
        title: Force TLS
        type: <boolean>
      title: Identifier
      type: <dictionary>
    title: Air print
    type: <array>
  title: AirPrint
com.apple.apn.managed:
  description: ''
  payload:
    content: 'Not supported in macOS.

      This technically does install on watchOS but we are removing the supportedOS dictionary. The cellular payload should be used instead.

      Only applies to the preferred data SIM.

      Deprecated. Use Cellular instead.'
    payloadtype: com.apple.apn.managed
    supportedOS:
      iOS:
        allowmanualinstall: true
        deprecated: '7.0'
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The list of access point names (APNs).
    key: DefaultsData
    presence: required
    subkeys:
    - content: An array of APN dictionaries (`APN.DefaultsData.Apns`).
      key: apns
      presence: required
      subkeys:
      - key: apnsItem
        subkeys:
        - content: This string specifies the Access Point Name.
          key: apn
          presence: required
          type: <string>
        - content: This string specifies the user name for this APN. If it is missing, the device prompts for it during profile installation.
          key: username
          presence: optional
          type: <string>
        - content: This data represents the password for the user for this APN. For obfuscation purposes, the password is encoded. If it is missing from the payload, the device prompts for the password during profile installation.
          key: password
          presence: optional
          type: <data>
        - content: The IP address or URL of the APN proxy.
          key: proxy
          presence: optional
          type: <string>
        - content: The port number of the APN proxy.
          key: proxyPort
          presence: optional
          type: <integer>
        type: <dictionary>
      type: <array>
    type: <dictionary>
  - content: The domain name.
    key: DefaultsDomainName
    presence: required
    rangelist:
    - com.apple.managedCarrier
    type: <string>
  title: APN
com.apple.app.lock:
  description: App Lock (Supervised Only)
  payload:
    payloadtype: com.apple.app.lock
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '6.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: true
        userenrollment:
          mode: forbidden
      tvOS:
        allowmanualinstall: true
        introduced: '10.2'
        supervised: true
  payloadkeys:
  - content: A dictionary that contains information about the app.
    key: App
    presence: required
    subkeys:
    - content: The app's bundle identifier.
      key: Identifier
      presence: required
      title: Identifier
      type: <string>
    - content: A dictionary of options that the user cannot change.
      key: Options
      presence: optional
      subkeys:
      - content: If 'true', disables the touch screen. In tvOS, it disables the touch surface on the Apple TV Remote.
        default: false
        key: DisableTouch
        presence: optional
        title: Disable Touch
        type: <boolean>
      - content: If 'true', disables device rotation sensing.
        default: false
        key: DisableDeviceRotation
        presence: optional
        supportedOS:
          tvOS:
            introduced: n/a
        title: Disable Device Rotation
        type: <boolean>
      - content: If 'true', disables the volume buttons.
        default: false
        key: DisableVolumeButtons
        presence: optional
        supportedOS:
          tvOS:
            introduced: n/a
        title: Disable Volume Buttons
        type: <boolean>
      - content: If 'true', disables the ringer switch. When disabled, the ringer behavior depends on what position the switch was in when it was first disabled.
        default: false
        key: DisableRingerSwitch
        presence: optional
        supportedOS:
          tvOS:
            introduced: n/a
        title: Disable Ringer Switch
        type: <boolean>
      - content: If 'true', disables the sleep/wake button.
        default: false
        key: DisableSleepWakeButton
        presence: optional
        supportedOS:
          tvOS:
            introduced: n/a
        title: Disable Sleep Wake Button
        type: <boolean>
      - content: If 'true', the device doesn't automatically go to sleep after an idle period.
        default: false
        key: DisableAutoLock
        presence: optional
        title: Disable Auto Lock
        type: <boolean>
      - content: If 'true', enables VoiceOver.
        default: false
        key: EnableVoiceOver
        presence: optional
        title: Enable Voice Over
        type: <boolean>
      - content: If 'true', enables Zoom.
        default: false
        key: EnableZoom
        presence: optional
        title: Enable Zoom
        type: <boolean>
      - content: If 'true', enables Invert Colors.
        default: false
        key: EnableInvertColors
        presence: optional
        title: Enable Invert Colors
        type: <boolean>
      - content: If 'true', enables AssistiveTouch.
        default: false
        key: EnableAssistiveTouch
        presence: optional
        supportedOS:
          tvOS:
            introduced: n/a
        title: Enable Assistive Touch
        type: <boolean>
      - content: If 'true', enables Speak Selection.
        default: false
        key: EnableSpeakSelection
        presence: optional
        supportedOS:
          tvOS:
            introduced: n/a
        title: Enable Speak Selection
        type: <boolean>
      - content: If 'true', enables Mono Audio.
        default: false
        key: EnableMonoAudio
        presence: optional
        supportedOS:
          tvOS:
            introduced: n/a
        title: Enable Mono Audio
        type: <boolean>
      - content: If 'true', enables Voice Control.
        default: false
        key: EnableVoiceControl
        presence: optional
        supportedOS:
          iOS:
            introduced: '13.0'
          tvOS:
            introduced: n/a
        title: Enable Voice Control
        type: <boolean>
      supportedOS:
        iOS:
          introduced: '7.0'
      title: Options
      type: <dictionary>
    - content: A dictionary of user-editable options.
      key: UserEnabledOptions
      presence: optional
      subkeys:
      - content: If 'true', allows the user to toggle Voice Control.
        default: false
        key: VoiceControl
        presence: optional
        supportedOS:
          iOS:
            introduced: '13.0'
          tvOS:
            introduced: n/a
        title: Voice Control
        type: <boolean>
      - content: If 'true', allows the user to toggle VoiceOver.
        default: false
        key: VoiceOver
        presence: optional
        title: Voice Over
        type: <boolean>
      - content: If 'true', allows the user to toggle Zoom.
        default: false
        key: Zoom
        presence: optional
        title: Zoom
        type: <boolean>
      - content: If 'true', allows the user to toggle Invert Colors.
        default: false
        key: InvertColors
        presence: optional
        title: Invert Colors
        type: <boolean>
      - content: If 'true', allows the user to toggle AssistiveTouch.
        default: false
        key: AssistiveTouch
        presence: optional
        supportedOS:
          tvOS:
            introduced: n/a
        title: Assistive Touch
        type: <boolean>
      supportedOS:
        iOS:
          introduced: '7.0'
      title: User Enabled Options
      type: <dictionary>
    title: App
    type: <dictionary>
  title: App Lock
com.apple.applicationaccess:
  description: Use this section to define restrictions settings
  payload:
    payloadtype: com.apple.applicationaccess
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '6.1'
        supervised: false
  payloadkeys:
  - content: If  'false', disables account modification. Requires a supervised device. Available in iOS 7 and later.
    default: true
    key: allowAccountModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables activity continuation. Available in iOS 8 and later, and macOS 10.15 and later.
    default: true
    key: allowActivityContinuation
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.15'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Handoff
    type: <boolean>
  - content: If 'false', prohibits adding friends to Game Center. As of iOS 13, requires a supervised device. Available in iOS 4.2.1 and later, and macOS 10.13 and later.
    default: true
    key: allowAddingGameCenterFriends
    presence: optional
    supportedOS:
      iOS:
        introduced: 4.2.1
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Adding Game Center Friends
    type: <boolean>
  - content: If 'false', disables AirDrop. Requires a supervised device. Available in iOS 7 and later, and macOS 10.13 and later.
    default: true
    key: allowAirDrop
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables incoming AirPlay requests. Requires a supervised device. Available in macOS 12.3 and later, and tvOS 10.2 and later.
    default: true
    key: allowAirPlayIncomingRequests
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '12.3'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: '10.2'
        supervised: true
    title: Allow incoming AirPlay requests
    type: <boolean>
  - content: If 'false', disables AirPrint.  Requires a supervised device. Available in iOS 11 and later.
    default: true
    key: allowAirPrint
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow AirPrint
    type: <boolean>
  - content: If 'false', disables keychain storage of user name and password for AirPrint. Requires a supervised device. Available in iOS 11 and later.
    default: true
    key: allowAirPrintCredentialsStorage
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow storage of AirPrint credentials in Keychain
    type: <boolean>
  - content: If 'false', disables iBeacon discovery of AirPrint printers, which prevents spurious AirPrint Bluetooth beacons from phishing for network traffic. Requires a supervised device. Available in iOS 11 and later.
    default: true
    key: allowAirPrintiBeaconDiscovery
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow discovery of AirPrint printers using iBeacons
    type: <boolean>
  - content: If 'false', disables changing settings for cellular data usage for apps. Requires a supervised device. Available in iOS 7 and later.
    default: true
    key: allowAppCellularDataModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Modifying Cellular Data Usage for Apps Settings
    type: <boolean>
  - content: If 'false', prevents a user from adding any App Clips, and removes any existing App Clips on the device. Requires a supervised device. Available in iOS 14.0 and later.
    default: true
    key: allowAppClips
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow App Clips
    type: <boolean>
  - content: If 'false', disables the App Store, and its icon is removed from the Home screen. Users are unable to install or update their apps. In iOS 10 and later, MDM commands can override this restriction. As of iOS 13, this restriction requires a supervised device. Available in iOS 4 and later.
    default: true
    key: allowAppInstallation
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow App Installation from Apple Configurator and iTunes
    type: <boolean>
  - content: If 'false', limits Apple personalized advertising. Available in iOS 14 and later.
    default: true
    key: allowApplePersonalizedAdvertising
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '12.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables removal of apps from an iOS device. Requires a supervised device. Available in iOS 4.2.1 and later.
    default: true
    key: allowAppRemoval
    presence: optional
    supportedOS:
      iOS:
        introduced: 4.2.1
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow App Removal
    type: <boolean>
  - content: If 'false', disables Siri. Available in iOS 5 and later. Also available for user enrollment.
    default: true
    key: allowAssistant
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Siri
    type: <boolean>
  - content: If 'false', prevents Siri from querying user-generated content from the web. Requires a supervised device. Available in iOS 7 and later.
    default: true
    key: allowAssistantUserGeneratedContent
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables Siri when the device is locked. This restriction is ignored if the device doesn't have a passcode set. Available in iOS 5.1 and later. Also available for user enrollment.
    default: true
    key: allowAssistantWhileLocked
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.1'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Siri While Locked
    type: <boolean>
  - content: If 'false', disables keyboard autocorrection. Requires a supervised device. Available in iOS 8.1.3 and later.
    default: true
    key: allowAutoCorrection
    presence: optional
    supportedOS:
      iOS:
        introduced: 8.1.3
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Auto Correction
    type: <boolean>
  - content: If 'false', prevents automatic downloading of apps purchased on other devices. This setting doesn't affect updates to existing apps. Requires a supervised device. Available in iOS 9 and later.
    default: true
    key: allowAutomaticAppDownloads
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Automatic App Downloads
    type: <boolean>
  - content: If 'false', disables Apple TV's automatic screen saver. Available in tvOS 15.4 and later.
    default: true
    key: allowAutomaticScreenSaver
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: n/a
      tvOS:
        introduced: '15.4'
        supervised: true
    type: <boolean>
  - content: If 'false', disallows auto unlock. Available in macOS 10.12 and later, and iOS 14.5 and later.
    default: true
    key: allowAutoUnlock
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.5'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', prevents modification of Bluetooth settings. Requires a supervised device. Available in iOS 11 and later, and macOS 13.0 and later.
    default: true
    key: allowBluetoothModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '13.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow modifying Bluetooth settings
    type: <boolean>
  - content: If 'false', removes the Book Store tab from the Books app. Requires a supervised device. Available in iOS 6 and later.
    default: true
    key: allowBookstore
    presence: optional
    supportedOS:
      iOS:
        introduced: '6.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Bookstore
    type: <boolean>
  - content: If 'false', the user can't download Apple Books media that is tagged as erotica. Available in iOS 6 and later, and tvOS 11.3 and later.
    default: true
    key: allowBookstoreErotica
    presence: optional
    supportedOS:
      iOS:
        introduced: '6.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: '11.3'
    title: Allow Bookstore Erotica
    type: <boolean>
  - content: If 'false', disables the camera, and its icon is removed from the Home screen. Users are unable to take photographs. This restriction is deprecated on unsupervised devices and will be supervised only in a future release.  Available in iOS 4 and later, and macOS 10.11 and later.
    default: true
    key: allowCamera
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        supervised: false
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.11'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Camera Use
    type: <boolean>
  - content: If 'false', users can't change any settings related to their cellular plan. Requires a supervised device. Available in iOS 11 and later.
    default: true
    key: allowCellularPlanModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables the use of the iMessage with supervised devices. If the device supports text messaging, the user can still send and receive text messages. Requires a supervised device. Available in iOS 5 and later.
    default: true
    key: allowChat
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow use of iMessage
    type: <boolean>
  - content: If 'false', disables iCloud Address Book services. Available in macOS 10.12 and later.
    default: true
    key: allowCloudAddressBook
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables backing up the device to iCloud. This restriction is deprecated on unsupervised devices and will be supervised only in a future release. Available in iOS 5 and later.
    default: true
    key: allowCloudBackup
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
        supervised: false
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow iCloud Backup
    type: <boolean>
  - content: If 'false', disables iCloud Bookmark sync. Available in macOS 10.12 and later.
    default: true
    key: allowCloudBookmarks
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables iCloud Calendar services. Available in macOS 10.12 and later.
    default: true
    key: allowCloudCalendar
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables cloud desktop and document services. Available in macOS 10.12.4 and later.
    default: true
    key: allowCloudDesktopAndDocuments
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: 10.12.4
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables document and key-value syncing to iCloud. As of iOS 13, this restriction requires a supervised device. Available in iOS 5 and later, and macOS 10.11 and later.
    default: true
    key: allowCloudDocumentSync
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
        sharedipad:
          mode: forbidden
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.11'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow iCloud Document Sync
    type: <boolean>
  - content: If 'false', disables iCloud keychain synchronization. This restriction is deprecated on unsupervised devices and will be supervised only in a future release. Available in iOS 7 and later and macOS 10.12 and later.
    default: true
    key: allowCloudKeychainSync
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        supervised: false
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables iCloud Mail services. Available in macOS 10.12 and later.
    default: true
    key: allowCloudMail
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables iCloud Notes services. Available in macOS 10.12 and later.
    default: true
    key: allowCloudNotes
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables iCloud Photo Library, including iCloud Shared Photo Library. Any photos not fully downloaded from iCloud Photo Library to the device are removed from local storage. Available in iOS 9 and later, and macOS 10.12 and later.
    default: true
    key: allowCloudPhotoLibrary
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow iCloud Photo Library
    type: <boolean>
  - content: If 'false', disables iCloud Private Relay. For iOS devices, this restriction requires a supervised device. Available in macOS 12 and later, and iOS 15 and later.
    default: true
    key: allowCloudPrivateRelay
    presence: optional
    supportedOS:
      iOS:
        introduced: '15.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '12.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables iCloud Reminder services. Available in macOS 10.12 and later.
    default: true
    key: allowCloudReminders
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables content caching. As of 10.13.4 this is included in the content caching payload. Available in macOS 10.13 and later.
    default: true
    key: allowContentCaching
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.13'
        userchannel: false
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables QuickPath keyboard. Requires a supervised device. Available in iOS 13 and later.
    default: true
    key: allowContinuousPathKeyboard
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Continuous Path Keyboard
    type: <boolean>
  - content: If 'false', disables definition lookup. Requires a supervised device on iOS. Available in iOS 8.1.3 and later and macOS 10.11 and later.
    default: true
    key: allowDefinitionLookup
    presence: optional
    supportedOS:
      iOS:
        introduced: 8.1.3
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.11'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Define
    type: <boolean>
  - content: If 'false', prevents the user from changing the device name. Requires a supervised device. Available in iOS 9 and later, and tvOS 11.0 and later.
    default: true
    key: allowDeviceNameModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: '11.0'
        supervised: true
    title: Allow Modifying Device Name
    type: <boolean>
  - content: If 'false', prevents device from automatically sleeping. Requires a supervised device. Available in tvOS 13 and later.
    default: true
    key: allowDeviceSleep
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: n/a
      tvOS:
        introduced: '13.0'
        supervised: true
    title: Allow Device Sleep
    type: <boolean>
  - content: If 'false', prevents the device from automatically submitting diagnostic reports to Apple. Available in iOS 6 and later, and macOS 10.13 and later. Also available for user enrollment.
    default: true
    key: allowDiagnosticSubmission
    presence: optional
    supportedOS:
      iOS:
        introduced: '6.0'
      macOS:
        introduced: '10.13'
      tvOS:
        introduced: n/a
    title: Allow diagnostic submission
    type: <boolean>
  - content: If 'false', disables changing the diagnostic submission and app analytics settings in the Diagnostics & Usage UI in Settings. Requires a supervised device. Available in iOS 9.3.2 and later.
    default: true
    key: allowDiagnosticSubmissionModification
    presence: optional
    supportedOS:
      iOS:
        introduced: 9.3.2
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow modifying diagnostics settings
    type: <boolean>
  - content: If 'false', disallows dictation input. Requires a supervised device. Available in iOS 10.3 and later, and macOS 10.13 and later.
    default: true
    key: allowDictation
    presence: optional
    supportedOS:
      iOS:
        introduced: '10.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow dictation
    type: <boolean>
  - content: "If 'false', disables the \u201CEnable Restrictions\u201D option in the Restrictions UI in Settings.\nIn iOS 12 or later, if 'false', disables the \u201CEnable ScreenTime\u201D option in the ScreenTime UI in Settings and disables ScreenTime if already enabled. Requires a supervised device. Available in iOS 8 and later."
    default: true
    key: allowEnablingRestrictions
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Configuring Restrictions or ScreenTime
    type: <boolean>
  - content: If 'false', removes the Trust Enterprise Developer button in Settings > General > Profiles & Device Management, preventing apps from being provisioned by universal provisioning profiles. This restriction applies to free developer accounts. However, it doesn't apply to enterprise app developers who are trusted because their apps were pushed through MDM. It also doesn't revoke previously granted trust. Available in iOS 9 and later.
    default: true
    key: allowEnterpriseAppTrust
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Trusting Enterprise Apps
    type: <boolean>
  - content: If 'false', disables backup of Enterprise books. Available in iOS 8 and later. Also available for user enrollment.
    default: true
    key: allowEnterpriseBookBackup
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Enterprise Books Backup
    type: <boolean>
  - content: If 'false', disables sync of Enterprise books, notes, and highlights. Available in iOS 8 and later. Also available for user enrollment.
    default: true
    key: allowEnterpriseBookMetadataSync
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Enterprise Books Notes and Highlights Sync
    type: <boolean>
  - content: If 'false', disables the Erase All Content And Settings option in the Reset UI. Requires a supervised device. Available in iOS 8 and later, and macOS 12 and later.
    default: true
    key: allowEraseContentAndSettings
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '12.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Erase All Content and Settings
    type: <boolean>
  - content: If 'false', disables modifications to carrier plan related settings (only available on select carriers). Requires a supervised device. Available in iOS 11 and later.
    default: true
    key: allowESIMModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.1'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow eSIM Modification
    type: <boolean>
  - content: If 'false', hides explicit music or video content purchased from the iTunes Store. Explicit content is marked as such by content providers, such as record labels, when sold through the iTunes Store. As of iOS 13, requires a supervised device. Available in iOS 4 and later, and tvOS 11.3 and later.
    default: true
    key: allowExplicitContent
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: '11.3'
    title: Allow Explicit Content
    type: <boolean>
  - content: If 'false', prevents connecting to network drives in the Files app. Requires a supervised device. Available in iOS 13.1 and later.
    default: true
    key: allowFilesNetworkDriveAccess
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.1'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', prevents connecting to any connected USB devices in the Files app. Requires a supervised device. Available in iOS 13.1 and later.
    default: true
    key: allowFilesUSBDriveAccess
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables Find My Device in the Find My app. Requires a supervised device. Available in iOS 13 and later.
    default: true
    key: allowFindMyDevice
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.15'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables Find My Friends in the Find My app. Requires a supervised device. Available in iOS 13 and later.
    default: true
    key: allowFindMyFriends
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.15'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables changes to Find My Friends. Requires a supervised device. Available in iOS 7 and later.
    default: true
    key: allowFindMyFriendsModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', prevents Touch ID or Face ID from unlocking a device. Available in iOS 7 and later, and macOS 10.12.4 and later.
    default: true
    key: allowFingerprintForUnlock
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: 10.12.4
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Touch ID to Unlock Device
    type: <boolean>
  - content: If 'false', prevents the user from modifying Touch ID or Face ID. Requires a supervised device. Available in iOS 8.3 and later.
    default: true
    key: allowFingerprintModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Modifying Touch ID Fingerprints
    type: <boolean>
  - content: If 'false', disables Game Center, and its icon is removed from the Home screen. Requires a supervised device. Available in iOS 6 and later, and macOS 10.13 and later.
    default: true
    key: allowGameCenter
    presence: optional
    supportedOS:
      iOS:
        introduced: '6.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Game Center
    type: <boolean>
  - content: If 'false', disables global background fetch activity when an iOS phone is roaming. Available in iOS 4 and later.
    default: true
    key: allowGlobalBackgroundFetchWhenRoaming
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Automatic Sync While Roaming
    type: <boolean>
  - content: If 'false', disables host pairing with the exception of the supervision host. If no supervision host certificate has been configured, all pairing is disabled. Host pairing lets the administrator control if an iOS device can pair with a host Mac or PC. Requires a supervised device. Available in iOS 7 and later.
    default: true
    key: allowHostPairing
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', prohibits in-app purchasing. Available in iOS 4 and later.
    default: true
    key: allowInAppPurchases
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow In App Purchases
    type: <boolean>
  - content: 'If ''false'', disables the iTunes Music Store, and its icon is removed from the Home screen. Users cannot preview, purchase, or download content.

      As of iOS 13, requires a supervised device. Available in iOS 4 and later.'
    default: true
    key: allowiTunes
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow use of iTunes
    type: <boolean>
  - content: If 'false', disables iTunes file sharing services. Available in macOS 10.13 and later.
    default: true
    key: allowiTunesFileSharing
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables keyboard shortcuts. Requires a supervised device. Available in iOS 9 and later.
    default: true
    key: allowKeyboardShortcuts
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Keyboard Shortcuts
    type: <boolean>
  - content: If present, this property allows only bundle IDs listed in the array to be shown or launchable. Include the value 'com.apple.webapp' to allow all webclips. Requires a supervised device. Available in iOS 9.3 and later, and tvOS 11.0 and later.
    key: allowListedAppBundleIDs
    presence: optional
    subkeys:
    - key: appAllowlistedBundleID
      title: Allow Listed App
      type: <string>
    supportedOS:
      iOS:
        introduced: '15.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: '15.0'
        supervised: true
    title: Allow Listed Apps
    type: <array>
  - content: If 'false', prevents Control Center from appearing on the Lock screen. Available in iOS 7 and later. Also available for user enrollment.
    default: true
    key: allowLockScreenControlCenter
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables the Notifications history view on the lock screen, so users can't view past notifications. However, they can still see notifications when they arrive. Available in iOS 7 and later. Also available for user enrollment.
    default: true
    key: allowLockScreenNotificationsView
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables the Today view in Notification Center on the lock screen. Available in iOS 7 and later. Also available for user enrollment.
    default: true
    key: allowLockScreenTodayView
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables Mail Privacy Protection on the device. Available in iOS 15.2 and later.
    default: true
    key: allowMailPrivacyProtection
    presence: optional
    supportedOS:
      iOS:
        introduced: '15.2'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', prevents managed apps from using iCloud sync. Available in iOS 8 and later. Also available for user enrollment.
    default: true
    key: allowManagedAppsCloudSync
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow iCloud Sync for Managed Apps
    type: <boolean>
  - content: If 'true', managed apps can write contacts to unmanaged contacts accounts. If 'allowOpenFromManagedToUnmanaged' is 'true', this restriction has no effect. If this restriction is set to 'true', you must install the payload through MDM. Available in iOS 12 and later.
    default: false
    key: allowManagedToWriteUnmanagedContacts
    presence: optional
    supportedOS:
      iOS:
        allowmanualinstall: false
        introduced: '12.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow managed apps to write to managed contacts accounts
    type: <boolean>
  - content: If 'false', prohibits multiplayer gaming. Requires a supervised device. Available in iOS 4.1 and later, and macOS 10.13 and later.
    default: true
    key: allowMultiplayerGaming
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.1'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Multiplayer Gaming
    type: <boolean>
  - content: If 'false', disables the Music service, and the Music app reverts to classic mode. Requires a supervised device. Available in iOS 9.3 and later, and macOS 10.12 and later.
    default: true
    key: allowMusicService
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.12'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Apple Music
    type: <boolean>
  - content: If 'false', disables News. Requires a supervised device. Available in iOS 9 and later.
    default: true
    key: allowNews
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow use of News
    type: <boolean>
  - content: If 'false', disables NFC. Requires a supervised device. Available in iOS 14.2 and later.
    default: true
    key: allowNFC
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.2'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables modification of notification settings. Requires a supervised device. Available in iOS 9.3 and later.
    default: true
    key: allowNotificationsModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Modifying Notifications Settings
    type: <boolean>
  - content: If 'false', documents in managed apps and accounts only open in other managed apps and accounts. Available in iOS 7 and later. Also available for user enrollment.
    default: true
    key: allowOpenFromManagedToUnmanaged
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Enable allow open from managed to unmanaged
    type: <boolean>
  - content: If 'false', documents in unmanaged apps and accounts only open in other unmanaged apps and accounts. Available in iOS 7 and later. Also available for user enrollment.
    default: true
    key: allowOpenFromUnmanagedToManaged
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Enable allow open from unmanaged to managed
    type: <boolean>
  - content: If 'false', disables over-the-air PKI updates. Setting this restriction to 'false' doesn't disable CRL and OCSP checks.  Available in iOS 7 and later.
    default: true
    key: allowOTAPKIUpdates
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables pairing with an Apple Watch. Any currently paired Apple Watch is unpaired and the watch's content is erased. Requires a supervised device. Available in iOS 9 and later.
    default: true
    key: allowPairedWatch
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Pairing With Apple Watch
    type: <boolean>
  - content: If 'false', hides Passbook notifications from the lock screen. Available in iOS 6 and later.
    default: true
    key: allowPassbookWhileLocked
    presence: optional
    supportedOS:
      iOS:
        introduced: '6.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Wallet While Locked
    type: <boolean>
  - content: 'If ''false'', prevents the device passcode from being added, changed, or removed.

      This restriction is ignored by Shared iPads. Requires a supervised device. Available in iOS 9 and later, and macOS 10.13 and later.'
    default: true
    key: allowPasscodeModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Modifying Passcode
    type: <boolean>
  - content: 'If ''false'', disables the AutoFill Passwords feature in iOS (with Keychain and third-party password managers) and the user isn''t prompted to use a saved password in Safari or in apps.

      This restriction also disables Automatic Strong Passwords, and strong passwords are no longer suggested to users.

      It doesn''t prevent AutoFill for contact info and credit cards in Safari.

      Requires a supervised device. Available in iOS 12 and later, and macOS 10.14 and later.'
    default: true
    key: allowPasswordAutoFill
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.14'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables requesting passwords from nearby devices. Requires a supervised device. Available in iOS 12 and later, macOS 10.14 and later, and tvOS 12 and later.
    default: true
    key: allowPasswordProximityRequests
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.14'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: '12.0'
        supervised: true
    type: <boolean>
  - content: If 'false', disables sharing passwords with the Airdrop Passwords feature. Requires a supervised device. Available in iOS 12 and later, and macOS 10.14 and later.
    default: true
    key: allowPasswordSharing
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.14'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables modifications of the personal hotspot setting. Requires a supervised device. Available in iOS 12.2 and later.
    default: true
    key: allowPersonalHotspotModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.2'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow modifying Personal Hotspot settings
    type: <boolean>
  - content: If 'false', disables Photo Stream. Available in iOS 5 and later.
    default: true
    key: allowPhotoStream
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Photo Stream
    type: <boolean>
  - content: If 'false', disables podcasts. Requires a supervised device. Available in iOS 8 and later.
    default: true
    key: allowPodcasts
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables predictive keyboards. Requires a supervised device. Available in iOS 8.1.3 and later.
    default: true
    key: allowPredictiveKeyboard
    presence: optional
    supportedOS:
      iOS:
        introduced: 8.1.3
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Predictive Keyboard
    type: <boolean>
  - content: If 'false', disables the prompt to set up new devices that are nearby. Requires a supervised device. Available in iOS 11 and later.
    default: true
    key: allowProximitySetupToNewDevice
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables Apple Music Radio. Requires a supervised device. Available in iOS 9.3 and later.
    default: true
    key: allowRadioService
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow iTunes Radio
    type: <boolean>
  - content: If set to false, rapid security responses can't be installed.
    default: true
    key: allowRapidSecurityResponseInstallation
    presence: optional
    supportedOS:
      iOS:
        introduced: '16.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '13.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Rapid Security Response Installation
    type: <boolean>
  - content: If set to false, rapid security responses can't be removed.
    default: true
    key: allowRapidSecurityResponseRemoval
    presence: optional
    supportedOS:
      iOS:
        introduced: '16.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '13.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Rapid Security Response Removal
    type: <boolean>
  - content: If 'false', disables pairing Apple TV for use with the Remote app or Control Center widget. Requires a supervised device. Available in tvOS 10.2 and later.
    default: true
    key: allowRemoteAppPairing
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: n/a
      tvOS:
        introduced: '10.2'
        supervised: true
    title: Allow pairing with Remote app
    type: <boolean>
  - content: If 'false', disables remote screen observation by the Classroom app. Nest this key beneath 'allowScreenShot' as a subrestriction. If 'allowScreenShot' is set to 'false', the Classroom app doesn't observe remote screens. Required a supervised device until iOS 13 and macOS 10.15. Available in iOS 12 and later, and macOS 10.14.4 and later.
    default: true
    key: allowRemoteScreenObservation
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.3'
      macOS:
        introduced: 10.14.4
      tvOS:
        introduced: n/a
    title: Allow Remote Screen Observation
    type: <boolean>
  - content: If 'false', disables the Safari web browser app, and its icon is removed from the Home screen. This setting also prevents users from opening web clips. As of iOS 13, requires a supervised device. Available in iOS 4 and later.
    default: true
    key: allowSafari
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow use of Safari
    type: <boolean>
  - content: If 'false', disables saving a screenshot of the display and capturing a screen recording. It also disables the Classroom app from observing remote screens. Available in iOS 4 and later, and macOS 10.14.4 and later. Also available for user enrollment.
    default: true
    key: allowScreenShot
    presence: optional
    supportedOS:
      iOS:
        introduced: '3.1'
      macOS:
        introduced: 10.14.4
      tvOS:
        introduced: n/a
    title: Allow Screenshots and Screen Recording
    type: <boolean>
  - content: If 'false', temporary sessions aren't available on Shared iPad. Available in iOS 13.4 and later.
    default: true
    key: allowSharedDeviceTemporarySession
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.4'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', disables Shared Photo Stream. Available in iOS 6 and later.
    default: true
    key: allowSharedStream
    presence: optional
    supportedOS:
      iOS:
        introduced: '6.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Shared Stream
    type: <boolean>
  - content: If 'false', disables keyboard spell-check. Requires a supervised device. Available in iOS 8.1.3 and later.
    default: true
    key: allowSpellCheck
    presence: optional
    supportedOS:
      iOS:
        introduced: 8.1.3
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Spell Check
    type: <boolean>
  - content: If 'false', disables Spotlight Internet search results in Siri Suggestions. Available in iOS 8 and later, and macOS 10.11 and later.
    default: true
    key: allowSpotlightInternetResults
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.11'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Siri Suggestions
    type: <boolean>
  - content: If 'false', disables the removal of system apps from the device. Requires a supervised device. Available in iOS 11 and later.
    default: true
    key: allowSystemAppRemoval
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: 'If ''false'', disables the App Store, and its icon is removed from the Home screen. However, users may continue to use host apps (iTunes, Configurator) to install or update their apps.

      In iOS 10 and later, MDM commands can override this restriction. Requires a supervised device. Available in iOS 9 and later.'
    default: true
    key: allowUIAppInstallation
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow App Installation from App Store
    type: <boolean>
  - content: If 'false', prohibits the user from installing configuration profiles and certificates interactively. Requires a supervised device. Available in iOS 6 and later and macOS 13 and later.
    default: true
    key: allowUIConfigurationProfileInstallation
    presence: optional
    supportedOS:
      iOS:
        introduced: '6.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '13.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow UI Configuration Profile Installation
    type: <boolean>
  - content: If 'false', disables Universal Control. Available in macOS 13 and later.
    default: true
    key: allowUniversalControl
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '13.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Universal Control
    type: <boolean>
  - content: If 'true', unmanaged apps can read from managed contacts accounts. If 'allowOpenFromManagedToUnmanaged' is 'true', this restriction has no effect. If this restriction is set to 'true', you must install the payload through MDM. Available in iOS 12 and later. Also available for user enrollment.
    default: false
    key: allowUnmanagedToReadManagedContacts
    presence: optional
    supportedOS:
      iOS:
        allowmanualinstall: false
        introduced: '12.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow unmanaged apps to read managed contacts accounts
    type: <boolean>
  - content: If 'true', allows devices to be booted into recovery by an unpaired device. Requires a supervised device. Available in iOS 14.5 and later.
    default: false
    key: allowUnpairedExternalBootToRecovery
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.5'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', automatically rejects untrusted HTTPS certificates without prompting the user. Available in iOS 5 and later.
    default: true
    key: allowUntrustedTLSPrompt
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow user to accept untrusted TLS certificates
    type: <boolean>
  - content: 'If ''false'', allows the device to always connect to USB accessories while locked. On macOS, allows new USB accessories to connect without authorization.

      This value is ignored if Lockdown mode is enabled. Requires a supervised device. Available in iOS 11.4.1 and later and macOS 13 and later.'
    default: true
    key: allowUSBRestrictedMode
    presence: optional
    supportedOS:
      iOS:
        introduced: 11.4.1
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '13.0'
        userchannel: false
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'false', hides the FaceTime app. As of iOS 13, requires a supervised device. Available in iOS 4 and later.
    default: true
    key: allowVideoConferencing
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Video Conferencing
    type: <boolean>
  - content: If 'false', disables voice dialing if the device is locked with a passcode. Available in iOS 4 and later.
    default: true
    key: allowVoiceDialing
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Voice Dialing While Device is Locked
    type: <boolean>
  - content: If 'false', disables the creation of VPN configurations. Requires a supervised device. Available in iOS 11 and later.
    default: true
    key: allowVPNCreation
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Adding VPN Configurations (Supervised devices only)
    type: <boolean>
  - content: If 'false', prevents wallpaper from being changed. Requires a supervised device. Available in iOS 9 and later, and macOS 10.13 and later.
    default: true
    key: allowWallpaperModification
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow Modifying Wallpaper
    type: <boolean>
  - content: If present, allows apps identified by the bundle IDs listed in the array to autonomously enter Single App Mode. Requires a supervised device. Available in iOS 7 and later.
    key: autonomousSingleAppModePermittedAppIDs
    presence: optional
    subkeys:
    - key: appAutonomousSingleAppModePermittedID
      title: Apps allow list for Autonomous Single App Mode
      type: <string>
    supportedOS:
      iOS:
        introduced: '7.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <array>
  - content: Use blockedAppBundleIDs instead.
    key: blacklistedAppBundleIDs
    presence: optional
    subkeys:
    - key: appBlacklistedBundleID
      title: Blacklisted App
      type: <string>
    supportedOS:
      iOS:
        deprecated: '15.0'
        introduced: '9.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        deprecated: '15.0'
        introduced: '11.0'
        supervised: true
    title: Blacklisted Apps
    type: <array>
  - content: If present, prevents bundle IDs listed in the array from being shown or launchable. Include the value 'com.apple.webapp' to restrict all webclips. Requires a supervised device. Available in iOS 9.3 and later, and tvOS 11.0 and later.
    key: blockedAppBundleIDs
    presence: optional
    subkeys:
    - key: appBlockedBundleID
      title: Blocked App
      type: <string>
    supportedOS:
      iOS:
        introduced: '15.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: '15.0'
        supervised: true
    title: Blocked Apps
    type: <array>
  - content: The value, in seconds, after which the fingerprint unlock will require a password to authenticate. The default value is 48 hours.
    default: 172800
    key: enforcedFingerprintTimeout
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '12.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <integer>
  - content: 'Sets how many days to delay a software update on the device. With this restriction in place, the user doesn''t see a software update until the specified number of days after the software update release date. This value is used by ''forceDelayedAppSoftwareUpdates'' and ''forceDelayedSoftwareUpdates''.

      Requires a supervised device in iOS and tvOS.

      Available in iOS 11.3 and later, macOS 10.13.4 and later, and tvOS 12.2 and later.'
    default: 30
    key: enforcedSoftwareUpdateDelay
    presence: optional
    range:
      max: 90
      min: 1
    supportedOS:
      iOS:
        introduced: '11.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: 10.13.4
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: '12.2'
        supervised: true
    type: <integer>
  - content: 'This restriction allows the admin to set how many days to delay a major software upgrade on the device. When this restriction is in place the user sees a software upgrade only after the specified delay after the release of the software upgrade. This value controls the delay for ''forceDelayedMajorSoftwareUpdates''.

      Available in macOS 11.3 and later.'
    default: 30
    key: enforcedSoftwareUpdateMajorOSDeferredInstallDelay
    presence: optional
    range:
      max: 90
      min: 1
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.3'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <integer>
  - content: 'This restriction allows the admin to set how many days to delay a minor OS software update on the device. When this restriction is in place the user see a software update only after the specified delay after the release of the software update. This value controls the delay for ''forceDelayedSoftwareUpdates''.

      Available in macOS 11.3 and later.'
    default: 30
    key: enforcedSoftwareUpdateMinorOSDeferredInstallDelay
    presence: optional
    range:
      max: 90
      min: 1
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.3'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <integer>
  - content: 'This restriction allows the admin to set how many days to delay an app software update on the device. When this restriction is in place the user sees a non-OS software update only after the specified delay after the release of the software. This value controls the delay for ''forceDelayedAppSoftwareUpdates''.

      Available in macOS 11.3 and later.'
    default: 30
    key: enforcedSoftwareUpdateNonOSDeferredInstallDelay
    presence: optional
    range:
      max: 90
      min: 1
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.3'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <integer>
  - content: If 'true', causes AirDrop to be considered an unmanaged drop target. Available in iOS 9 and later. Also available for user enrollment.
    default: false
    key: forceAirDropUnmanaged
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Treat AirDrop as Unmanaged Destination
    type: <boolean>
  - content: If 'true', forces all devices sending AirPlay requests to this device to use a pairing password. Available in Apple TV Software 6.2 and later. This key isn't supported in tvOS 10.2 and later. Use the AirPlay Security Payload instead.
    default: false
    key: forceAirPlayIncomingRequestsPairingPassword
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: n/a
      tvOS:
        introduced: '6.2'
    type: <boolean>
  - content: If 'true', forces all devices receiving AirPlay requests from this device to use a pairing password. Available in iOS 7.1 and later. Also available for user enrollment.
    default: false
    key: forceAirPlayOutgoingRequestsPairingPassword
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.1'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', requires trusted certificates for TLS printing communication. Requires a supervised device. Available in iOS 11 and later.
    default: false
    key: forceAirPrintTrustedTLSRequirement
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Disallow AirPrint to destinations with untrusted certificates
    type: <boolean>
  - content: If 'true', forces the use of the profanity filter assistant. Requires a supervised device. Available in iOS 11 and later.
    default: false
    key: forceAssistantProfanityFilter
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Enable Siri Profanity Filter
    type: <boolean>
  - content: If 'true', the user must authenticate before passwords or credit card information can be autofilled in Safari and Apps. If this restriction isn't enforced, the user can toggle this feature in Settings. Only supported on devices with Face ID or Touch ID. Requires a supervised device. Available in iOS 11 and later.
    default: false
    key: forceAuthenticationBeforeAutoFill
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', enables the Set Automatically feature in Date & Time and can't be disabled by the user.  The device's time zone is updated only when the device can determine its location using a cellular connection or Wi-Fi with location services enabled. Requires a supervised device. Available in iOS 12 and later, and tvOS 12.2 and later.
    default: false
    key: forceAutomaticDateAndTime
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: '12.2'
        supervised: true
    type: <boolean>
  - content: If 'true', automatically gives permission to the teacher's requests without prompting the student. Requires a supervised device. Available in iOS 11 and later, and macOS 10.14.4 and later.
    default: false
    key: forceClassroomAutomaticallyJoinClasses
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: 10.14.4
        supervised: true
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', a student enrolled in an unmanaged course through Classroom requests permission from the teacher when attempting to leave the course. Requires a supervised device. Available in iOS 11.3 and later, and macOS 10.14.4 and later.
    default: false
    key: forceClassroomRequestPermissionToLeaveClasses
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: 10.14.4
        supervised: true
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', allows the teacher to lock apps or the device without prompting the student. Requires a supervised device. Available in iOS 11 and later, and macOS 10.14.4 and later.
    default: false
    key: forceClassroomUnpromptedAppAndDeviceLock
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: 10.14.4
        supervised: true
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true' and 'ScreenObservationPermissionModificationAllowed' is also 'true' in the Education payload, a student enrolled in a managed course via the Classroom app automatically gives permission to that course teacher's requests to observe the student's screen without prompting the student. Requires a supervised device. Available in iOS 11 and later, and macOS 10.14.4 and later.
    default: false
    key: forceClassroomUnpromptedScreenObservation
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: 10.14.4
        supervised: true
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: 'If ''true'', delays user visibility of non-OS Software Updates. Requires a supervised device.

      Visibility of Operating System updates is controlled through ''forceDelayedSoftwareUpdates''.

      The delay is 30 days unless ''enforcedSoftwareUpdateDelay'' is set to another value.

      Available in macOS 11 and later.'
    default: false
    key: forceDelayedAppSoftwareUpdates
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.0'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: 'If set to true, delays user visibility of major upgrades to OS Software.

      Available in macOS 11.3 and later.'
    default: false
    key: forceDelayedMajorSoftwareUpdates
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.3'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: 'If ''true'', delays user visibility of software updates. In macOS, seed build updates are allowed, without delay. Requires a supervised device in iOS and tvOS.

      The delay is 30 days unless ''enforcedSoftwareUpdateDelay'' is set to another value.

      Available in iOS 11.3 and later, macOS 10.13 and later, and tvOS 12.2 and later.'
    default: false
    key: forceDelayedSoftwareUpdates
    presence: optional
    supportedOS:
      iOS:
        introduced: '11.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: '12.2'
        supervised: true
    type: <boolean>
  - content: If 'true', encrypts all backups. Available in iOS 4 and later. Also available for user enrollment.
    default: false
    key: forceEncryptedBackup
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Force Encrypted Backups
    type: <boolean>
  - content: If 'true', forces the user to enter their iTunes password for each transaction. Available in iOS 6 and later.
    default: false
    key: forceITunesStorePasswordEntry
    presence: optional
    supportedOS:
      iOS:
        introduced: '6.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Require iTunes password for all purchases
    type: <boolean>
  - content: 'If ''true'', limits ad tracking. Additionally, it disables app tracking and the Allow Apps To Request To Track setting.

      Available in iOS 7 and later.'
    default: false
    key: forceLimitAdTracking
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', disables connections to Siri servers for the purposes of dictation. Available in iOS 14.5 and later. Also available for user enrollment.
    default: false
    key: forceOnDeviceOnlyDictation
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.5'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', the device won't connect to Siri servers for the purposes of translation. Available in iOS 15 and later. Also available for user enrollment.
    default: false
    key: forceOnDeviceOnlyTranslation
    presence: optional
    supportedOS:
      iOS:
        introduced: '15.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', forces a paired Apple Watch to use Wrist Detection. Available in iOS 8.2 and later. Also available for user enrollment.
    default: false
    key: forceWatchWristDetection
    presence: optional
    supportedOS:
      iOS:
        introduced: '8.2'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Force Apple Watch Wrist Detection
    type: <boolean>
  - content: If 'true', prevents Wi-Fi from being turned off in Settings or Control Center, even by entering or leaving Airplane Mode. It doesn't prevent selecting which Wi-Fi network to use. Requires a supervised device. Available in iOS 13.0 and later.
    default: false
    key: forceWiFiPowerOn
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Disallow Wi-Fi from being turned off
    type: <boolean>
  - content: If 'true', limits device to only join Wi-Fi networks set-up via configuration profile. Requires a supervised device. Available in iOS 14.5 and later.
    default: false
    key: forceWiFiToAllowedNetworksOnly
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.5'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: Use 'forceWiFiToAllowedNetworksOnly' instead.
    default: false
    key: forceWiFiWhitelisting
    presence: optional
    supportedOS:
      iOS:
        deprecated: '14.5'
        introduced: '10.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Only join Wi-Fi networks installed by profiles
    type: <boolean>
  - content: 'The maximum level of app content allowed on the device. Available in iOS 4 and later, and tvOS 11.3 and later.

      Possible values (with the US description of the rating level):

      * 1000: All

      * 600: 17+

      * 300: 12+

      * 200: 9+

      * 100: 4+

      * 0: None'
    default: 1000
    key: ratingApps
    presence: optional
    range:
      max: 1000
      min: 0
    supportedOS:
      iOS:
        introduced: '4.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: '11.3'
    title: Apps Ranking Number
    type: <integer>
  - content: 'The maximum level of movie content allowed on the device. Available in iOS 4 and later, and tvOS 11.3 and later.

      Possible values (with the US description of the rating level):

      * 1000: All

      * 500: NC-17

      * 400: R

      * 300: PG-13

      * 200: PG

      * 100: G

      * 0: None'
    default: 1000
    key: ratingMovies
    presence: optional
    range:
      max: 1000
      min: 0
    supportedOS:
      iOS:
        introduced: '4.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: '11.3'
    title: Movies Ranking Number
    type: <integer>
  - content: The two-letter key that profile tools use to display the proper ratings for the given region. This data isn't recognized or reported by the client.
    key: ratingRegion
    presence: optional
    rangelist:
    - us
    - au
    - ca
    - de
    - fr
    - ie
    - jp
    - nz
    - gb
    title: Region Code
    type: <string>
  - content: 'The maximum level of TV content allowed on the device. Available in iOS 4 and later, and tvOS 11.3 and later.


      Possible values (with the US description of the rating level):


      * 1000: All

      * 600: TV-MA

      * 500: TV-14

      * 400: TV-PG

      * 300: TV-G

      * 200: TV-Y7

      * 100: TV-Y

      * 0: None'
    default: 1000
    key: ratingTVShows
    presence: optional
    range:
      max: 1000
      min: 0
    supportedOS:
      iOS:
        introduced: '4.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: '11.3'
    title: TV Shows Ranking Number
    type: <integer>
  - content: If 'true', copy and paste functionality respects the 'allowOpenFromManagedToUnmanaged' and 'allowOpenFromUnmanagedToManaged' restrictions. Also available for user enrollment.
    default: false
    key: requireManagedPasteboard
    presence: optional
    supportedOS:
      iOS:
        introduced: '15.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: "This value defines the conditions under which the device accepts cookies. The user-facing settings changed in iOS 11, although the possible values remain the same. Available in iOS 4 and later.\n'0': Prevent Cross-Site Tracking and Block All Cookies are enabled and the user can\u02BCt disable either setting.\n'1' or '1.5': Prevent Cross-Site Tracking is enabled and the user can\u02BCt disable it. Block All Cookies is not enabled, although the user can enable it.\n'2': Prevent Cross-Site Tracking is enabled and Block All Cookies is not enabled. The user can toggle either setting."
    default: 2.0
    key: safariAcceptCookies
    presence: optional
    rangelist:
    - 0.0
    - 1.0
    - 1.5
    - 2.0
    supportedOS:
      iOS:
        introduced: '4.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Accept Cookies in Safari
    type: <real>
  - content: 'If ''false'', disables Safari AutoFill for passwords, contact info, and credit cards and also prevents the Keychain from being used for AutoFill. Though third-party password managers are allowed and apps can use AutoFill.

      As of iOS 13, requires a supervised device. Available in iOS 4 and later, and macOS 10.13 and later.'
    default: true
    key: safariAllowAutoFill
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: forbidden
      tvOS:
        introduced: n/a
    title: Allow AutoFill in Safari
    type: <boolean>
  - content: If 'false', Safari doesn't execute JavaScript. Available in iOS 4 and later.
    default: true
    key: safariAllowJavaScript
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow JavaScript
    type: <boolean>
  - content: If 'false', Safari doesn't allow pop-up windows. Available in iOS 4 and later.
    default: true
    key: safariAllowPopups
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow Pop-ups
    type: <boolean>
  - content: If 'true', enables Safari fraud warning. Available in iOS 4 and later. Also available for user enrollment.
    default: false
    key: safariForceFraudWarning
    presence: optional
    supportedOS:
      iOS:
        introduced: '4.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Enable Fraud Warning
    type: <boolean>
  - content: Use 'allowListedAppBundleIDs' instead.
    key: whitelistedAppBundleIDs
    presence: optional
    subkeys:
    - key: appWhitelistedBundleID
      title: Whitelisted App
      type: <string>
    supportedOS:
      iOS:
        deprecated: '15.0'
        introduced: '9.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        deprecated: '15.0'
        introduced: '11.0'
        supervised: true
    title: Whitelisted Apps
    type: <array>
  title: Restrictions
com.apple.applicationaccess.new:
  description: ''
  payload:
    content: 'Parental controls application restrictions.

      Order of evaluation:

      (1) Certain system applications and utilities are always allowed to run

      (2) The "whiteList" is searched to see if a matching entry is found by bundleID. If a match is found, the "appID" and "detachedSignature"

      (if present) are used to verify the signature of the application being launched. If the signature is valid and matches the designated

      requirement (in the "appID" key), the application is allowed to launch.

      (3) (deprecated) If the path to the binary being launched matches (or is in a subdirectory) of a path in "pathBlackList", the binary is denied.

      (4) (deprecated) If the path to the binary being launched matches (or is a subdirectory) of a path in "pathWhiteList", the binary is allowed to launch.

      (5) The binary is denied permission to launch.'
    payloadtype: com.apple.applicationaccess.new
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables app access restrictions.
    key: familyControlsEnabled
    presence: required
    type: <boolean>
  - content: The allow list of app item dictionaries.
    key: whiteList
    presence: optional
    subkeys: &id007
    - key: whiteListItem
      subkeys:
      - content: The bundle ID of the app.
        key: bundleID
        presence: required
        type: <string>
      - content: The identifier of the app. Obtain this value from the Security framework using SecCodeCopyDesignatedRequirement.
        key: appID
        presence: required
        type: <data>
      - content: The signature for an unsigned binary.
        key: detachedSignature
        presence: optional
        type: <data>
      - content: If 'true', this app isn't added to the allow list.
        default: false
        key: disabled
        presence: optional
        type: <boolean>
      - content: An array of nested helper applications.
        key: subApps
        presence: optional
        subkeys: *id007
        subkeytype: ApplicationItem
        type: <array>
      - content: The name used for display purposes.
        key: displayName
        presence: optional
        type: <string>
      type: <dictionary>
    subkeytype: ApplicationItem
    type: <array>
  - content: The paths to apps in the deny list. This property is deprecated in macOS 10.15 and later.
    key: pathBlackList
    presence: optional
    subkeys:
    - content: A path.
      key: pathBlackListItem
      presence: required
      type: <string>
    supportedOS:
      macOS:
        deprecated: '10.15'
    type: <array>
  - content: The paths to apps in the allow list. This property is deprecated in macOS 10.15 and later.
    key: pathWhiteList
    presence: optional
    subkeys:
    - content: A path.
      key: pathWhiteListItem
      presence: required
      type: <string>
    supportedOS:
      macOS:
        deprecated: '10.15'
    type: <array>
  title: 'Parental Controls: Application Restrictions'
com.apple.appstore:
  description: ''
  payload:
    content: Use this payload to set restrictions used by the Mac App Store.
    payloadtype: com.apple.appstore
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', restricts app installations to admin users only. Deprecated in macOS 10.14. Use the 'com.apple.SoftwareUpdate' payload key 'restrict-software-update-require-admin-to-install' as a replacement.
    default: false
    key: restrict-store-require-admin-to-install
    presence: optional
    supportedOS:
      macOS:
        deprecated: '10.14'
        introduced: '10.9'
    type: <boolean>
  - content: If 'true', prevents App Store from launching. Available in macOS 10.14 and later. Restricts installations to software updates only in macOS 10.10 - 10.13.
    default: false
    key: restrict-store-softwareupdate-only
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.10'
    type: <boolean>
  - content: If 'true', disables app adoption by users. Available in macOS 10.10 and later.
    default: false
    key: restrict-store-disable-app-adoption
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.10'
    type: <boolean>
  - content: If 'true', disables software update notifications. Available in macOS 10.10 and later.
    default: false
    key: DisableSoftwareUpdateNotifications
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.10'
    type: <boolean>
  title: App Store
com.apple.asam:
  description: ''
  payload:
    payloadtype: com.apple.asam
    supportedOS:
      macOS:
        allowmanualinstall: false
        devicechannel: true
        introduced: 10.13.4
        requiresdep: false
        userapprovedmdm: true
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: An array of dictionaries that specifies the apps that can be granted access to the Accessibility APIs.
    key: AllowedApplications
    presence: required
    subkeys:
    - key: AllowedApplicationsItem
      subkeys:
      - content: The unique bundle identifier. If two dictionaries contain the same 'BundleIdentifier' value but a different 'TeamIdentifier' value, this will be considered an error and the profile won't be installed.
        key: BundleIdentifier
        presence: required
        supportedOS:
          macOS:
            introduced: 10.13.4
        type: <string>
      - content: The developer's team identifier, used when the app was signed.
        key: TeamIdentifier
        presence: required
        supportedOS:
          macOS:
            introduced: 10.13.4
        type: <string>
      type: <dictionary>
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <array>
  title: Autonomous Single App Mode
com.apple.associated-domains:
  description: Use this section to define settings for Associated Domains to be used with features such as Extensible AppSSO, universal links and Password AutoFill.
  payload:
    content: Configures Associated Domains to be used with features such as Extensible AppSSO, universal links and Password AutoFill. Settings are per-user. The effective settings for a user will be the union of payloads installed for the device and the user. Users on a system that are not managed by the MDM will not have any effective settings, not even those from device payloads.
    payloadtype: com.apple.associated-domains
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.15'
        requiresdep: false
        userapprovedmdm: true
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: A dictionary that maps apps to their associated domains.
    key: Configuration
    presence: required
    subkeys:
    - key: ConfigurationItem
      subkeys:
      - content: The app identifier to associate the domains with.
        key: ApplicationIdentifier
        presence: required
        type: <string>
      - content: 'The domains to be associated with the app. Each string is in the form of ''''service:domain''''. Domains should be fully qualified hostnames, like ''www.example.com''.

          See Supporting associated domains for more information.'
        key: AssociatedDomains
        presence: required
        subkeys:
        - key: AssociatedDomain
          presence: required
          type: <string>
        type: <array>
      - content: If 'true', data for this domain should be downloaded directly instead of through a CDN. The entitlement value for this domain must be set to 'service:domain?mode=managed' or this value will be ignored. Available in macOS 11 and later.
        default: false
        key: EnableDirectDownloads
        presence: optional
        supportedOS:
          macOS:
            introduced: '11.0'
        type: <boolean>
      type: <dictionary>
    title: Configuration
    type: <array>
  title: Associated Domains
com.apple.caldav.account:
  description: Use this section to define settings for configuration access to CalDAV servers.
  payload:
    payloadtype: com.apple.caldav.account
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The description of the account.
    key: CalDAVAccountDescription
    presence: optional
    title: Account Description
    type: <string>
  - content: The server's address.
    key: CalDAVHostName
    presence: required
    title: Account Hostname
    type: <string>
  - content: 'The user name for logins.

      If this profile part of a non-interactive install, this field is required.'
    key: CalDAVUsername
    presence: optional
    title: Account Username
    type: <string>
  - content: The user's password. This is only used with encrypted profiles.
    key: CalDAVPassword
    presence: optional
    title: Account Password
    type: <string>
  - content: The base URL to the user's calendar.
    key: CalDAVPrincipalURL
    presence: optional
    title: Principal URL
    type: <string>
  - content: If 'true', enables SSL.
    default: true
    key: CalDAVUseSSL
    presence: optional
    title: Use SSL
    type: <boolean>
  - content: The server's port.
    key: CalDAVPort
    presence: optional
    title: Port Number
    type: <integer>
  - content: 'The VPNUUID of the per-app VPN the account uses for network communication.

      Available in iOS 14 and later.'
    key: VPNUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: n/a
    title: VPNUUID
    type: <string>
  title: CalDAV
com.apple.carddav.account:
  description: Use this section to define settings for configuration access to CardDAV servers.
  payload:
    payloadtype: com.apple.carddav.account
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The description of the account.
    key: CardDAVAccountDescription
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.7'
    title: Account Description
    type: <string>
  - content: The server's address.
    key: CardDAVHostName
    presence: required
    supportedOS:
      macOS:
        introduced: '10.7'
    title: Account Hostname
    type: <string>
  - content: The user name for logins.
    key: CardDAVUsername
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.7'
    title: Account Username
    type: <string>
  - content: The user's password.
    key: CardDAVPassword
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.7'
    title: Account Password
    type: <string>
  - content: The base URL to the user's address book.
    key: CardDAVPrincipalURL
    presence: optional
    supportedOS:
      macOS:
        introduced: n/a
    title: Principal URL
    type: <string>
  - content: If 'true', enables SSL.
    default: true
    key: CardDAVUseSSL
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.7'
    title: Use SSL
    type: <boolean>
  - content: The server's port.
    key: CardDAVPort
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.7'
    title: Port Number
    type: <integer>
  - content: An array of communication service rules for this account.
    key: CommunicationServiceRules
    presence: optional
    subkeys:
    - content: A dictionary of service handlers for contacts from this account.
      key: DefaultServiceHandlers
      presence: optional
      subkeys:
      - content: A string containing the bundle identifier for the default application that handles audio calls made to contacts from this account.
        key: AudioCall
        presence: optional
        supportedOS:
          iOS:
            introduced: '10.0'
          macOS:
            introduced: n/a
        title: App for audio calls
        type: <string>
      supportedOS:
        iOS:
          introduced: '10.0'
        macOS:
          introduced: n/a
      title: Default Service Handlers
      type: <dictionary>
    supportedOS:
      iOS:
        introduced: '10.0'
      macOS:
        introduced: n/a
    title: Communication Service Rules
    type: <dictionary>
  - content: 'The VPNUUID of the per-app VPN the account uses for network communication.

      Available in iOS 14 and later.'
    key: VPNUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: n/a
    title: VPNUUID
    type: <string>
  title: CardDAV
com.apple.cellular:
  description: Use this section to define custom APNs for cellular data access.
  payload:
    content: 'This payload cannot be installed if an APN payload is already installed.

      This payload only applies to the preferred data SIM. There is no way to have a cellular payload affect a different SIM.

      This payload replaces the com.apple.managedCarrier payload. The latter payload is supported, but deprecated.'
    payloadtype: com.apple.cellular
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '7.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: forbidden
      watchOS:
        allowmanualinstall: true
        introduced: '3.2'
  payloadkeys:
  - content: A configuration dictionary.
    key: AttachAPN
    presence: optional
    subkeys:
    - content: The name for this configuration.
      key: Name
      presence: required
      title: Name
      type: <string>
    - content: The authentication type.
      default: PAP
      key: AuthenticationType
      presence: optional
      rangelist:
      - CHAP
      - PAP
      title: Authentication type
      type: <string>
    - content: The user name for the APN.
      key: Username
      presence: optional
      title: User name
      type: <string>
    - content: The password for the APN.
      key: Password
      presence: optional
      title: Password
      type: <string>
    - content: 'The supported Internet Protocol versions. Possible values are:

        1 = IPv4

        2 = IPv6

        3 = Both'
      key: AllowedProtocolMask
      presence: optional
      rangelist:
      - 1
      - 2
      - 3
      supportedOS:
        iOS:
          introduced: '10.3'
      title: Supported IP Versions
      type: <integer>
    title: AttachAPN
    type: <dictionary>
  - content: An array of access point dictionaries.
    key: APNs
    presence: optional
    subkeys:
    - key: APNsItem
      subkeys:
      - content: The name for this configuration.
        key: Name
        presence: required
        title: Name
        type: <string>
      - content: The authentication type for logging in.
        default: PAP
        key: AuthenticationType
        presence: optional
        rangelist:
        - CHAP
        - PAP
        title: Authentication type
        type: <string>
      - content: The user name for the APN.
        key: Username
        presence: optional
        title: User name
        type: <string>
      - content: The user's password for the APN.
        key: Password
        presence: optional
        title: Password
        type: <string>
      - content: The proxy server's address.
        key: ProxyServer
        presence: optional
        supportedOS:
          macOS:
            introduced: n/a
        title: Proxy server
        type: <string>
      - content: The proxy server's port number.
        key: ProxyPort
        presence: optional
        title: Proxy port
        type: <integer>
      - content: 'Deprecated. The default Internet Protocol versions. Possible values are:

          * ''1'': IPv4

          * ''2'': IPv6

          * ''3'': Both

          Available in iOS 10.3 but no longer used in iOS 11 and later.'
        key: DefaultProtocolMask
        presence: optional
        rangelist:
        - 1
        - 2
        - 3
        supportedOS:
          iOS:
            deprecated: '11.0'
            introduced: '10.3'
        type: <integer>
      - content: 'The supported Internet Protocol versions. Possible values are:

          * ''1'': IPv4

          * ''2'': IPv6

          * ''3'': Both

          Available in iOS 10.3 and later.'
        key: AllowedProtocolMask
        presence: optional
        rangelist:
        - 1
        - 2
        - 3
        supportedOS:
          iOS:
            introduced: '10.3'
        title: Supported IP Versions
        type: <integer>
      - content: 'The supported Internet Protocol versions while roaming. Possible values are:

          * ''1'': IPv4

          * ''2'': IPv6

          * ''3'': Both

          Available in iOS 10.3 and later.'
        key: AllowedProtocolMaskInRoaming
        presence: optional
        rangelist:
        - 1
        - 2
        - 3
        supportedOS:
          iOS:
            introduced: '10.3'
        title: Supported Roaming IP Versions
        type: <integer>
      - content: 'The supported Internet Protocol versions while roaming domestically. Possible values are:

          * ''1'': IPv4

          * ''2'': IPv6

          * ''3'': Both

          Available in iOS 10.3 and later.'
        key: AllowedProtocolMaskInDomesticRoaming
        presence: optional
        rangelist:
        - 1
        - 2
        - 3
        supportedOS:
          iOS:
            introduced: '10.3'
        title: Supported Roaming IP Versions
        type: <integer>
      - content: If 'true', enables XLAT464. Available in iOS 16 and later and watchOS 9 and later.
        default: false
        key: EnableXLAT464
        presence: optional
        supportedOS:
          iOS:
            introduced: '16.0'
          watchOS:
            introduced: '9.0'
        title: Enable XLAT464
        type: <boolean>
      type: <dictionary>
    title: APNs
    type: <array>
  title: Cellular
com.apple.conferenceroomdisplay:
  description: Use this section to place an Apple TV device into Conference Room Display mode.
  payload:
    content: Configures an Apple TV to enter Conference Room Display mode, and restrictions exit from that mode
    payloadtype: com.apple.conferenceroomdisplay
    supportedOS:
      tvOS:
        allowmanualinstall: true
        introduced: '10.2'
        supervised: true
  payloadkeys:
  - content: The custom message displayed on the screen in Conference Room Display mode.
    key: Message
    presence: optional
    title: Custom message
    type: <string>
  title: Conference Room Display
com.apple.configurationprofile.identification:
  payload:
    content: 'This payload can be used on the device or user channel depending on what payload it is paired with.


      Device channel:

      *com.apple.MCX.FileVault2

      *com.apple.ADCertificate.managed

      *com.apple.DirectoryService.managed


      User channel:

      *com.apple.caldav.account

      *com.apple.carddav.account

      *com.apple.ews.account

      *com.apple.ldap.account

      *com.apple.mail.managed'
    payloadtype: com.apple.configurationprofile.identification
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The dictionary containing details about the user.
    key: PayloadIdentification
    presence: required
    subkeys:
    - content: The UNIX user name for the accounts.
      key: UserName
      presence: required
      type: <string>
    - content: The full name of the account.
      key: FullName
      presence: required
      type: <string>
    - content: The address for the account.
      key: EmailAddress
      presence: required
      type: <string>
    - content: The authorization method. Either the password is supplied in the profile or the user supplies it.
      key: AuthMethod
      presence: required
      rangelist:
      - Password
      - UserEnteredPassword
      type: <string>
    - content: The password for the account. Required when the 'AuthMethod' is of type 'password'.
      key: Password
      presence: required
      type: <string>
    - content: The custom instructions for the user, if needed.
      key: Prompt
      presence: optional
      type: <string>
    - content: The additional descriptive text for the user prompt.
      key: PromptMessage
      presence: optional
      type: <string>
    type: <dictionary>
  title: Identification
com.apple.dashboard:
  description: ''
  payload:
    content: Widget restrictions.
    payloadtype: com.apple.dashboard
    supportedOS:
      macOS:
        allowmanualinstall: true
        deprecated: '10.15'
        devicechannel: true
        introduced: '10.7'
        removed: '10.15'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables the widget allow list.
    key: whiteListEnabled
    presence: required
    type: <boolean>
  - content: An array of widget item dictionaries that are allowed.
    key: WhiteList
    presence: required
    subkeys:
    - key: WhiteListItem
      subkeys:
      - content: The type of allow list item. Set to 'bundleID' to use a widget's bundle ID as its main ID.
        key: Type
        presence: required
        type: <string>
      - content: The bundle ID of a widget.
        key: ID
        presence: required
        type: <string>
      type: <dictionary>
    type: <array>
  title: 'Parental Controls: Dashboard Widget Restrictions'
com.apple.desktop:
  description: ''
  payload:
    payloadtype: com.apple.desktop
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.10'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', locks the desktop picture. Replaced with allowWallpaperModification in macOS 10.13.
    default: false
    key: locked
    presence: optional
    supportedOS:
      macOS:
        deprecated: '10.13'
    type: <boolean>
  - content: The path to the desktop picture. If set, this picture is always locked.
    key: override-picture-path
    presence: optional
    type: <string>
  title: Desktop
com.apple.dnsProxy.managed:
  description: Use this section to configure a DNS proxy network extension
  payload:
    content: As of iOS 15.0 this payload can be installed on unsupervised devices via MDM and can only be installed via MDM. As of iOS 16.0, this can be installed on User Enrollments via MDM if DNSProxyUUID is specified.
    payloadtype: com.apple.dnsProxy.managed
    supportedOS:
      iOS:
        allowmanualinstall: false
        introduced: '11.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.15'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The bundle identifier of the app containing the DNS proxy network extension.
    key: AppBundleIdentifier
    presence: required
    title: App Bundle Identifier
    type: <string>
  - content: The bundle identifier of the DNS proxy network extension to use. Declaring the bundle identifier is useful for apps that contain more than one DNS proxy extension.
    key: ProviderBundleIdentifier
    presence: optional
    title: Provider Bundle Identifier
    type: <string>
  - content: The dictionary of vendor-specific configuration items.
    key: ProviderConfiguration
    presence: optional
    subkeys:
    - content: Key/value pairs.
      key: ANY
      presence: optional
      type: <any>
    title: Provider Configuration
    type: <dictionary>
  - content: A globally-unique identifier for this DNS proxy configuration. Managed apps with the same 'DNSProxyUUID' in their app attributes have their DNS lookups traffic processed by the proxy.
    key: DNSProxyUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '16.0'
      macOS:
        introduced: n/a
    title: DNS Proxy UUID
    type: <string>
  title: DNS Proxy
com.apple.dnsSettings.managed:
  description: Use this section to configure DNS settings.
  payload:
    payloadtype: com.apple.dnsSettings.managed
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '14.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: forbidden
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '11.0'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: A dictionary that defines a configuration for an encrypted DNS server.
    key: DNSSettings
    presence: required
    subkeys:
    - content: The encrypted transport protocol used to communicate with the DNS server.
      key: DNSProtocol
      presence: required
      rangelist:
      - HTTPS
      - TLS
      title: DNS Protocol
      type: <string>
    - content: The URI template of a DNS-over-HTTPS server, as defined in RFC 8484. This URL must use the 'https://' scheme, and the hostname or address in the URL will be used to validate the server certificate. If no 'ServerAddresses' are provided, the hostname or address in the URL will be used to determine the server addresses. This key must be present only if the 'DNSProtocol' is 'HTTPS'.
      key: ServerURL
      presence: optional
      title: Server URL
      type: <string>
    - content: The hostname of a DNS-over-TLS server used to validate the server certificate, as defined in RFC 7858. If no 'ServerAddresses' are provided, the hostname will be used to determine the server addresses. This key must be present only if the DNSProtocol is 'TLS'.
      key: ServerName
      presence: optional
      title: Server Name
      type: <string>
    - content: An unordered list of DNS server IP address strings. These IP addresses can be a mixture of IPv4 and IPv6 addresses.
      key: ServerAddresses
      presence: optional
      subkeys:
      - key: ServerAddressesElement
        title: Server Address Element
        type: <string>
      title: DNS Server Addresses
      type: <array>
    - content: 'A list of domain strings used to determine which DNS queries will use the DNS server. If this array is not provided, all domains will use the DNS server.

        A single wildcard ''*'' prefix is supported, but is not required. For example, both ''*.example.com'' and ''example.com'' match against ''mydomain.example.com'' and ''your.domain.example.com'', but do not match against ''mydomain-example.com''.'
      key: SupplementalMatchDomains
      presence: optional
      subkeys:
      - key: SupplementalMatchDomainsElement
        title: Supplemental Match Domains Element
        type: <string>
      title: Supplemental Match Domains
      type: <array>
    title: DNS Settings
    type: <dictionary>
  - content: An array of rules defining the DNS settings. If rules are not present, the system always applies the DNS settings. These rules are identical to the 'OnDemandRules' array in VPN payloads.
    key: OnDemandRules
    presence: optional
    subkeys:
    - key: OnDemandRulesElement
      subkeys:
      - content: 'The action to take if this dictionary matches the current network. Possible values are:

          * ''Connect'': Apply DNS Settings when the dictionary matches.

          * ''Disconnect'': Do not apply DNS Settings when the dictionary matches.

          * ''EvaluateConnection'': Apply DNS Settings with per-domain exceptions when the dictionary matches.'
        key: Action
        presence: required
        rangelist:
        - Connect
        - Disconnect
        - EvaluateConnection
        title: On Demand Action
        type: <string>
      - content: 'A dictionary that provides per-connection rules.

          This array is used only for settings where the ''Action'' value is''EvaluateConnection''.'
        key: ActionParameters
        presence: optional
        subkeys:
        - content: The domains for which this evaluation applies.
          key: Domains
          presence: required
          subkeys:
          - key: DomainsElement
            title: Domains Element
            type: <string>
          title: Domains
          type: <array>
        - content: 'The DNS settings behavior for the specified domains. Allowed values are:

            * ''NeverConnect'': Do not use the DNS Settings for the specified domains.

            * ''ConnectIfNeeded'': Allow using the DNS Settings for the specified domains.'
          key: DomainAction
          presence: required
          rangelist:
          - NeverConnect
          - ConnectIfNeeded
          title: Domain Action
          type: <string>
        title: Action Parameters
        type: <dictionary>
      - content: 'An array of domain names. This rule matches if any of the domain names in the specified list matches any domain in the device''s search domains list.

          A single wildcard ''*'' prefix is supported, but is not required. For example, both ''*.example.com'' and ''example.com'' match against ''mydomain.example.com'' and ''your.domain.example.com'', but do not match against ''mydomain-example.com''.'
        key: DNSDomainMatch
        presence: optional
        subkeys:
        - key: DNSDomainMatchElement
          title: DNS Domain Match Element
          type: <string>
        title: DNS Domain Match
        type: <array>
      - content: 'An array of IP addresses. This rule matches if any of the network''s specified DNS servers match any entry in the array.

          Matching with a single wildcard is supported. For example, 17.* matches any DNS server in the 17.0.0.0/8 subnet.'
        key: DNSServerAddressMatch
        presence: optional
        subkeys:
        - key: DNSServerAddressMatchElement
          title: DNS Server Address Match Element
          type: <string>
        title: DNS Server Address Match
        type: <array>
      - content: An interface type. If specified, this rule matches only if the primary network interface hardware matches the specified type.
        key: InterfaceTypeMatch
        presence: optional
        rangelist:
        - Ethernet
        - WiFi
        - Cellular
        title: Interface Type Match
        type: <string>
      - content: 'An array of SSIDs to match against the current network. If the network is not a Wi-Fi network or if the SSID does not appear in this array, the match fails.

          Omit this key and the corresponding array to match against any SSID.'
        key: SSIDMatch
        presence: optional
        subkeys:
        - key: SSIDMatchElement
          title: SSID Match Element
          type: <string>
        title: SSID Match
        type: <array>
      - content: A URL to probe. If this URL is successfully fetched (returning a 200 HTTP status code) without redirection, this rule matches.
        key: URLStringProbe
        presence: optional
        title: URL String Probe
        type: <string>
      title: On Demand Rules Element
      type: <dictionary>
    subkeytype: OnDemandRulesElement
    title: On Demand Rules
    type: <array>
  - content: If 'true', prohibits users from disabling DNS settings. This key is only available on supervised devices.
    default: false
    key: ProhibitDisablement
    presence: optional
    title: Prohibit Disablement
    type: <boolean>
  title: DNS Settings
com.apple.dock:
  description: ''
  payload:
    payloadtype: com.apple.dock
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The tile size. Values must be in the range from 16 to 128.
    key: tilesize
    presence: optional
    range:
      max: 128
      min: 16
    type: <integer>
  - content: If 'true', locks the size slider.
    default: false
    key: size-immutable
    presence: optional
    type: <boolean>
  - content: If 'true', enables magnification.
    default: false
    key: magnification
    presence: optional
    type: <boolean>
  - content: If 'true', locks magnification.
    default: false
    key: magnify-immutable
    presence: optional
    type: <boolean>
  - content: The size of the largest magnification.
    key: largesize
    presence: optional
    range:
      max: 128
      min: 16
    type: <integer>
  - content: If 'true', locks the magnification slider.
    default: false
    key: magsize-immutable
    presence: optional
    type: <boolean>
  - content: The orientation of the dock.
    key: orientation
    presence: optional
    rangelist:
    - bottom
    - left
    - right
    type: <string>
  - content: If 'true', locks the position.
    default: false
    key: position-immutable
    presence: optional
    type: <boolean>
  - content: The minimize effect.
    key: mineffect
    presence: optional
    rangelist:
    - genie
    - scale
    type: <string>
  - content: If 'true', locks 'Minimize windows using.'
    default: false
    key: mineffect-immutable
    presence: optional
    type: <boolean>
  - content: Set the 'Prefer tabs when opening documents' to the provided value.
    key: windowtabbing
    presence: optional
    rangelist:
    - manual
    - always
    - fullscreen
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <string>
  - content: If 'true', disables 'Prefer tabs when opening documents' checkbox.
    default: false
    key: windowtabbing-immutable
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.12'
    type: <boolean>
  - content: The behavior when the window's title bar is double-clicked.
    key: dblclickbehavior
    presence: optional
    rangelist:
    - minimize
    - maximize
    - none
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <string>
  - content: If 'true', locks 'Double-click a window's title bar.'
    default: false
    key: dblclickbehavior-immutable
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.14'
    type: <boolean>
  - content: If 'true', enables 'Minimize windows into application icon.'
    default: false
    key: minimize-to-application
    presence: optional
    type: <boolean>
  - content: If 'true', disables the 'Minimize windows into application icon' checkbox.
    default: false
    key: minintoapp-immutable
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.14'
    type: <boolean>
  - content: If 'true', enables 'Animate opening applications.'
    default: false
    key: launchanim
    presence: optional
    type: <boolean>
  - content: If 'true', locks 'Animate opening applications.'
    default: false
    key: launchanim-immutable
    presence: optional
    type: <boolean>
  - content: If 'true', enables 'Automatically hide and show the dock.'
    default: false
    key: autohide
    presence: optional
    type: <boolean>
  - content: If 'true', locks 'Automatically hide.'
    default: false
    key: autohide-immutable
    presence: optional
    type: <boolean>
  - content: If true, shows the process indicator.
    default: false
    key: show-process-indicators
    presence: optional
    type: <boolean>
  - content: If 'true', locks 'Show indicators.'
    default: false
    key: showindicators-immutable
    presence: optional
    type: <boolean>
  - content: If 'true', enables 'Show recent items.'
    default: false
    key: show-recents
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.14'
    type: <boolean>
  - content: If 'true', disables 'Show recent applications' checkbox.
    default: false
    key: showrecents-immutable
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.15'
    type: <boolean>
  - content: If 'true', disables changes to the dock.
    default: false
    key: contents-immutable
    presence: optional
    type: <boolean>
  - content: 'One or more special folders that may be created at user login time and placed in the dock.


      The ''My Applications'' item is only used for Simple Finder environments. The ''Original Network Home'' item is only used for mobile account users.'
    key: MCXDockSpecialFolders
    presence: optional
    subkeys:
    - key: MCXDockSpecialFoldersItems
      rangelist:
      - AddDockMCXMyApplicationsFolder
      - AddDockMCXDocumentsFolder
      - AddDockMCXSharedFolder
      - AddDockMCXOriginalNetworkHomeFolder
      type: <string>
    type: <array>
  - content: If 'true', use the file in '/Library/Preferences/com.apple.dockfixup.plist' when a new user or migrated user logs in. This option has no effect for existing users. Available in macOS 10.12 and later. Only available on the device channel.
    default: false
    key: AllowDockFixupOverride
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.12'
    type: <boolean>
  - content: If 'true', uses the 'static-apps' and 'static-others' dictionaries for the dock and ignores any items in the 'persistent-apps' and 'persistent-others' dictionaries. If 'false', the contents are merged with the static items listed first.
    default: false
    key: static-only
    presence: optional
    type: <boolean>
  - content: An array of items located on the Documents side of the Dock and cannot be removed from that location.
    key: static-others
    presence: optional
    subkeys: &id008
    - key: StaticItem
      subkeys:
      - content: The information about the dock item.
        key: tile-data
        presence: required
        subkeys:
        - content: The label of the dock item.
          key: label
          presence: required
          type: <string>
        - content: The URL string.
          key: url
          presence: optional
          type: <string>
        - content: 'The type of tile:

            * ''0'': URL

            * ''1'': File

            * ''3'': Directory'
          key: file-type
          presence: required
          rangelist:
          - 0
          - 1
          - 3
          type: <integer>
        - content: The data in a file. For Apple use only.
          key: file-data
          presence: optional
          subkeys:
          - content: For Apple use only.
            key: ANY
            presence: optional
            type: <any>
          type: <dictionary>
        type: <dictionary>
      - content: The type of tile.
        key: tile-type
        presence: required
        rangelist:
        - file-tile
        - directory-tile
        - url-tile
        type: <string>
      type: <dictionary>
    subkeytype: StaticItem
    type: <array>
  - content: An array of items located on the Applications side of the Dock and cannot be removed from that location.
    key: static-apps
    presence: optional
    subkeys: *id008
    subkeytype: StaticItem
    type: <array>
  - content: An array of items located on the Applications side of the Dock that can be removed from the dock.
    key: persistent-apps
    presence: optional
    subkeys: *id008
    subkeytype: StaticItem
    type: <array>
  - content: An array of items located on the Documents side of the Dock that can be removed from the dock.
    key: persistent-others
    presence: optional
    subkeys: *id008
    subkeytype: StaticItem
    type: <array>
  title: Dock
com.apple.domains:
  description: Use this section to define Domains settings.
  payload:
    content: This payload defines web domains that are under an enterprise's management.
    payloadtype: com.apple.domains
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '8.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: forbidden
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.10'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: 'An array of domains. The system considers email addresses that lack a suffix matching any of these strings out of domain and marked in Mail.

      Available in iOS 8 and later and macOS 10.10 and later.'
    key: EmailDomains
    presence: optional
    subkeys:
    - content: An email address.
      key: EmailDomainsItem
      presence: required
      type: <string>
    title: Email Domains
    type: <array>
  - content: 'An array of domains. The system considers URLs matching the patterns listed in this property managed.

      Available in iOS 9.3 and later.'
    key: WebDomains
    presence: optional
    subkeys:
    - key: WebDomainsItem
      type: <string>
    supportedOS:
      macOS:
        introduced: n/a
    title: Web Domains
    type: <array>
  - content: 'An array of domains. Users can only save passwords in Safari from URLs matching the patterns listed here. This property doesn''t disable the autofill feature itself.

      Supervised devices or Shared iPads need this property to enable saving passwords in Safari.

      Available in iOS 9.3 and later.'
    key: SafariPasswordAutoFillDomains
    presence: optional
    subkeys:
    - key: SafariPasswordAutoFillDomainsItem
      type: <string>
    supportedOS:
      iOS:
        introduced: '9.3'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
    title: Password Autofill Domains
    type: <array>
  - content: An array of up to 10 strings. URLs matching the patterns listed here will have relaxed enforcement of cross-site tracking prevention.
    key: CrossSiteTrackingPreventionRelaxedDomains
    presence: optional
    subkeys:
    - key: CrossSiteTrackingPreventionRelaxedDomainItem
      type: <string>
    supportedOS:
      iOS:
        allowmanualinstall: false
        introduced: '16.2'
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        allowmanualinstall: false
        introduced: '13.1'
    title: Cross-Site Tracking Prevention RelaxedDomains
    type: <array>
  title: Domains
com.apple.eas.account:
  description: Use this section to define settings for the Exchange ActiveSync account.
  payload:
    content: 'This payload configures an Exchange Active Sync account on an iOS device for Mail, Contacts, Calendars, Reminders, and Notes.

      Updating this payload overrides any settings that the user customized, such as EnableMail/Contacts/Calendars/Reminders/Notes and MailNumberOfPastDaysToSync.'
    payloadtype: com.apple.eas.account
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The full email address for the account. If not present in the payload, the device prompts for this string during profile installation.
    key: EmailAddress
    presence: optional
    title: Email Address
    type: <string>
  - content: 'The Exchange server host name or IP address.

      If using OAuth without an OAuthSignInURL, the host name is ignored.'
    key: Host
    presence: optional
    title: Exchange ActiveSync Host
    type: <string>
  - content: If 'true', enables SSL for authentication.
    default: false
    key: SSL
    presence: optional
    title: Use SSL
    type: <boolean>
  - content: 'If ''true'', enables OAuth for authentication. If enabled, don''t specify a password.

      Available only in iOS 12.0 and above.'
    default: false
    key: OAuth
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
    title: Use OAuth
    type: <boolean>
  - content: This user name for this Exchange account. The user name is required for noninteractive installations like MDM in iOS.
    key: UserName
    presence: optional
    title: User
    type: <string>
  - content: The password of the account. Use only with encrypted profiles.
    key: Password
    presence: optional
    title: Password
    type: <string>
  - content: The '.p12' identity certificate in NSData blob format, for accounts that allow authentication via certificate.
    key: Certificate
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
    title: Authentication Credential
    type: <data>
  - content: The name or description of the certificate.
    key: CertificateName
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
    title: Authentication Credential Name
    type: <string>
  - content: The password necessary for the '.p12' identity certificate. Used with mandatory encryption of profiles.
    key: CertificatePassword
    presence: optional
    title: Authentication Credential Password
    type: <string>
  - content: If 'true', prevents messages from being moved out of this email account into another account. This setting also prevents forwarding or replying from an account other than the one the message was sent to.
    default: false
    key: PreventMove
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
    title: Prevent Move
    type: <boolean>
  - content: If 'true', prevents this account from sending mail in any app other than the Apple Mail app.
    default: false
    key: PreventAppSheet
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
    title: Prevent App Sheet
    type: <boolean>
  - content: The UUID of of the certificate payload within the same profile to use for the identity credential. If this field is present, the Certificate field is not used.
    format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
    key: PayloadCertificateUUID
    presence: optional
    title: Payload Certificate UUID
    type: <string>
  - content: If 'true', enables S/MIME encryption. In iOS 10.0 and later, this key is ignored. Use 'SMIMESigningEnabled' instead.
    default: false
    key: SMIMEEnabled
    presence: optional
    supportedOS:
      iOS:
        deprecated: '10.0'
        introduced: '5.0'
    title: S/MIME Enabled
    type: <boolean>
  - content: If 'true', enables S/MIME signing for this account. Available in iOS 10.0 and later.
    default: false
    key: SMIMESigningEnabled
    presence: optional
    supportedOS:
      iOS:
        introduced: '10.3'
    title: S/MIME Signing Enabled
    type: <boolean>
  - content: The UUID of the identity certificate used to sign messages sent from this account.
    format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
    key: SMIMESigningCertificateUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
    title: S/MIME Signing Certificate
    type: <string>
  - content: If 'true', enables S/MIME encryption for this account. Available in iOS 10.0 and later. As of iOS 12.0, this key is deprecated. It is recommended to use 'SMIMEEncryptByDefault' instead.
    default: false
    key: SMIMEEncryptionEnabled
    presence: optional
    supportedOS:
      iOS:
        deprecated: '12.0'
        introduced: '10.3'
    title: S/MIME Encryption Enabled
    type: <boolean>
  - content: The payload UUID of the identity certificate used to decrypt messages sent to this account. The public certificate is attached to outgoing mail to allow encrypted mail to be sent to this user. When the user sends encrypted mail, the public certificate is used to encrypt the copy of the mail in the user's Sent mailbox.
    format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
    key: SMIMEEncryptionCertificateUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
    title: S/MIME Encryption Certificate
    type: <string>
  - content: 'If ''true'', displays the per-message encryption switch in the Mail Compose UI.

      Available in iOS 8.0 and later. As of iOS 12.0, this key is deprecated. Use ''SMIMEEnableEncryptionPerMessageSwitch'' instead.'
    default: false
    key: SMIMEEnablePerMessageSwitch
    presence: optional
    supportedOS:
      iOS:
        deprecated: '12.0'
        introduced: '8.0'
    title: S/MIME Enable Per-Message Switch
    type: <boolean>
  - content: If 'true', excludes this account from Recent Addresses syncing.
    default: false
    key: disableMailRecentsSyncing
    presence: optional
    title: Disable Mail Recents Syncing
    type: <boolean>
  - content: The number of days in the past to sync mail on the device.
    default: 7
    key: MailNumberOfPastDaysToSync
    presence: optional
    rangelist:
    - 1
    - 3
    - 7
    - 14
    - 31
    title: Past Days of Mail to Sync
    type: <integer>
  - content: The value of the 'X-Apple-Config-Magic' header in each EAS HTTP request.
    key: HeaderMagic
    presence: optional
    supportedOS:
      iOS:
        deprecated: '7.0'
    type: <string>
  - content: The communication service handler rules for this account.
    key: CommunicationServiceRules
    presence: optional
    subkeys:
    - content: The default handlers to be used for contacts from this account.
      key: DefaultServiceHandlers
      presence: optional
      subkeys:
      - content: The bundle identifier of the default application to use for audio calls made to contacts from this account.
        key: AudioCall
        presence: optional
        supportedOS:
          iOS:
            introduced: '10.0'
        title: App for audio calls
        type: <string>
      supportedOS:
        iOS:
          introduced: '10.0'
      title: Default Service Handlers
      type: <dictionary>
    supportedOS:
      iOS:
        introduced: '10.0'
    title: Communication Service Rules
    type: <dictionary>
  - content: If 'true', enables this account to use Mail Drop.
    default: false
    key: allowMailDrop
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.2'
    title: Allow Mail Drop
    type: <boolean>
  - content: If 'true', the user can turn S/MIME signing on or off in Settings. Available in iOS 12.0 and later.
    default: false
    key: SMIMESigningUserOverrideable
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
    type: <boolean>
  - content: If 'true', the user can select the signing identity. Available in iOS 12.0 and later.
    default: false
    key: SMIMESigningCertificateUUIDUserOverrideable
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
    type: <boolean>
  - content: If set to true, S/MIME encryption is enabled by default. If 'SMIMEEnableEncryptionPerMessageSwitch' is false, this default cannot be changed by the user. Available in iOS 12.0 and later.
    default: false
    key: SMIMEEncryptByDefault
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
    type: <boolean>
  - content: If 'true', the user can turn encryption by default on/off, and encryption is on. Available in iOS 12.0 and later.
    default: false
    key: SMIMEEncryptByDefaultUserOverrideable
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
    type: <boolean>
  - content: If 'true', the user can select the S/MIME encryption identity, and encryption is on.Available in iOS 12.0 and later.
    default: false
    key: SMIMEEncryptionCertificateUUIDUserOverrideable
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
    type: <boolean>
  - content: If 'true', displays the per-message encryption switch in the Mail Compose UI. Available in iOS 12.0 and later.
    default: false
    key: SMIMEEnableEncryptionPerMessageSwitch
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
    type: <boolean>
  - content: 'If ''false'', disables the Mail service for this account. The Mail service may be re-enabled in Settings unless ''EnableMailUserOverridable'' is ''false''.

      ''EnableMail'', ''EnableContacts'', ''EnableCalendars'', ''EnableReminders'', and ''EnableNotes'' can''t all be set to ''false''.'
    default: true
    key: EnableMail
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: 'If ''false'', disables the Contacts service for this account. The Contacts service may be re-enabled in Settings unless ''EnableContactsUserOverridable'' is ''false''.

      ''EnableMail'', ''EnableContacts'', ''EnableCalendars'', ''EnableReminders'', and ''EnableNotes'' can''t all be set to ''false''.'
    default: true
    key: EnableContacts
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: 'If ''false'', disables the Calendars service for this account. The Calendars service may be re-enabled in Settings unless ''EnableCalendarsUserOverridable'' is ''false''.

      ''EnableMail'', ''EnableContacts'', ''EnableCalendars'', ''EnableReminders'', and ''EnableNotes'' can''t all be set to ''false''.'
    default: true
    key: EnableCalendars
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: 'If ''false'', disables the Reminders service for this account. The Reminders service may be re-enabled in Settings unless ''EnableRemindersUserOverridable'' is false.

      ''EnableMail'', ''EnableContacts'', ''EnableCalendars'', ''EnableReminders'', and ''EnableNotes'' can''t all be set to ''false''.'
    default: true
    key: EnableReminders
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: 'If ''false'', disables the Notes service for this account. The Notes service may be re-enabled in Settings unless ''EnableNotesUserOverridable'' is ''false''.

      ''EnableMail'', ''EnableContacts'', ''EnableCalendars'', ''EnableReminders'', and ''EnableNotes'' can''t all be set to ''false''.'
    default: true
    key: EnableNotes
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: If 'false', prevents the user from changing the state of the Mail service for this account in Settings.
    default: true
    key: EnableMailUserOverridable
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: If 'false', prevents the user from changing the state of the Contacts service for this account in Settings.
    default: true
    key: EnableContactsUserOverridable
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: If 'false', prevents the user from changing the state of the Calendars service for this account in Settings.
    default: true
    key: EnableCalendarsUserOverridable
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: If 'false', prevents the user from changing the state of the Reminders service for this account in Settings.
    default: true
    key: EnableRemindersUserOverridable
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: If 'false', prevents the user from changing the state of the Notes service for this account in Settings.
    default: true
    key: EnableNotesUserOverridable
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <boolean>
  - content: 'The URL that this account should use for signing in via OAuth. When this URL is specified, auto-discovery is not used for this account so you must also specify a host.

      This field is ignored unless ''OAuth'' is ''true''.'
    key: OAuthSignInURL
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <string>
  - content: 'The URL that this account should use for token requests via OAuth.

      This field is ignored unless ''OAuth'' is ''true''.'
    key: OAuthTokenRequestURL
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <string>
  - content: If 'true',  overrides the previous user/EAS password with the new EAS password in the payload. Available in iOS 14 and later.
    default: false
    key: OverridePreviousPassword
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
    type: <boolean>
  - content: 'The VPNUUID of the per-app VPN the account uses for network communication.

      Available in iOS 14 and later.'
    key: VPNUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
    title: VPNUUID
    type: <string>
  title: Exchange ActiveSync
com.apple.education:
  description: ''
  payload:
    content: This payload is used to configure Classroom students, Classroom instructors, and the Shared iPad login screen. These do not necessarily require the same set of keys to be present in their payloads, so make sure to include all keys that are required for the education product you are configuring.
    payloadtype: com.apple.education
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '9.3'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.14'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The organization's UUID identifier. This identifier can be any valid UUID. All teacher and student devices that need to communicate with one another must have the same organization UUID, particularly if they originated from different Device Enrollment Programs.
    key: OrganizationUUID
    presence: required
    type: <string>
  - content: The organization's display name. This name is shown in the iOS login screen.
    key: OrganizationName
    presence: required
    type: <string>
  - content: 'The UUID of an identity certificate payload within the same profile to use for performing client authentication with other devices. This property supports PKCS12 certificates.

      This key is required to configure Classroom. It does not impact the configuration of the Shared iPad login screen.'
    key: PayloadCertificateUUID
    presence: optional
    type: <string>
  - content: 'The array of UUIDs referring to certificate payloads within the same profile that are used to authorize leader peer certificate identities. This array must contain all certificates needed to validate the entire chain of trust. Leader certificates must have the common name prefix leader (case insensitive).

      Note: This property doesn''t support identity payloads or PKCS12 certificates.

      This key is required when configuring a student device for Classroom, and is ignored when configuring an instructor device. It does not impact the configuration of the Shared iPad login screen.'
    key: LeaderPayloadCertificateAnchorUUID
    presence: optional
    subkeys:
    - content: A certificate payload UUID.
      key: LeaderPayloadCertificateAnchorUUIDItem
      presence: required
      type: <string>
    type: <array>
  - content: 'The array of UUIDs referring to certificate payloads within the same profile that are used to authorize group member peer certificate identities. This array must contain all certificates needed to validate the entire chain of trust. Member certificates must have the common name prefix member (case insensitive).

      Note: This property doesn''t support identity payloads or PKCS12 certificates.

      This key is required when configuring an instructor device for Classroom, and is ignored when configuring a student device. It does not impact the configuration of the Shared iPad login screen.'
    key: MemberPayloadCertificateAnchorUUID
    presence: optional
    subkeys:
    - content: A certificate payload UUID.
      key: MemberPayloadCertificateAnchorUUIDItem
      presence: required
      type: <string>
    type: <array>
  - content: 'The UUID of an identity certificate payload within the same profile that is used to perform client authentication when fetching additional resources, such as student images. If not specified, the MDM client identity is used.

      If present, this key is used to configure both Classroom and the Shared iPad login screen.'
    key: ResourcePayloadCertificateUUID
    presence: optional
    type: <string>
  - content: 'The unique string that identifies the user of this device within the organization.

      If this payload is intended to configure the Shared iPad login screen, this value must not be set.'
    key: UserIdentifier
    presence: required
    type: <string>
  - content: 'For shared iPad profiles: The array of dictionaries that defines which departments  are shown in the Shared iPad login screen.

      If present, this key is used to configure both Classroom and the Shared iPad login screen.'
    key: Departments
    presence: optional
    subkeys:
    - key: DepartmentsItem
      subkeys:
      - content: The display name of the department.
        key: Name
        presence: required
        type: <string>
      - content: The group beacon identifiers that are members of this department.
        key: GroupBeaconIDs
        presence: required
        subkeys:
        - content: A group beacon identifier.
          key: GroupBeaconIDsItem
          presence: required
          type: <string>
        type: <array>
      type: <dictionary>
    type: <array>
  - content: 'For shared iPad profiles: The array of dictionaries that defines which groups the user can select in the login window.


      For leader/teacher profiles: The array of dictionaries that defines the groups that the user can control.


      For member/student profiles: The array of dictionaries that defines the groups where the user is a member.'
    key: Groups
    presence: required
    subkeys:
    - key: GroupsItem
      subkeys:
      - content: The group's unique beacon ID.
        key: BeaconID
        presence: required
        type: <integer>
      - content: The display name of the group.
        key: Name
        presence: required
        type: <string>
      - content: The description of the group.
        key: Description
        presence: optional
        type: <string>
      - content: Deprecated in iOS 9.3.1 and later. The URL of an image for the group.
        key: ImageURL
        presence: optional
        supportedOS:
          iOS:
            deprecated: 9.3.2
          macOS:
            introduced: n/a
        type: <string>
      - content: The source that provided this group; for example,  iTunesU, SIS, or MDM.
        key: ConfigurationSource
        presence: optional
        type: <string>
      - content: The user identifiers that are leaders of this group.
        key: LeaderIdentifiers
        presence: optional
        subkeys:
        - content: A user identifier.
          key: LeaderIdentifiersItem
          presence: required
          type: <string>
        type: <array>
      - content: The entries in the Users array that are members of the group.
        key: MemberIdentifiers
        presence: required
        subkeys:
        - content: A member identifier.
          key: MemberIdentifiersItem
          presence: required
          type: <string>
        type: <array>
      - content: 'The identifiers that refer to entries in the DeviceGroups array to which the instructor can assign users from this class.

          The presence/value of this key does not impact the configuration of the Shared iPad login screen.'
        key: DeviceGroupIdentifiers
        presence: optional
        subkeys:
        - content: A device group identifier.
          key: DeviceGroupIdentifiersItem
          presence: required
          type: <string>
        type: <array>
      type: <dictionary>
    type: <array>
  - content: 'For shared iPad profiles: The array of dictionaries that define the users that are shown in the iOS login window.


      For leader/teacher profiles: The array of dictionaries that define users that are members of the teacher''s groups.


      For member/student profiles: The array of dictionaries that must contain the definition of the user specified in the ''UserIdentifier'' key. With one-to-one member devices, this key should include only the device user and the teacher but not other class members.'
    key: Users
    presence: required
    subkeys:
    - key: UsersItem
      subkeys:
      - content: The unique identifier for a user in the organization.
        key: Identifier
        presence: required
        type: <string>
      - content: The name of the user.
        key: Name
        presence: required
        type: <string>
      - content: The given name of the user.
        key: GivenName
        presence: optional
        type: <string>
      - content: The family name of the user.
        key: FamilyName
        presence: optional
        type: <string>
      - content: The user's phonetic given name. This name is used to sort users in the Classroom app and the Shared iPad Login Screen.
        key: PhoneticGivenName
        presence: optional
        type: <string>
      - content: The user's phonetic family name. This name is used to sort users in the Classroom app and the shared iPad login screen.
        key: PhoneticFamilyName
        presence: optional
        type: <string>
      - content: 'A string containing a URL pointing to an image of the user. This image will be displayed in the iOS login screen and in the Classroom app. The recommended resolution is 256 x 256 pixels (512 x 512 pixels on a 2x device). The recommended formats are JPEG, PNG, and TIFF.

          The ''ResourcePayloadCertificateUUID'' identity certificate or the MDM client identity will be used to perform authentication when fetching the image.'
        key: ImageURL
        presence: optional
        type: <string>
      - content: Deprecated in iOS 9.3.1 and later. The URL pointing to an image of the user. The 'ResourcePayloadCertificateUUID' identity certificate or the MDM client identity will be used to perform authentication when fetching the specified resource.
        key: FullScreenImageURL
        presence: optional
        supportedOS:
          iOS:
            deprecated: 9.3.2
          macOS:
            deprecated: n/a
        type: <string>
      - content: 'The managed Apple ID for this user.

          This key is not required to configure Classroom, but it is used by Classroom if it is present.

          This key is required when configuring the Shared iPad login screen.'
        key: AppleID
        presence: optional
        type: <string>
      - content: The type of passcode UI to show when the user is at the login window.
        key: PasscodeType
        presence: optional
        rangelist:
        - complex
        - four
        - six
        type: <string>
      type: <dictionary>
    type: <array>
  - content: 'For leader/teacher profiles: The array of dictionaries that defines which device groups the leader can assign devices to. This key is not included in member payloads.'
    key: DeviceGroups
    presence: optional
    subkeys:
    - key: DeviceGroupsItem
      subkeys:
      - content: The unique identifier for the device group in the organization.
        key: Identifier
        presence: required
        type: <string>
      - content: The name of the device group, which must be unique in the organization.
        key: Name
        presence: required
        type: <string>
      - content: The serial numbers of the devices in the group.
        key: SerialNumbers
        presence: required
        subkeys:
        - content: A serial number.
          key: SerialNumbersItem
          presence: required
          type: <string>
        type: <array>
      type: <dictionary>
    type: <array>
  - content: If 'true', allows students enrolled in managed classes to modify their teacher's permissions for screen observation on their device.
    default: false
    key: ScreenObservationPermissionModificationAllowed
    presence: optional
    supportedOS:
      iOS:
        introduced: '10.3'
    type: <boolean>
  title: Education Configuration
com.apple.ews.account:
  description: ''
  payload:
    content: For macOS 10.9 and higher, an Exchange Web services (EWS) account is configured with support for Mail, Contacts, Calendar, Notes and Reminders. macOS 10.7-10.8 only supported Contacts.
    payloadtype: com.apple.ews.account
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The full email address for the account. If the email address string isn't present in the payload, the device prompts for it during profile installation.
    key: EmailAddress
    presence: optional
    type: <string>
  - content: 'The Exchange server host name or IP address.

      If using OAuth, the host name is ignored..'
    key: Host
    presence: optional
    type: <string>
  - content: If 'true', enables SSL.
    default: true
    key: SSL
    presence: optional
    type: <boolean>
  - content: 'If ''true'', enables OAuth for authentication. If OAuth is enabled, don''t specify a password.

      Available in macOS 10.14 and later'
    default: false
    key: OAuth
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.14'
    title: Use OAuth
    type: <boolean>
  - content: The URL to load into a web view for authentication via OAuth when autodiscovery isn't used. This setting requires a 'Host' value.
    key: OAuthSignInURL
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.14'
    title: URL for OAuth sign-in
    type: <string>
  - content: The user name for this Exchange account. This string is required for noninteractive (for example, MDM) installation. If it's missing, the device prompts for it during interactive profile installation.
    key: UserName
    presence: optional
    type: <string>
  - content: The password of the account. Use only with encrypted profiles.
    key: Password
    presence: optional
    type: <string>
  - content: The UUID of of the certificate payload within the same profile to use for the identity credential. Supported on macOS 10.12 or later.
    format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
    key: PayloadCertificateUUID
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.12'
    title: Payload Certificate UUID
    type: <string>
  - content: The UUID of of the certificate payload within the same profile to use for the identity credential. Supported on macOS 10.11 or later. On macOS 10.12 or later use the PayloadCertificateUUID.
    key: AuthenticationCertificateUUID
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.11'
    type: <string>
  - content: If 'true', enables Mail Drop.
    default: false
    key: allowMailDrop
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.12'
    title: Allow Mail Drop
    type: <boolean>
  - content: The server path.
    key: Path
    presence: optional
    type: <string>
  - content: The server port number.
    key: Port
    presence: optional
    type: <integer>
  - content: The external server address.
    key: ExternalHost
    presence: optional
    type: <string>
  - content: If 'true', enables SSL for connections to the external server.
    default: true
    key: ExternalSSL
    presence: optional
    type: <boolean>
  - content: The external server path.
    key: ExternalPath
    presence: optional
    type: <string>
  - content: The external server port number.
    key: ExternalPort
    presence: optional
    type: <integer>
  title: Exchange Web Services
com.apple.extensiblesso:
  description: Configures an app extension to handle SSO.
  payload:
    content: Configures an app extension that performs SSO on behalf of certain URLs. User channel support was added in macOS 11.0.
    payloadtype: com.apple.extensiblesso
    supportedOS:
      iOS:
        allowmanualinstall: false
        introduced: '13.0'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: false
        devicechannel: true
        introduced: '10.15'
        requiresdep: false
        userapprovedmdm: true
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The bundle identifier of the app extension that performs SSO for the specified URLs.
    key: ExtensionIdentifier
    presence: required
    type: <string>
  - content: 'The team identifier of the app extension.

      This key is required on macOS and ignored elsewhere.'
    key: TeamIdentifier
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
    type: <string>
  - content: The type of SSO.
    key: Type
    presence: required
    rangelist:
    - Credential
    - Redirect
    type: <string>
  - content: 'The realm name for ''Credential'' payloads. Use proper capitalization for this value.

      This key is ignored for ''Redirect'' payloads.'
    key: Realm
    presence: optional
    type: <string>
  - content: A dictionary of arbitrary data passed through to the app extension.
    key: ExtensionData
    presence: optional
    subkeys:
    - content: Keys and values to be passed to the app extension.
      key: ANY
      presence: optional
      type: <any>
    type: <dictionary>
  - content: 'An array of URL prefixes of identity providers where the app extension performs SSO.

      Required for ''Redirect'' payloads. Ignored for ''Credential'' payloads.

      The URLs must begin with ''http://'' or ''https://'', the scheme and host name are matched case-insensitively, query parameters and URL fragments are not allowed, and the URLs of all installed Extensible SSO payloads must be unique.'
    key: URLs
    presence: optional
    subkeys:
    - content: An http or https URL prefix.
      key: URL
      presence: required
      type: <string>
    type: <array>
  - content: "An array of host names or domain names that apps can authenticate through the app extension.\nRequired for 'Credential' payloads. Ignored for 'Redirect' payloads.\nHost or domain names are matched case-insensitively, and all the host/domain names of all installed Extensible SSO payloads must be unique.\nHosts that begin with a \u201C.\u201D are wildcard suffixes and match all subdomains; otherwise the host must be an exact match."
    key: Hosts
    presence: optional
    subkeys:
    - content: A host or domain name, with or without a leading dot.
      key: hostname
      presence: required
      type: <string>
    type: <array>
  - content: 'If set to ''Cancel'', the system cancels authentication requests when the screen is locked. If set to ''DoNotHandle'', the request continues without SSO instead. This does not apply to requests where ''userInterfaceEnabled'' is set to ''false'' or background NSURLSession requests.

      Available in iOS 15 and later and macOS 12 and later.'
    default: Cancel
    key: ScreenLockedBehavior
    presence: optional
    rangelist:
    - Cancel
    - DoNotHandle
    supportedOS:
      iOS:
        introduced: '15.0'
      macOS:
        introduced: '12.0'
    type: <string>
  - content: 'An array of bundle identifiers of apps that don''t use SSO provided by this extension.

      Available in iOS 15 and later and macOS 12 and later.'
    key: DeniedBundleIdentifiers
    presence: optional
    subkeys:
    - content: The bundle identifier of the app.
      key: bundleIdentifier
      presence: required
      type: <string>
    supportedOS:
      iOS:
        introduced: '15.0'
      macOS:
        introduced: '12.0'
    type: <array>
  - content: 'The Platform SSO authentication method the extension uses. Requires that the SSO Extension also supports the method.

      Available in macOS 13 and later.'
    key: AuthenticationMethod
    presence: optional
    rangelist:
    - Password
    - UserSecureEnclaveKey
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '13.0'
    type: <string>
  - content: 'The token this device uses for registration with Platform SSO. Use it for silent registration with the Identity Provider. Requires that ''AuthenticationMethod'' isn''t empty.

      Available in macOS 13 and later.'
    key: RegistrationToken
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '13.0'
    type: <string>
  title: Extensible Single Sign-On
com.apple.extensiblesso(kerberos):
  description: Configures an app extension to handle Kerberos SSO.
  payload:
    content: Configures the included Kerberos extension that performs SSO on behalf of specified hosts. User channel support was added in macOS 11.0.
    payloadtype: com.apple.extensiblesso
    supportedOS:
      iOS:
        allowmanualinstall: false
        introduced: '13.0'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: false
        devicechannel: true
        introduced: '10.15'
        requiresdep: false
        userapprovedmdm: true
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: This value must be  'com.apple.AppSSOKerberos.KerberosExtension' for this extension.
    key: ExtensionIdentifier
    presence: required
    rangelist:
    - com.apple.AppSSOKerberos.KerberosExtension
    type: <string>
  - content: This value must be 'apple' for the Kerberos extension.
    key: TeamIdentifier
    presence: required
    rangelist:
    - apple
    type: <string>
  - content: This value must be 'Credential' for the Kerberos extension.
    key: Type
    presence: required
    rangelist:
    - Credential
    type: <string>
  - content: The Kerberos realm, which should be properly capitalized. If in an Active Directory forest, this is the realm where the user logs in.
    key: Realm
    presence: required
    type: <string>
  - content: This is the dictionary used by the Apple built-in Kerberos extension.
    key: ExtensionData
    presence: optional
    subkeys:
    - content: The GSS name of the Kerberos cache to use. Rarely set by an administrator.
      key: cacheName
      presence: optional
      supportedOS:
        iOS:
          deprecated: '15.0'
        macOS:
          deprecated: '12.0'
      type: <string>
    - content: The principal (aka username) to use. You do not need to include the realm.
      key: principalName
      presence: optional
      type: <string>
    - content: The name of the Active Directory site the Kerberos extension should use. Most administrators will never need to modify this value, as the Kerberos extension can normally find the site automatically.
      key: siteCode
      presence: optional
      type: <string>
    - content: The PayloadUUID of a PKINIT certificate.
      key: certificateUUID
      presence: optional
      type: <string>
    - content: If 'false', the Kerberos extension doesn't automatically use LDAP and DNS to determine its AD site name.
      default: true
      key: useSiteAutoDiscovery
      presence: optional
      type: <boolean>
    - content: A list of bundle IDs allowed to access the ticket-granting ticket (TGT).
      key: credentialBundleIdACL
      presence: optional
      subkeys:
      - content: Bundle IDs allowed to access the TGT.  These values are case sensitive.
        key: credentialBundleIdACLItem
        presence: optional
        type: <string>
      type: <array>
    - content: If 'true', the Kerberos extension allows only managed apps to access and use the credential. This is in addition to the 'credentialBundleIDACL', if it is specified. Available in iOS 14 and later, and macOS 12 and later.
      default: false
      key: includeManagedAppsInBundleIdACL
      presence: optional
      supportedOS:
        iOS:
          introduced: '14.0'
        macOS:
          introduced: '12.0'
      type: <boolean>
    - content: 'If ''true'', the Kerberos extension allows the standard kerberos utilities including ''TicketViewer'' and ''klist'' to access and use the credential. This is in addition to ''includeManagedAppsInBundleIdACL'' or the ''credentialBundleIdACL'', if it is specified.

        Available in macOS 12 and later.'
      default: false
      key: includeKerberosAppsInBundleIdACL
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
        macOS:
          introduced: '12.0'
      type: <boolean>
    - content: A custom domain-realm mapping for Kerberos. This is used when the DNS name of hosts do not match the realm name. Most administrators will not need to customize this.
      key: domainRealmMapping
      presence: optional
      subkeys:
      - content: The key should be the name of the realm, and the value is an array of DNS suffixes that map to the realm.
        key: Realm
        presence: optional
        subkeys:
        - content: Domains to map to the realm
          key: RealmItem
          presence: optional
          type: <string>
        type: <array>
      type: <dictionary>
    - content: This property specifies it is the default realm if there is more than one Kerberos extension configuration.
      default: false
      key: isDefaultRealm
      presence: optional
      type: <boolean>
    - content: "The custom user name label used in the Kerberos extension instead of \u201CUsername\u201D. For example, \u201CCompany ID\u201D. Available in macOS 11 and later."
      key: customUsernameLabel
      presence: optional
      supportedOS:
        iOS:
          introduced: '14.0'
        macOS:
          introduced: '11.0'
      type: <string>
    - content: The text to be displayed to the user at the bottom of the Kerberos login window. It can be used to display help information or disclaimer text. Available in iOS 14 and later and macOS 11 and later.
      key: helpText
      presence: optional
      supportedOS:
        iOS:
          introduced: '14.0'
        macOS:
          introduced: '11.0'
      type: <string>
    - content: If 'false', disables password changes. Available in macOS 10.15 and later.
      default: true
      key: allowPasswordChange
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
      type: <boolean>
    - content: If 'false', passwords are not allowed to be saved to the keychain.
      default: true
      key: allowAutomaticLogin
      presence: optional
      type: <boolean>
    - content: If 'true', requires the user to provide Touch ID, Face ID or their passcode to access the keychain entry.
      default: false
      key: requireUserPresence
      presence: optional
      type: <boolean>
    - content: The number of days that passwords can be used on this domain. For most domains, this can be calculated automatically. Available in macOS 10.15 and later.
      key: pwExpireOverride
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
        macOS:
          deprecated: '12.0'
      type: <integer>
    - content: The number of days prior to password expiration when a notification of password expiration will be sent to the user. Available in macOS 10.15 and later.
      default: 15
      key: pwNotificationDays
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
      type: <integer>
    - content: The minimum length of passwords on the domain.Available in macOS 10.15 and later.
      key: pwReqLength
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
      type: <integer>
    - content: If 'true', passwords must meet Active Directory's definition of 'complex'.Available in macOS 10.15 and later.
      default: false
      key: pwReqComplexity
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
      type: <boolean>
    - content: The minimum age of passwords before they can be changed on this domain. Available in macOS 10.15 and later.
      key: pwReqMinAge
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
      type: <integer>
    - content: The number of prior passwords that cannot be re-used on this domain.Available in macOS 10.15 and later.
      key: pwReqHistory
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
      type: <integer>
    - content: The text version of the domain's password requirements. Only for use if 'pwReqComplexity' or 'pwReqLength' aren't specified. Available in macOS 10.15 and later.
      key: pwReqText
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
      type: <string>
    - content: This URL will launch in the user's default web browser when they initiate a password change. Available in macOS 10.15 and later.
      key: pwChangeURL
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
      type: <string>
    - content: If 'false', disables password sync. Note that this will not work if the user is logged in with a mobile account. Available in macOS 10.15 and later.
      default: false
      key: syncLocalPassword
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
      type: <boolean>
    - content: The time, in seconds, required to replicate changes in the Active Directory domain. The Kerberos extension will use this when checking password age after a change. Available in macOS 11 and later.
      default: 900
      key: replicationTime
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
        macOS:
          deprecated: '12.0'
          introduced: '11.0'
      type: <integer>
    - content: If 'true', doesn't prompt the user to setup the Kerberos extension until either the administrator enables it with the 'app-sso' tool or a Kerberos challenge is received. Available in macOS 11 and later.
      default: false
      key: delayUserSetup
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
        macOS:
          introduced: '11.0'
      type: <boolean>
    - content: 'If ''false'', the credential is requested on the next matching Kerberos challenge or network state change.

        If the credential is expired or missing, a new one will be created. Available in macOS 11 and later.'
      default: true
      key: monitorCredentialsCache
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
        macOS:
          introduced: '11.0'
      type: <boolean>
    - content: Require that LDAP connections use TLS. Available in macOS 11 and later.
      default: false
      key: requireTLSForLDAP
      presence: optional
      supportedOS:
        iOS:
          introduced: '14.0'
        macOS:
          introduced: '11.0'
      type: <boolean>
    - content: 'This setting affects how the Kerberos Extension credential is used by other processes. Use of the following:

        * ''always -'' The extension credential will always be used if the SPN matches the Kerberos Extension ''Hosts'' array. The credential will not be used if the calling app is not in the ''credentialBundleIDACL''.

        * ''whenNotSpecified -'' The credential will only be used when another credential has not been specified by the caller and the SPN matches the Kerberos Extensions ''Hosts'' array. The credential will not be used if the calling app is not in the ''credentialBundleIDACL''.

        * ''kerberosDefault - ''The default Kerberos processes for selecting credentials is used which normally uses the default Kerberos credential. This is the same as turning off this capability.

        Available in macOS 11 and later.'
      default: always
      key: credentialUseMode
      presence: optional
      rangelist:
      - always
      - whenNotSpecified
      - kerberosDefault
      supportedOS:
        iOS:
          introduced: '14.0'
        macOS:
          introduced: '11.0'
      type: <string>
    - content: 'The ordered list of preferred Key Distribution Centers (KDCs) to use for Kerberos traffic. Use this if the servers are not discoverable via DNS. If the servers are specified, then they are used for both connectivity checks and attempted first for Kerberos traffic. If the servers do not respond, then the device falls back to DNS discovery. Each entry is formatted the same as it would be in a ''krb5.conf'' file. Examples of entries are:

        * ''adserver1.example.com''

        * ''tcp/adserver1.example.com:88''

        * ''kkdcp://kerberosproxy.example.com:443/kkdcp'''
      key: preferredKDCs
      presence: optional
      subkeys:
      - content: A host or domain name in the format of [protocol/]hostname[:port][/path]
        key: preferredKDC
        presence: required
        type: <string>
      supportedOS:
        iOS:
          introduced: '15.0'
        macOS:
          introduced: '12.0'
      type: <array>
    - content: 'If ''true'', requires this configuration uses a TGT from Platform SSO instead of requesting a new one.

        Available in macOS 13 and later.'
      default: false
      key: usePlatformSSOTGT
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
        macOS:
          introduced: '13.0'
      type: <boolean>
    - content: 'If ''true'' and ''usePlatformSSOTGT'' is ''true'', allows the user to manually sign in.

        Available in macOS 13 and later.'
      default: true
      key: allowPlatformSSOAuthFallback
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
        macOS:
          introduced: '13.0'
      type: <boolean>
    - content: 'If ''true'', the Kerberos Extension handles Kerberos requests only. It doesn''t check for password expiration, show the password expiration in the menu, check for external password changes, perform password sync, or retrieve the home directory.

        Available in macOS 13 and later.'
      default: false
      key: performKerberosOnly
      presence: optional
      supportedOS:
        iOS:
          introduced: '16.0'
        macOS:
          introduced: '13.0'
      type: <boolean>
    type: <dictionary>
  - content: "One or more host or domain names for which the app extension performs SSO. Host or domain names are matched case-insensitively, and all the host/domain names of all installed Extensible SSO payloads must be unique.\nHosts that begin with a \u201C.\u201D are wildcard suffixes and will match all subdomains, otherwise the host must be an exact match."
    key: Hosts
    presence: optional
    subkeys:
    - content: A host or domain name. Values that begin with a "." will be used as domain names.
      key: hostname
      presence: required
      type: <string>
    type: <array>
  title: Extensible Single Sign-On (Kerberos)
com.apple.familycontrols.contentfilter:
  description: ''
  payload:
    content: Parental controls web filter.
    payloadtype: com.apple.familycontrols.contentfilter
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables web content filters.
    key: restrictWeb
    presence: required
    type: <boolean>
  - content: If 'true', filters content automatically.
    default: false
    key: useContentFilter
    presence: optional
    type: <boolean>
  - content: If 'true', enables web content filters.
    default: false
    key: whitelistEnabled
    presence: optional
    type: <boolean>
  - content: 'An array of sites that defines an allow list. If specified, this defines additional allowed sites besides those in the automated allow list and deny list, including disallowed adult sites.


      This key is required if ''whiteListEnabled'' is ''true''.'
    key: siteWhitelist
    presence: optional
    subkeys:
    - key: siteWhitelistItem
      subkeys:
      - content: The site prefix, including http(s) scheme.
        key: address
        presence: required
        type: <string>
      - content: The site page title.
        key: pageTitle
        presence: optional
        type: <string>
      type: <dictionary>
    type: <array>
  - content: The array of URLs that defines an allow list. When 'restrictWeb' and 'useContentFilter' are enabled, only URLs in the allow list are available to the user.
    key: filterWhitelist
    presence: optional
    subkeys:
    - content: An allowed site.
      key: filterWhitelistItem
      presence: required
      type: <string>
    type: <array>
  - content: The array of URLs that defines a deny list. When 'restrictWeb' and 'useContentFilter' are enabled, no URLs in the deny list are available to the user.
    key: filterBlacklist
    presence: optional
    subkeys:
    - content: A disallowed site.
      key: filterBlacklistItem
      presence: required
      type: <string>
    type: <array>
  title: 'Parental Controls: Content Filter'
com.apple.familycontrols.timelimits.v2:
  description: ''
  payload:
    content: Parental controls time limits.
    payloadtype: com.apple.familycontrols.timelimits.v2
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables time limits.
    key: familyControlsEnabled
    presence: required
    type: <boolean>
  - content: The time limits to enforce if 'familyControlsEnabled' is enabled.
    key: time-limits
    presence: optional
    subkeys:
    - content: The weekday allowance settings.
      key: weekday-allowance
      presence: optional
      subkeys: &id009
      - content: If 'true', enable these settings.
        key: enabled
        presence: required
        type: <boolean>
      - content: 'The type of day range:

          0 = Weekday

          1 = Weekend'
        key: rangeType
        presence: required
        rangelist:
        - 0
        - 1
        type: <integer>
      - content: The curfew start time, in the format '%d:%d:%d'.
        key: start
        presence: optional
        type: <string>
      - content: The curfew end time, in the format '%d:%d:%d'.
        key: end
        presence: optional
        type: <string>
      - content: The allowance for that day, in seconds.
        key: secondsPerDay
        presence: optional
        type: <integer>
      subkeytype: Allowance
      type: <dictionary>
    - content: The weekday curfew settings.
      key: weekday-curfew
      presence: optional
      subkeys: *id009
      subkeytype: Allowance
      type: <dictionary>
    - content: The weekend allowance settings.
      key: weekend-allowance
      presence: optional
      subkeys: *id009
      subkeytype: Allowance
      type: <dictionary>
    - content: The weekend curfew settings.
      key: weekend-curfew
      presence: optional
      subkeys: *id009
      subkeytype: Allowance
      type: <dictionary>
    type: <dictionary>
  title: 'Parental Controls: Time Limits'
com.apple.fileproviderd:
  description: ''
  payload:
    payloadtype: com.apple.fileproviderd
    supportedOS:
      macOS:
        allowmanualinstall: false
        devicechannel: true
        introduced: '11.0'
        requiresdep: false
        userapprovedmdm: true
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: If 'true', enables file providers access to the path of the requesting process.
    default: false
    key: AllowManagedFileProvidersToRequestAttribution
    presence: optional
    type: <boolean>
  title: File Provider
com.apple.finder:
  description: ''
  payload:
    payloadtype: com.apple.finder
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', disables the Finder's burn support.
    default: false
    key: ProhibitBurn
    presence: optional
    type: <boolean>
  - content: If Finder should operate in Simple or Full mode.
    key: InterfaceLevel
    presence: optional
    rangelist:
    - Simple
    - Full
    supportedOS:
      macOS:
        removed: '10.15'
    type: <string>
  - content: If set to true, Connect to Server will be disabled.
    default: false
    key: ProhibitConnectTo
    presence: optional
    type: <boolean>
  - content: If set to true, Eject will be disabled.
    default: false
    key: ProhibitEject
    presence: optional
    type: <boolean>
  - content: If set to true, Go To Folder will be disabled.
    default: false
    key: ProhibitGoToFolder
    presence: optional
    type: <boolean>
  - content: If set to false, external hard drives will not appear on the desktop.
    default: true
    key: ShowExternalHardDrivesOnDesktop
    presence: optional
    type: <boolean>
  - content: If set to false, internal hard drives will not appear on the desktop.
    default: false
    key: ShowHardDrivesOnDesktop
    presence: optional
    type: <boolean>
  - content: If set to false, mounted file servers will not appear on the desktop.
    default: false
    key: ShowMountedServersOnDesktop
    presence: optional
    type: <boolean>
  - content: If set to false, removable media will not appear on the desktop.
    default: true
    key: ShowRemovableMediaOnDesktop
    presence: optional
    type: <boolean>
  - content: If set to false, user will not be warned before emptying the trash.
    default: true
    key: WarnOnEmptyTrash
    presence: optional
    type: <boolean>
  title: Finder
com.apple.firstactiveethernet.managed:
  description: ''
  payload:
    payloadtype: com.apple.firstactiveethernet.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: Keys relevant to 802.1x configuration.   User enrollment payloads do not support the various proxy keys including ProxyType, ProxyServer, ProxyServerPort, ProxyUsername, ProxyPassword,, ProxyPACURL and ProxyPACFallbackAllowed.
    key: ANY
    presence: optional
    type: <any>
  title: '802.1X: First Active Ethernet'
com.apple.firstethernet.managed:
  description: ''
  payload:
    payloadtype: com.apple.firstethernet.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: Keys relevant to 802.1x configuration.   User enrollment payloads do not support the various proxy keys including ProxyType, ProxyServer, ProxyServerPort, ProxyUsername, ProxyPassword,, ProxyPACURL and ProxyPACFallbackAllowed.
    key: ANY
    presence: optional
    type: <any>
  title: '802.1X: First Ethernet'
com.apple.font:
  description: Use this section to define Font settings.
  payload:
    content: 'Each payload may contain one font file. Font files may be in TrueType (.ttf) or OpenType (.otf) file format. Collection types (.ttc or .otc) formats are not supported.

      Fonts are uniquely identified internally by their embedded PostScript name. Two fonts with the same PostScript name will be considered the same font, even if their contents differ. Installing two different fonts with the same PostScript name is not supported, and it is undefined which font will remain installed.'
    payloadtype: com.apple.font
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '7.0'
        sharedipad:
          mode: forbidden
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: 'The user-visible name for the font. This field is replaced by the actual name of the font after installation. Each payload must contain exactly one font file in trueType (.ttf) or OpenType (.otf) format. Collection formats (.ttc or .otc) are not supported.


      Fonts are identified by their embedded PostScript names. Two fonts with the same PostScript name are considered to be the same font even if their contents differ. Installing two different fonts with the same PostScript name isn''t supported, and the resulting behavior is undefined.'
    default: ''
    key: Name
    presence: optional
    title: Font Name
    type: <string>
  - content: The contents of the font file.
    key: Font
    presence: required
    title: Font
    type: <data>
  title: Font
com.apple.gamed:
  description: ''
  payload:
    content: Parental controls Game Center restrictions.
    payloadtype: com.apple.gamed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables Game Center.
    default: true
    key: GKFeatureGameCenterAllowed
    presence: optional
    supportedOS:
      macOS:
        deprecated: '10.13'
    type: <boolean>
  - content: If 'true', allows account modifications.
    default: true
    key: GKFeatureAccountModificationAllowed
    presence: optional
    type: <boolean>
  - content: If 'true', allows adding Game Center friends.
    default: true
    key: GKFeatureAddingGameCenterFriendsAllowed
    presence: optional
    supportedOS:
      macOS:
        deprecated: '10.13'
    type: <boolean>
  - content: If 'true', allows multiplayer gaming.
    default: true
    key: GKFeatureMultiplayerGamingAllowed
    presence: optional
    supportedOS:
      macOS:
        deprecated: '10.13'
    type: <boolean>
  title: 'Parental Controls: Game Center'
com.apple.globalethernet.managed:
  description: ''
  payload:
    payloadtype: com.apple.globalethernet.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.13'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: Keys relevant to 802.1x configuration.   User enrollment payloads do not support the various proxy keys including ProxyType, ProxyServer, ProxyServerPort, ProxyUsername, ProxyPassword,, ProxyPACURL and ProxyPACFallbackAllowed.
    key: ANY
    presence: optional
    type: <any>
  title: '802.1X: Global Ethernet'
com.apple.google-oauth:
  description: Use this section to configure Google accounts. The user will be prompted to sign in afterward.
  payload:
    content: A Google account payload sets up a Google email address as well as any other Google services the user enables after authentication. Google accounts must be installed via MDM or by Apple Configurator 2 (if the device is supervised). The payload never contains credentials and the user will be prompted to enter their credentials shortly after the payload successfully installs. On Shared iPads, this payload can only be installed on the MDM user channel.
    payloadtype: com.apple.google-oauth
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '9.3'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: A user-visible description of the Google account, shown in the Mail and Settings apps.
    key: AccountDescription
    presence: optional
    title: Account Description
    type: <string>
  - content: The user's full name for the Google account. This name appears in sent messages.
    key: AccountName
    presence: optional
    title: Account Name
    type: <string>
  - content: The full Google email address for the account.
    key: EmailAddress
    presence: required
    title: Email Address
    type: <string>
  - content: The communication service handler rules for this account.
    key: CommunicationServiceRules
    presence: optional
    subkeys:
    - content: A dictionary defining which app to use for audio calls made from this account.
      key: DefaultServiceHandlers
      presence: optional
      subkeys:
      - content: A string containing the bundle identifier for the default application that handles audio calls made to contacts from this account.
        key: AudioCall
        presence: optional
        supportedOS:
          iOS:
            introduced: '10.0'
          macOS:
            introduced: n/a
        title: App for audio calls
        type: <string>
      supportedOS:
        iOS:
          introduced: '10.0'
        macOS:
          introduced: n/a
      title: Default Service Handlers
      type: <dictionary>
    supportedOS:
      iOS:
        introduced: '10.0'
    title: Communication Service Rules
    type: <dictionary>
  - content: 'The VPNUUID of the per-app VPN the account uses for network communication.

      Available in iOS 14 and later.'
    key: VPNUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
    title: VPNUUID
    type: <string>
  title: Google Account
com.apple.homescreenlayout:
  description: ''
  payload:
    content: The payload defines a layout of apps, folders, & web clips for the Home screen.
    payloadtype: com.apple.homescreenlayout
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '9.3'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: true
        supervised: true
        userenrollment:
          mode: forbidden
      tvOS:
        allowmanualinstall: true
        introduced: '11.0'
        supervised: true
  payloadkeys:
  - content: An array of dictionaries, each of which must conform to the icon dictionary format. If this key isn't present, the user's dock is empty.
    key: Dock
    presence: optional
    subkeys: &id010
    - key: IconItem
      subkeys:
      - content: The type of the dock item.
        key: Type
        presence: required
        rangelist:
        - App
        - Folder
        - WebClip
        type: <string>
      - content: The human-readable string shown to the user. This setting is valid only if the type is 'Folder'.
        key: DisplayName
        presence: optional
        type: <string>
      - content: The bundle identifier of the app. This setting is required if the type is 'Application'.
        key: BundleID
        presence: optional
        type: <string>
      - content: An array of arrays of dictionaries, each conforming to the icon dictionary format. This setting is valid only if the type is 'Folder'.
        key: Pages
        presence: optional
        subkeys: &id011
        - key: PagesItem
          subkeys: *id010
          subkeytype: IconItem
          type: <array>
        subkeytype: PagesItem
        type: <array>
      - content: 'The URL of the existing web clip for this item. This setting is required if ''type'' is ''WebClip''. If more than one web clip exists with the same URL, the behavior is undefined.

          Specifying a web clip in this payload doesn''t create the web clip. Use the WebClip payload to create a web clip.'
        key: URL
        presence: optional
        supportedOS:
          iOS:
            introduced: '11.3'
        type: <string>
      type: <dictionary>
    subkeytype: IconItem
    type: <array>
  - content: An array of arrays of dictionaries, each of which must conform to the icon dictionary format.
    key: Pages
    presence: required
    subkeys: *id011
    subkeytype: PagesItem
    type: <array>
  title: Home Screen Layout
com.apple.ironwood.support:
  description: Parental controls for restricting Siri, Dictation and Profanity
  payload:
    payloadtype: com.apple.ironwood.support
    supportedOS:
      macOS:
        allowmanualinstall: true
        deprecated: '10.13'
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'false', suppresses profanity.
    default: true
    key: Profanity Allowed
    presence: optional
    type: <boolean>
  - content: If 'false', disables dictation.
    default: true
    key: Ironwood Allowed
    presence: optional
    type: <boolean>
  title: 'Parental Control: Dictation and Profanity'
com.apple.jabber.account:
  description: Use this section to define settings for configuration access to Jabber servers.
  payload:
    content: A Jabber payload creates a Jabber account on the device.
    payloadtype: com.apple.jabber.account
    supportedOS:
      macOS:
        allowmanualinstall: true
        deprecated: '10.14'
        devicechannel: false
        introduced: '10.7'
        removed: '10.14'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The description of the account.
    key: JabberAccountDescription
    presence: optional
    title: Account Description
    type: <string>
  - content: The server's address.
    key: JabberHostName
    presence: required
    title: Account Hostname
    type: <string>
  - content: The user's user name.
    key: JabberUserName
    presence: optional
    title: Account Username
    type: <string>
  - content: The user's password.
    key: JabberPassword
    presence: optional
    title: Account Password
    type: <string>
  - content: If 'true', enables SSL.
    default: false
    key: JabberUseSSL
    presence: optional
    title: Use SSL
    type: <boolean>
  - content: The server's port.
    default: 5222
    key: JabberPort
    presence: optional
    range:
      max: 65535
      min: 0
    title: Port Number
    type: <integer>
  - content: The authentication method for the account.
    key: JabberAuthentication
    presence: required
    rangelist:
    - JabberAuthPassword
    title: Jabber Authentication
    type: <string>
  title: Jabber Account
com.apple.ldap.account:
  description: Use this section to define settings for configuration access to LDAP servers.
  payload:
    payloadtype: com.apple.ldap.account
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The description of the account.
    key: LDAPAccountDescription
    presence: optional
    title: Account Description
    type: <string>
  - content: The server's address.
    key: LDAPAccountHostName
    presence: required
    title: Account Hostname
    type: <string>
  - content: The user's user name.
    key: LDAPAccountUserName
    presence: optional
    title: Account Username
    type: <string>
  - content: The user's password. The password is enabled only with encrypted profiles.
    key: LDAPAccountPassword
    presence: optional
    title: Account Password
    type: <string>
  - content: If 'true', enables SSL.
    default: true
    key: LDAPAccountUseSSL
    presence: optional
    title: Use SSL
    type: <boolean>
  - content: An array of search settings dictionaries.
    key: LDAPSearchSettings
    presence: optional
    subkeys:
    - key: LDAPSearchSettingsItem
      subkeys:
      - content: The description of this search setting.
        key: LDAPSearchSettingDescription
        presence: optional
        title: Description
        type: <string>
      - content: The path to the node where a search should start.
        key: LDAPSearchSettingSearchBase
        presence: required
        title: Search Setting Search Base
        type: <string>
      - content: 'The type of recursion to use in the search. It is one of the following values:

          * ''LDAPSearchSettingScopeBase'': Only the immediate node that the search base points to.

          * ''LDAPSearchSettingScopeOneLevel'': The node plus its immediate children.

          * ''LDAPSearchSettingScopeSubtree'': The node plus all children, regardless of depth.'
        default: LDAPSearchSettingScopeSubtree
        key: LDAPSearchSettingScope
        presence: optional
        rangelist:
        - LDAPSearchSettingScopeBase
        - LDAPSearchSettingScopeOneLevel
        - LDAPSearchSettingScopeSubtree
        title: Search Setting Scope
        type: <string>
      title: An LDAP Search Setting
      type: <dictionary>
    title: Search Settings
    type: <array>
  - content: 'The VPNUUID of the per-app VPN the account uses for network communication.

      Available in iOS 14 and later.'
    key: VPNUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: n/a
    title: VPNUUID
    type: <string>
  title: LDAP
com.apple.loginitems.managed:
  description: ''
  payload:
    content: This payload handles login items usage on macOS.
    payloadtype: com.apple.loginitems.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.13'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: An array of login item dictionaries.
    key: AutoLaunchedApplicationDictionary-managed
    presence: required
    subkeys:
    - content: A login item.
      key: LoginItem
      presence: required
      subkeys:
      - content: The URL or path string to the item's location.
        key: Path
        presence: required
        type: <string>
      - content: If true, hide this item in the Users & Groups login items list.
        default: false
        key: Hide
        presence: optional
        type: <boolean>
      type: <dictionary>
    type: <array>
  title: 'Login Items: Managed Items'
com.apple.loginwindow:
  description: ''
  payload:
    content: The com.apple.loginwindow payload creates managed preferences on macOS for system/device profiles.
    payloadtype: com.apple.loginwindow
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', shows the name and password dialog; if 'false', displays a list of users.
    default: false
    key: SHOWFULLNAME
    presence: optional
    type: <boolean>
  - content: If 'true', shows only network and system users when showing a user list.
    default: false
    key: HideLocalUsers
    presence: optional
    type: <boolean>
  - content: If 'true', shows network users when showing a user list.
    default: false
    key: IncludeNetworkUser
    presence: optional
    type: <boolean>
  - content: If 'true', hides administrator users when showing a user list.
    default: false
    key: HideAdminUsers
    presence: optional
    type: <boolean>
  - content: If 'true', displays Other... when showing a list of users.
    default: false
    key: SHOWOTHERUSERS_MANAGED
    presence: optional
    type: <boolean>
  - content: If this key is included in the payload, its value is displayed in the login window as additional computer information. Before macOS 10.10, this string could contain only certain information (host name, system version, or IP address). After macOS 10.10, setting this key to any value allows the user to click the time area of the menu bar to toggle through various computer information values.
    key: AdminHostInfo
    presence: optional
    rangelist:
    - HostName
    - SystemVersion
    - IPAddress
    type: <string>
  - content: The list of user GUIDs or group GUIDs of users that are allowed to log in. An asterisk '*' string specifies all users or groups.
    key: AllowList
    presence: optional
    subkeys:
    - content: A user or group GUID.
      key: AllowListItem
      presence: required
      type: <string>
    type: <array>
  - content: The list of user GUIDs or group GUIDs of users that cannot log in. This list takes priority over the list in the 'AllowList' key.
    key: DenyList
    presence: optional
    subkeys:
    - content: A user or group GUID.
      key: DenyListItem
      presence: required
      type: <string>
    type: <array>
  - content: If 'true', hides mobile account users in a user list. In some cases, mobile users show up as network users.
    default: false
    key: HideMobileAccounts
    presence: optional
    type: <boolean>
  - content: If 'true', disables the Shut Down button.
    default: false
    key: ShutDownDisabled
    presence: optional
    type: <boolean>
  - content: If 'true', disables the Restart item.
    default: false
    key: RestartDisabled
    presence: optional
    type: <boolean>
  - content: If 'true', disables the Sleep button.
    default: false
    key: SleepDisabled
    presence: optional
    type: <boolean>
  - content: If 'true', disregards the '>console' special user name, which will provide a command line UI.
    default: false
    key: DisableConsoleAccess
    presence: optional
    type: <boolean>
  - content: The text to display in the login window.
    key: LoginwindowText
    presence: optional
    type: <string>
  - content: If 'true', disables the Shut Down menu item when the user is logged in.
    default: false
    key: ShutDownDisabledWhileLoggedIn
    presence: optional
    type: <boolean>
  - content: If 'true', disables the Restart menu item when the user is logged in.
    default: false
    key: RestartDisabledWhileLoggedIn
    presence: optional
    type: <boolean>
  - content: If 'true', disables the Power Off menu item when the user is logged in.
    default: false
    key: PowerOffDisabledWhileLoggedIn
    presence: optional
    type: <boolean>
  - content: If 'true', disables the Log Out menu item when the user is logged in. Available in macOS 10.13 and later.
    default: false
    key: LogOutDisabledWhileLoggedIn
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.13'
    type: <boolean>
  - content: If 'true', disables the immediate Screen Lock functions. Available in macOS 10.13 and later.
    default: false
    key: DisableScreenLockImmediate
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.13'
    type: <boolean>
  - content: If 'True', shows the Input Menu in the login window.
    default: false
    key: showInputMenu
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.8'
    type: <boolean>
  - content: If t'rue', disables the automatic login option when using FileVault.
    default: false
    key: DisableFDEAutoLogin
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.9'
    type: <boolean>
  title: Login Window
com.apple.lom:
  description: Configures a computer to send or receive "PowerON". "PowerOFF", "Reset" requests.
  payload:
    content: Configures a computer to send or receive "PowerON". "PowerOFF", "Reset" requests.
    payloadtype: com.apple.lom
    supportedOS:
      macOS:
        allowmanualinstall: false
        devicechannel: true
        introduced: '11.0'
        requiresdep: false
        userapprovedmdm: true
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The UUID certificate for the device. This key indicates the device can receive 'PowerON', 'PowerOFF', and 'Reset' requests from a LOM controller. This certificate must contain the Key Usage attributes of Digital Signature, Key Encipherment and Data Encipherment. As well as the Extended Key Usage attributes of Server Authentication and Client Authentication.
    key: DeviceCertificateUUID
    presence: optional
    title: Device Certificate payload UUID
    type: <string>
  - content: The UUID certificate for the LOM controller. This key configures the device to accept the LOMDeviceRequestCommand from MDM and then send it to the target device.
    key: ControllerCertificateUUID
    presence: optional
    title: Controller Certificate payload UUID
    type: <string>
  - content: Array of payload UUIDs containing CA certificates that controllers use to evaluate trust of device certificates.
    key: DeviceCACertificateUUIDs
    presence: optional
    subkeys:
    - key: DeviceCACertificateUUIDsItem
      type: <string>
    title: CA certificate payload UUIDs
    type: <array>
  - content: 'Array of payload UUIDs containing CA certificates that devices use to evaluate trust of controller certificates.

      This key configures the device to accept the LOMDeviceRequestCommand from MDM and then send it to the target device. This certificate must contain the Key Usage attributes of Digital Signature, Key Encipherment and Data Encipherment. As well as the Extended Key Usage attributes of Server Authentication and Client Authentication.'
    key: ControllerCACertificateUUIDs
    presence: optional
    subkeys:
    - key: ControllerCACertificateUUIDsItem
      type: <string>
    title: CA certificate payload UUIDs
    type: <array>
  title: Lights Out Management (LOM)
com.apple.mail.managed:
  description: Use this section to define settings for access to Email servers.
  payload:
    content: An email payload creates an email account on the device.
    payloadtype: com.apple.mail.managed
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: A user-visible description of the email account, shown in the Mail and Settings applications.
    key: EmailAccountDescription
    presence: optional
    title: Account Description
    type: <string>
  - content: The full user name for the account. This name is shown in sent messages.
    key: EmailAccountName
    presence: optional
    title: Account Name
    type: <string>
  - content: Defines the protocol to be used for the account.
    key: EmailAccountType
    presence: required
    rangelist:
    - EmailTypeIMAP
    - EmailTypePOP
    title: Account Type
    type: <string>
  - content: The full email address for the account. If this string isn't present in the payload, the device prompts for this string during interactive profile installation in Settings or System Preferences.
    key: EmailAddress
    presence: optional
    title: Email Address
    type: <string>
  - content: The authentication scheme for incoming mail.
    key: IncomingMailServerAuthentication
    presence: required
    rangelist:
    - EmailAuthNone
    - EmailAuthPassword
    - EmailAuthCRAMMD5
    - EmailAuthNTLM
    - EmailAuthHTTPMD5
    title: Incoming Mail Server Authentication
    type: <string>
  - content: The incoming mail server host name.
    key: IncomingMailServerHostName
    presence: required
    title: Mail Server
    type: <string>
  - content: The incoming mail server port number. If no port number is specified, the default port for a given protocol is used.
    key: IncomingMailServerPortNumber
    presence: optional
    title: Port
    type: <integer>
  - content: If 'true', enables SSL for authentication on the incoming mail server.
    default: false
    key: IncomingMailServerUseSSL
    presence: optional
    title: Use SSL
    type: <boolean>
  - content: The user name for the email account, usually the same as the email address up to the @ character. If the user name isn't present in the payload and the account is set up to require authentication for incoming email, the device prompts for this string during interactive profile installation in Settings or System Preferences.
    key: IncomingMailServerUsername
    presence: optional
    title: Username
    type: <string>
  - content: The password for the incoming mail server. This password is used only with encrypted profiles.
    key: IncomingPassword
    presence: optional
    title: Password
    type: <string>
  - content: The password for the outgoing mail server. This password is used only with encrypted profiles.
    key: OutgoingPassword
    presence: optional
    title: Password
    type: <string>
  - content: 'If ''true'', the user is prompted only once for the password, which is used for both outgoing and incoming mail.

      This setting is only supported by interactive profile installations. Not supported by non-interactive installations (like MDM on iOS).'
    default: false
    key: OutgoingPasswordSameAsIncomingPassword
    presence: optional
    title: Outgoing Password Same As Incoming
    type: <boolean>
  - content: The authentication scheme for outgoing mail.
    key: OutgoingMailServerAuthentication
    presence: required
    rangelist:
    - EmailAuthNone
    - EmailAuthPassword
    - EmailAuthCRAMMD5
    - EmailAuthNTLM
    - EmailAuthHTTPMD5
    title: Authentication Type
    type: <string>
  - content: The outgoing mail server host name.
    key: OutgoingMailServerHostName
    presence: required
    title: Mail Server
    type: <string>
  - content: The outgoing mail server port number. If no port number is specified, ports 25, 587, and 465 are used, in that order.
    key: OutgoingMailServerPortNumber
    presence: optional
    title: Port
    type: <integer>
  - content: If 'true', enables SSL authentication on the outgoing mail server.
    default: false
    key: OutgoingMailServerUseSSL
    presence: optional
    title: Use SSL
    type: <boolean>
  - content: The user name for the email account, usually the same as the email address up to the @ character. If the user name isn't present in the payload and the account is set up to require authentication for outgoing email, the device prompts for this string during interactive profile installation in Settings or System Preferences.
    key: OutgoingMailServerUsername
    presence: optional
    title: Username
    type: <string>
  - content: If 'true', prevents messages from being moved out of this email account and into another account. It also prevents forwarding or replying from an account other than one the message was sent to.
    default: false
    key: PreventMove
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
      macOS:
        introduced: n/a
    title: Prevent Move
    type: <boolean>
  - content: If 'true', prevents this account from sending mail in any app other than the Apple Mail app.
    default: false
    key: PreventAppSheet
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
      macOS:
        introduced: n/a
    title: Prevent App Sheet
    type: <boolean>
  - content: If 'true', enables S/MIME encryption. In iOS 10.0 and later, this key is ignored.
    default: false
    key: SMIMEEnabled
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
      macOS:
        introduced: n/a
    title: S/MIME Enabled
    type: <boolean>
  - content: If 'true', enables S/MIME signing for this account.
    default: false
    key: SMIMESigningEnabled
    presence: optional
    supportedOS:
      iOS:
        introduced: '10.0'
      macOS:
        introduced: n/a
    title: S/MIME Signing Enabled
    type: <boolean>
  - content: The payload UUID of the identity certificate used to sign messages sent from this account.
    format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
    key: SMIMESigningCertificateUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
      macOS:
        introduced: n/a
    title: S/MIME Signing Certificate
    type: <string>
  - content: If 'true', enables S/MIME encryption for this account.
    default: false
    key: SMIMEEncryptionEnabled
    presence: optional
    supportedOS:
      iOS:
        introduced: '10.0'
    title: S/MIME Encryption Enabled
    type: <boolean>
  - content: The UUID of the identity certificate used to decrypt messages sent to this account. The public certificate is attached to outgoing mail to allow encrypted mail to be sent to this user. When the user sends encrypted mail, the public certificate is used to encrypt the copy of the mail in their Sent mailbox.
    format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
    key: SMIMEEncryptionCertificateUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
      macOS:
        introduced: n/a
    title: S/MIME Encryption Certificate
    type: <string>
  - content: 'If ''true'', displays the per-message encryption switch in the Mail Compose UI.


      As of iOS 12.0, this key is deprecated. Use ''SMIMEEnableEncryptionPerMessageSwitch'' instead.'
    default: false
    key: SMIMEEnablePerMessageSwitch
    presence: optional
    supportedOS:
      iOS:
        deprecated: '10.0'
        introduced: '8.0'
    title: S/MIME Enable Per-Message Switch
    type: <boolean>
  - content: If 'true', excludes this account from Recent Addresses syncing.
    default: false
    key: disableMailRecentsSyncing
    presence: optional
    supportedOS:
      iOS:
        introduced: '6.0'
    title: Disable Mail Recents Syncing
    type: <boolean>
  - content: If 'true', enables this account to use Mail Drop.
    default: false
    key: allowMailDrop
    presence: optional
    supportedOS:
      iOS:
        introduced: '9.2'
      macOS:
        introduced: '10.12'
    title: Allow Mail Drop
    type: <boolean>
  - content: The path prefix for the IMAP mail server.
    key: IncomingMailServerIMAPPathPrefix
    presence: optional
    title: Path Prefix
    type: <string>
  - content: If 'true', the user can turn S/MIME signing on or off in Settings.
    default: false
    key: SMIMESigningUserOverrideable
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
      macOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', the user can select the signing identity.
    default: false
    key: SMIMESigningCertificateUUIDUserOverrideable
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
      macOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', enables S/MIME encryption by default.
    default: false
    key: SMIMEEncryptByDefault
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
    type: <boolean>
  - content: If 'true', the user can turn encryption by default on/off, and encryption is on.
    default: false
    key: SMIMEEncryptByDefaultUserOverrideable
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
      macOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', the user can select the S/MIME encryption identity, and encryption is on.
    default: false
    key: SMIMEEncryptionCertificateUUIDUserOverrideable
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
      macOS:
        introduced: n/a
    type: <boolean>
  - content: If 'true', displays the per-message encryption switch in the Mail Compose UI.
    default: false
    key: SMIMEEnableEncryptionPerMessageSwitch
    presence: optional
    supportedOS:
      iOS:
        introduced: '12.0'
      macOS:
        introduced: n/a
    type: <boolean>
  - content: 'The VPNUUID of the per-app VPN the account uses for network communication.

      Available in iOS 14 and later.'
    key: VPNUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: n/a
    title: VPNUUID
    type: <string>
  title: Mail
com.apple.mcxMenuExtras:
  payload:
    content: 'Specified menu extras will be added or removed from the menu bar

      after user login. Standard menu extra may be specified by file

      name. Non-standard menu extras are specified by full path.'
    payloadtype: com.apple.mcxMenuExtras
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The number of seconds to delay after login before adding or removing menu extras. If the delay is too short, the menu extras don't appear, or disappear from the menu bar.
    default: 2.5
    key: delaySeconds
    presence: optional
    type: <real>
  - content: The maximum wait, in seconds, for all menu extras to be added or removed.
    default: 20.0
    key: maxWaitSeconds
    presence: optional
    type: <real>
  - content: If 'true', enables the AirPort menu extra.
    key: AirPort.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Battery menu extra.
    key: Battery.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Bluetooth menu extra.
    key: Bluetooth.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the CPU menu extra.
    key: CPU.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Clock menu extra.
    key: Clock.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Displays menu extra.
    key: Displays.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Eject menu extra.
    key: Eject.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Fax menu extra.
    key: Fax.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the HomeSync menu extra.
    key: HomeSync.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the iChat menu extra.
    key: iChat.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Ink menu extra.
    key: Ink.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the IrDA menu extra.
    key: IrDA.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the PCCard menu extra.
    key: PCCard.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the PPP menu extra.
    key: PPP.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the PPPoE menu extra.
    key: PPPoE.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Remote Desktop menu extra.
    key: RemoteDesktop.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Script menu extra.
    key: Script Menu.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Spaces menu extra.
    key: Spaces.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Sync menu extra.
    key: Sync.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Text Input menu extra.
    key: TextInput.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the TimeMachine menu extra.
    key: TimeMachine.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Universal Access menu extra.
    key: UniversalAccess.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the User menu extra.
    key: User.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the VPN menu extra.
    key: VPN.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the Volume menu extra.
    key: Volume.menu
    presence: optional
    type: <boolean>
  - content: If 'true', enables the WWAN menu extra.
    key: WWAN.menu
    presence: optional
    type: <boolean>
  title: Managed Menu Extras
com.apple.mcxloginscripts:
  description: ''
  payload:
    content: Login and logout managed script handling
    payloadtype: com.apple.mcxloginscripts
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: An array of one or more dictionaries of scripts to run at user login time.
    key: loginscripts
    presence: optional
    subkeys: &id012
    - key: ScriptsItems
      subkeys:
      - content: The filename for display purposes.
        key: filename
        presence: required
        type: <string>
      - content: The UTF-8 encoded data object representing the executable script.
        key: filedata
        presence: required
        type: <data>
      type: <dictionary>
    subkeytype: ScriptsItems
    type: <array>
  - content: An array of one or more dictionaries of scripts to run at user logout time.
    key: logoutscripts
    presence: optional
    subkeys: *id012
    subkeytype: ScriptsItems
    type: <array>
  - content: If 'true', doesn't execute the login scripts during login.
    default: false
    key: skipLoginHook
    presence: optional
    type: <boolean>
  - content: If 'true', doesn't execute the logout scripts during logout.
    default: false
    key: skipLogoutHook
    presence: optional
    type: <boolean>
  title: 'Login Window: Scripts'
com.apple.mcxprinting:
  payload:
    payloadtype: com.apple.mcxprinting
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', requires an administrator password to add printers.
    default: true
    key: RequireAdminToAddPrinters
    presence: optional
    type: <boolean>
  - content: If 'true', allows printers that connect directly to a user's computer.
    default: true
    key: AllowLocalPrinters
    presence: optional
    type: <boolean>
  - content: If 'true', requires an administrator password to print locally.
    default: false
    key: RequireAdminToPrintLocally
    presence: optional
    type: <boolean>
  - content: If 'true', shows only managed printers.
    default: false
    key: ShowOnlyManagedPrinters
    presence: optional
    type: <boolean>
  - content: If 'true', prints the page footer (including the user name and date).
    default: false
    key: PrintFooter
    presence: optional
    type: <boolean>
  - content: If 'true', includes the MAC address.
    default: false
    key: PrintMACAddress
    presence: optional
    type: <boolean>
  - content: The footer font size.
    key: FooterFontSize
    presence: optional
    type: <string>
  - content: The footer font name.
    key: FooterFontName
    presence: optional
    type: <string>
  - content: The default printer for the user.
    key: DefaultPrinter
    presence: optional
    subkeys:
    - content: The device URI.
      key: DeviceURI
      presence: optional
      type: <string>
    - content: The display name.
      key: DisplayName
      presence: optional
      type: <string>
    type: <dictionary>
  - content: The printers available to a user.
    key: UserPrinterList
    presence: optional
    subkeys:
    - content: A dictionary of printer details.
      key: Printer
      presence: optional
      subkeys:
      - content: The device URI.
        key: DeviceURI
        presence: optional
        type: <string>
      - content: The display name.
        key: DisplayName
        presence: optional
        type: <string>
      - content: The printer's location.
        key: Location
        presence: optional
        type: <string>
      - content: The printer's model.
        key: Model
        presence: optional
        type: <string>
      - content: If 'true', locks the printer.
        default: false
        key: PrinterLocked
        presence: optional
        type: <boolean>
      - content: The printer's PPDURL.
        key: PPDURL
        presence: optional
        type: <string>
      type: <dictionary>
    type: <dictionary>
  title: Printing
com.apple.mdm:
  description: Use this section to define settings for mobile device management.
  payload:
    payloadtype: com.apple.mdm
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '6.0'
        supervised: false
  payloadkeys:
  - content: The UUID of the certificate payload for the device's identity. It may also point to a SCEP payload.
    format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
    key: IdentityCertificateUUID
    presence: required
    title: Identity Certificate UUID
    type: <string>
  - content: The topic that MDM listens to for push notifications. The certificate that the server uses to send push notifications must have the same topic in its subject. The topic must begin with the 'com.apple.mgmt.' prefix.
    key: Topic
    presence: required
    title: Topic
    type: <string>
  - content: The URL that the device contacts to retrieve device management instructions. The URL must begin with the 'https://' URL scheme, and may contain a port number (':1234', for example).
    format: ^https://.*$
    key: ServerURL
    presence: required
    title: Server URL
    type: <string>
  - content: The URL that the device should use to check in during installation. The URL must begin with the 'https://' URL scheme and may contain a port number (':1234', for example). If this URL isn't given, 'ServerURL' is used for both purposes.
    format: ^https://.*$
    key: CheckInURL
    presence: optional
    title: Check In URL
    type: <string>
  - content: If 'true', each message coming from the device carries the additional 'Mdm-Signature' HTTP header.
    default: false
    key: SignMessage
    presence: optional
    title: Sign Message
    type: <boolean>
  - content: 'Logical OR of the following bit flags:

      ''1'': Allow inspection of installed configuration profiles.

      ''2'': Allow installation and removal of configuration profiles.

      ''4'': Allow device lock and passcode removal.

      ''8'': Allow device erase.

      ''16'': Allow query of device information (device capacity, serial number).

      ''32'': Allow query of network information (phone/SIM numbers, MAC addresses).

      ''64'': Allow inspection of installed provisioning profiles.

      ''128'': Allow installation and removal of provisioning profiles.

      ''256'': Allow inspection of installed applications.

      ''512'': Allow restriction-related queries.

      ''1024'': Allow security-related queries.

      ''2048'': Allow manipulation of settings.

      ''4096'': Allow app management.

      The value can''t be ''0''. If ''2'' is specified, ''1'' must also be specified. If ''128'' is specified, ''64'' must also be specified.

      If the ''ManagedAppleID'' is included, then ''AccessRights'' are ignored.'
    key: AccessRights
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
      macOS:
        userenrollment:
          mode: ignored
    title: Access Rights
    type: <integer>
  - content: 'If ''true'', the device uses the development APNS servers. Otherwise, the device uses the production servers.

      Note that this property must be set to ''false'' if your Apple Push Notification Service certificate was issued by the Apple Push Certificate Portal (''https://identity.apple.com/pushcert''). That portal only issues certificates for the production push environment.'
    default: false
    key: UseDevelopmentAPNS
    presence: optional
    title: Use Development APNS
    type: <boolean>
  - content: The Managed Apple ID of the user. Available in iOS 13.1 and later, and macOS 10.15 and later.
    key: ManagedAppleID
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.1'
        userenrollment:
          mode: required
      macOS:
        introduced: '10.15'
        userenrollment:
          mode: required
      tvOS:
        introduced: n/a
    title: Managed Apple ID
    type: <string>
  - content: 'The Managed Apple ID pre-assigned to the authenticated user. This is only used with the BYOD enrollment flow.

      Available in iOS 15 and later.'
    key: AssignedManagedAppleID
    presence: optional
    supportedOS:
      iOS:
        introduced: '15.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Assigned Managed Apple ID
    type: <string>
  - content: 'The enrollment mode the server indicates must be used when enrolling. This must be present for BYOD enrollments.

      Available in iOS 15 and later.'
    key: EnrollmentMode
    presence: optional
    rangelist:
    - BYOD
    supportedOS:
      iOS:
        introduced: '15.0'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Enrollment Mode
    type: <string>
  - content: An array of strings, each containing the UUID of a certificate to be used when evaluating trust to the '.../connect/' URLs of MDM servers.
    key: ServerURLPinningCertificateUUIDs
    presence: optional
    subkeys:
    - content: A certificate payload UUID.
      key: ServerURLPinningCertificateUUIDsItem
      presence: required
      type: <string>
    supportedOS:
      iOS:
        introduced: '13.4'
      macOS:
        introduced: '10.13'
      tvOS:
        introduced: '13.4'
    type: <array>
  - content: An array of strings, each containing the payload UUID of a certificate to be used when evaluating trust to the '.../checkin/' URLs of MDM servers.
    key: CheckInURLPinningCertificateUUIDs
    presence: optional
    subkeys:
    - content: A certificate payload UUID.
      key: CheckInURLPinningCertificateUUIDsItem
      presence: required
      type: <string>
    supportedOS:
      iOS:
        introduced: '13.4'
      macOS:
        introduced: '10.13'
      tvOS:
        introduced: '13.4'
    type: <array>
  - content: 'If ''true'', fails the connection attempt unless a verified positive response is obtained during certificate revocation checks.

      If ''false'', revocation checks are done on a best-attempt basis, where failure to reach the server isn''t considered fatal.'
    default: false
    key: PinningRevocationCheckRequired
    presence: optional
    supportedOS:
      iOS:
        introduced: '13.4'
      macOS:
        introduced: '10.13'
      tvOS:
        introduced: '13.4'
    type: <boolean>
  - content: 'A unique array of strings indicating server capabilities. If the server manages macOS devices or a Shared iPad, this field is mandatory and must contain the value ''com.apple.mdm.per-user-connections'', which indicates that the server supports both device and user connections.

      Starting with macOS 11, it is also recommended that macOS device enrollment profiles contain the value ''com.apple.mdm.bootstraptoken'' to ensure the Bootstrap Token is created and escrowed with the MDM server at enrollment time.'
    key: ServerCapabilities
    presence: optional
    subkeys:
    - key: ServerCapabilitiesItems
      rangelist:
      - com.apple.mdm.per-user-connections
      - com.apple.mdm.bootstraptoken
      type: <string>
    type: <array>
  - content: If 'true', the device attempts to send a CheckOut <https://developer.apple.com/library/archive/documentation/Miscellaneous/Reference/MobileDeviceManagementProtocolRef/2-MDM_Check_In_Protocol/MDM_Check_In_Protocol..html#//apple_ref/doc/uid/TP40017387-CH4-SW7> message to the 'CheckInURL' when the profile is removed.
    default: false
    key: CheckOutWhenRemoved
    presence: optional
    type: <boolean>
  - content: 'This property specifies an iTunes Store ID for an app the system can install with the InstallApplicationCommand, without any approval from the user. The MDM vendor or managing organization generally provides this app, which enhances the management experience for the user. The device shows the user details about this app in the account-driven enrollment process prior to installing the MDM profile. Use this property with account-driven MDM enrollments that normally require user approval for app installs through MDM.

      Only account-driven user enrollments support this property and other enrollment types ignore it.

      Available in iOS 15.1 and later.'
    key: RequiredAppIDForMDM
    presence: optional
    supportedOS:
      iOS:
        introduced: '15.1'
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <integer>
  - content: 'If ''true'', warns the user that they need to reboot into RecoveryOS and allow the MDM to use the Bootstrap Token for authentication for certain sensitive operations such as enabling kernel extensions or installing some types of software updates. If the MDM doesn''t need to perform these operations, it can leave this key set to ''false'', and the user won''t be notified.

      The SettingsCommand.Command.Settings.MDMOptions.MDMOptions command overrides this default value.

      This setting only applies to devices that have ''BootstrapTokenRequiredForSoftwareUpdate'' or ''BootstrapTokenRequiredForKernelExtensionApproval'' set to ''true'' in their SecurityInfoResponse.SecurityInfo.

      DEP-enrolled devices are automatically allowed to use the Bootstrap Token for authentication.

      Available in macOS 11 and later.'
    default: false
    key: PromptUserToAllowBootstrapTokenForAuthentication
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '11.0'
      tvOS:
        introduced: n/a
    type: <boolean>
  title: MDM
com.apple.mobiledevice.passwordpolicy:
  description: Use this section to define passcode policy settings
  payload:
    payloadtype: com.apple.mobiledevice.passwordpolicy
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          mode: forbidden
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'false', prevents use of a simple passcode. A simple passcode contains repeated characters, or increasing or decreasing characters (such as '123' or 'CBA').
    default: true
    key: allowSimple
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Allow Simple Value
    type: <boolean>
  - content: If 'true', forces the user to enter a PIN.
    default: false
    key: forcePIN
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Require Passcode on Device
    type: <boolean>
  - content: The number of allowed failed attempts to enter the passcode at the device's lock screen. After six failed attempts, a time delay is imposed before a passcode can be entered again. The delay increases with each attempt. In macOS, set 'minutesUntilFailedLoginReset' to define a delay before the next passcode can be entered. When this number is exceeded in macOS, the device is locked; in iOS, the device is wiped.
    default: 11
    key: maxFailedAttempts
    presence: optional
    range:
      max: 11
      min: 2
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Maximum Number of Failed Attempts
    type: <integer>
  - content: The maximum number of minutes for which the device can be idle, without being unlocked by the user, before it gets locked by the system. When this limit is reached, the device is locked and the passcode must be entered. The user can edit this setting, but the value cannot exceed the 'maxInactivity' value. In macOS, this inactivity value is translated to screen-saver settings.
    key: maxInactivity
    presence: optional
    range:
      max: 15
      min: 0
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Auto-Lock
    type: <integer>
  - content: The number of days for which the passcode can remain unchanged. After this number of days, the user is forced to change the passcode before the device is unlocked.
    key: maxPINAgeInDays
    presence: optional
    range:
      max: 730
      min: 0
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Maximum Passcode Age
    type: <integer>
  - content: 'The minimum number of complex characters that a passcode must contain. A complex character is a character other than a number or a letter, such as & % $ #.

      This property is ignored for User Enrollments.'
    default: 0
    key: minComplexChars
    presence: optional
    range:
      max: 4
      min: 0
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Minimum Number of Complex Characters
    type: <integer>
  - content: The minimum overall length of the passcode. This parameter is independent of the also optional minComplexChars argument.
    default: 0
    key: minLength
    presence: optional
    range:
      max: 16
      min: 0
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Minimum Passcode Length
    type: <integer>
  - content: If 'true', requires alphabetic characters (abcd) instead of only numeric characters.
    default: false
    key: requireAlphanumeric
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Require Alphabetic Value
    type: <boolean>
  - content: This value defines N, where the new passcode must be unique within the last N entries in the passcode history.
    key: pinHistory
    presence: optional
    range:
      max: 50
      min: 1
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Passcode History
    type: <integer>
  - content: The maximum grace period, in minutes, to unlock the phone without entering a passcode. The default is 0, which is no grace period and requires a passcode immediately. In macOS, this grace period value is translated to screen-saver settings.
    default: 0
    key: maxGracePeriod
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: ignored
    title: Grace Period for Device Lock
    type: <integer>
  - content: The number of minutes before the login is reset after the maximum number of unsuccessful login attempts is reached. This key requires setting 'maxFailedAttempts'. Available in macOS 10.10 and later.
    key: minutesUntilFailedLoginReset
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.10'
        userenrollment:
          mode: ignored
    type: <integer>
  - content: If 'true', causes a password reset to occur the next time the user tries to authenticate. If this key is set in a device profile, the setting takes effect for all users, and admin authentications may fail until the admin user password is also reset. Available in macOS 10.13 and later.
    default: false
    key: changeAtNextAuth
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.13'
        userenrollment:
          mode: ignored
    type: <boolean>
  title: Passcode
com.apple.networkusagerules:
  description: ''
  payload:
    content: Network Usage Rules allow enterprises to specify how devices use networks, such as cellular data networks. iOS 9-12 support only ApplicationRules. In iOS 13, ApplicationRules, SIMRules, or both must be present.
    payloadtype: com.apple.networkusagerules
    supportedOS:
      iOS:
        allowmanualinstall: false
        introduced: '9.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: An array of application rules, that apply to only managed apps.
    key: ApplicationRules
    presence: optional
    subkeys:
    - key: ApplicationRulesItem
      subkeys:
      - content: 'A list of managed app identifiers, as strings, that must follow the associated rules. If this key is missing, the rules apply to all managed apps on the device.


          Each string in the ''AppIdentifierMatches'' array may either be an exact app identifier match (for example, ''com.mycompany.myapp'') or it may specify a prefix match for the bundle ID by using the * wildcard character. If used, this character must appear after a period (.) and may only appear once, at the end of the string; for example, ''com.mycompany.*''.'
        key: AppIdentifierMatches
        presence: optional
        subkeys:
        - content: A managed app identifier.
          key: AppIdentifierMatchesItem
          presence: required
          type: <string>
        type: <array>
      - content: If 'false', disables cellular data while roaming for all matching managed apps.
        default: true
        key: AllowRoamingCellularData
        presence: optional
        type: <boolean>
      - content: If 'false', disables cellular data for all matching managed apps.
        default: true
        key: AllowCellularData
        presence: optional
        type: <boolean>
      type: <dictionary>
    type: <array>
  - content: An array of SIM rules, that apply to all apps.
    key: SIMRules
    presence: optional
    subkeys:
    - key: SIMRulesItem
      subkeys:
      - content: One or more ICCIDs of SIM cards for which the 'WiFiAssistPolicy' applies. All ICCIDs in all installed Network Usage Rules payloads must be unique. An example ICCID is '89310410106543789301'.
        key: ICCIDs
        presence: required
        subkeys:
        - content: An ICCID.
          key: ICCID
          presence: required
          type: <string>
        type: <array>
      - content: 'The Wi-Fi Assist policy to apply to the SIM cards specified in the ICCIDs. See About Wi-Fi Assist <https://support.apple.com/en-us/HT205296> to learn more.

          * ''2'': Use the default system policy for the specified SIM card(s).

          * ''3'': Make Wi-Fi Assist switch more aggressively from a poor Wi-Fi connection to cellular data for the specified SIM card(s). This setting may increase cellular data use and may impact battery life.'
        key: WiFiAssistPolicy
        presence: required
        rangelist:
        - 2
        - 3
        type: <integer>
      type: <dictionary>
    supportedOS:
      iOS:
        introduced: '13.0'
    type: <array>
  title: Network Usage Rules
com.apple.notificationsettings:
  description: Configures notifications settings for apps
  payload:
    content: "A notification settings payload specifies the restriction enforced notification settings for apps using their bundle identifier. The profile specifies notification settings by bundle identifier (even for apps that aren\u2019t installed on the device yet), and those settings will always be enforced."
    payloadtype: com.apple.notificationsettings
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '9.3'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: true
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.15'
        requiresdep: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: An array of notification settings dictionaries.
    key: NotificationSettings
    presence: required
    subkeys:
    - key: NotificationSettingsItem
      subkeys:
      - content: 'The bundle identifier of the app to which to apply these notification settings.

          Available in iOS 9.3 and later and macOS 10.15 and later.'
        key: BundleIdentifier
        presence: required
        title: App Bundle Identifier
        type: <string>
      - content: 'If ''true'', enables notifications for this app.

          Available in iOS 9.3 and later and macOS 10.15 and later.'
        default: true
        key: NotificationsEnabled
        presence: optional
        title: Enable Notifications
        type: <boolean>
      - content: 'If ''true'', enables notifications in the notification center for this app.

          Available in iOS 9.3 and later and macOS 10.15 and later.'
        default: true
        key: ShowInNotificationCenter
        presence: optional
        title: Show in Notification Center
        type: <boolean>
      - content: 'If ''true'', enables notifications on the lock screen for this app.

          Available in iOS 9.3 and later and macOS 10.15 and later.'
        default: true
        key: ShowInLockScreen
        presence: optional
        title: Show in Lock Screen
        type: <boolean>
      - content: 'The type of alert for notifications for this app:

          * ''0'': None

          * ''1'': Temporary Banner

          * ''2'': Persistent Banner

          Available in iOS 9.3 and later and macOS 10.15 and later.'
        default: 1
        key: AlertType
        presence: optional
        rangelist:
        - 0
        - 1
        - 2
        title: Alert Type
        type: <integer>
      - content: 'If ''true'', enables badges for this app.

          Available in iOS 9.3 and later and macOS 10.15 and later.'
        default: true
        key: BadgesEnabled
        presence: optional
        title: Badges Enabled
        type: <boolean>
      - content: If 'true', enables sounds for this app.
        default: true
        key: SoundsEnabled
        presence: optional
        title: Sounds Enabled
        type: <boolean>
      - content: 'If ''true'', enables notifications in CarPlay for this app.

          Available in iOS 12 and later.'
        default: true
        key: ShowInCarPlay
        presence: optional
        supportedOS:
          iOS:
            introduced: '12.0'
          macOS:
            introduced: n/a
        title: Show in CarPlay
        type: <boolean>
      - content: 'If ''true'', enables critical alerts that can ignore Do Not Disturb and ringer settings for this app.

          Available in iOS 12 and later and macOS 10.15 and later.'
        default: false
        key: CriticalAlertEnabled
        presence: optional
        supportedOS:
          iOS:
            introduced: '12.0'
        title: Critical Alert Enabled
        type: <boolean>
      - content: 'The type of grouping for notifications for this app:

          * ''0'': Automatic: Group notifications into app-specified groups.

          * ''1'': By app: Group notifications into one group.

          * ''2'': Off: Don''t group notifications.

          Available in iOS 12 and later.'
        default: 0
        key: GroupingType
        presence: optional
        rangelist:
        - 0
        - 1
        - 2
        supportedOS:
          iOS:
            introduced: '12.0'
          macOS:
            introduced: n/a
        title: Grouping Type
        type: <integer>
      - content: 'The type previews for notifications. This key overrides the value at Settings>Notifications>Show Previews.

          * ''0'' - Always: Previews will be shown when the device is locked and unlocked

          * ''1'' - When Unlocked: Previews will only be shown when the device is unlocked

          * ''2'' - Never: Previews will never be shown



          Available in iOS 14 and later.'
        key: PreviewType
        presence: optional
        rangelist:
        - 0
        - 1
        - 2
        supportedOS:
          iOS:
            introduced: '14.0'
          macOS:
            introduced: n/a
        title: Preview Type
        type: <integer>
      title: Notification Setting
      type: <dictionary>
    title: Notification Settings
    type: <array>
  title: Notifications
com.apple.osxserver.account:
  description: Use this section to define a macOS Server account
  payload:
    payloadtype: com.apple.osxserver.account
    supportedOS:
      iOS:
        allowmanualinstall: true
        deprecated: '12.0'
        introduced: '9.0'
        removed: '12.0'
        sharedipad:
          mode: forbidden
        supervised: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The server's address.
    key: HostName
    presence: required
    title: Account Hostname
    type: <string>
  - content: The user's user name.
    key: UserName
    presence: required
    title: Account Username
    type: <string>
  - content: The user's password.
    key: Password
    presence: optional
    title: Account Password
    type: <string>
  - content: The description of the account.
    key: AccountDescription
    presence: optional
    title: Account Description
    type: <string>
  - content: Array of dictionaries containing configured account types and relevant settings
    key: ConfiguredAccounts
    presence: required
    subkeys:
    - key: ConfiguredAccountsItem
      subkeys:
      - content: com.apple.osxserver.documents (the Documents account type).
        key: Type
        presence: required
        rangelist:
        - com.apple.osxserver.documents
        title: Account Type
        type: <string>
      - content: Designates the port number to use when contacting the server. If no port number is specified, the default port is used.
        key: Port
        presence: optional
        title: Port Number
        type: <integer>
      title: Configured Account
      type: <dictionary>
    title: Configured Accounts
    type: <array>
  title: macOS Server Account
com.apple.preference.security:
  payload:
    payloadtype: com.apple.preference.security
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.10'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', disables user changes to the password.
    default: false
    key: dontAllowPasswordResetUI
    presence: optional
    type: <boolean>
  - content: If 'true', disables user changes to the lock message.
    default: false
    key: dontAllowLockMessageUI
    presence: optional
    type: <boolean>
  - content: If 'true', disables user changes to the firewall settings.
    default: false
    key: dontAllowFireWallUI
    presence: optional
    type: <boolean>
  title: Security Preferences
com.apple.preferences.users:
  payload:
    payloadtype: com.apple.preference.users
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.12'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: If 'true', disables the iCloud password for local accounts.
    default: false
    key: DisableUsingiCloudPassword
    presence: optional
    type: <boolean>
  title: User Preferences
com.apple.profileRemovalPassword:
  description: Use this section to define settings for profile removal
  payload:
    payloadtype: com.apple.profileRemovalPassword
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          mode: forbidden
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
      tvOS:
        allowmanualinstall: true
        introduced: '9.0'
        supervised: true
  payloadkeys:
  - content: The password for allowing the profile to be removed.
    key: RemovalPassword
    presence: optional
    title: Removal Password
    type: <string>
  title: Profile Removal Password
com.apple.proxy.http.global:
  description: Global HTTP Proxy (Supervised devices only)
  payload:
    content: PEM-encoded cer
    payloadtype: com.apple.proxy.http.global
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '6.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: true
        userenrollment:
          mode: forbidden
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        supervised: true
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
      tvOS:
        allowmanualinstall: true
        introduced: '6.0'
        supervised: true
  payloadkeys:
  - content: The proxy type. For a manual proxy type, the profile contains the proxy server address, including its port, and optionally a user name and password. For an auto proxy type, you can enter a PAC URL.
    default: Manual
    key: ProxyType
    presence: optional
    rangelist:
    - Manual
    - Auto
    title: Proxy Type
    type: <string>
  - content: The proxy server's network address.
    key: ProxyServer
    presence: required
    subtype: <hostname>
    title: Proxy Server
    type: <string>
  - content: The proxy server's port number.
    key: ProxyServerPort
    presence: required
    title: Proxy Server Port
    type: <integer>
  - content: The user name used to authenticate to the proxy server.
    key: ProxyUsername
    presence: optional
    title: Proxy Username
    type: <string>
  - content: The password used to authenticate to the proxy server.
    key: ProxyPassword
    presence: optional
    title: Proxy Password
    type: <string>
  - content: The URL of the PAC file that defines the proxy configuration. Starting in iOS 13 and macOS 10.15, only URLs that begin with 'http://' or 'https://' are allowed.
    key: ProxyPACURL
    presence: optional
    title: Proxy PAC URL
    type: <string>
  - content: If 'true', allows connecting directly to the destination if the proxy autoconfiguration (PAC) file is unreachable.
    default: false
    key: ProxyPACFallbackAllowed
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
    title: Proxy PAC Fallback Allowed
    type: <boolean>
  - content: If 'true', allows the device to bypass the proxy server to display the login page for captive networks.
    default: false
    key: ProxyCaptiveLoginAllowed
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
    title: Proxy Bypass Allowed
    type: <boolean>
  title: Global HTTP Proxy
com.apple.screensaver:
  description: ''
  payload:
    content: Specifies grace period for screensaver locking
    payloadtype: com.apple.screensaver
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.11'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', the user is prompted for a password when the screen saver is unlocked or stopped. When you use this prompt, you must also provide 'askForPasswordDelay'. Available in macOS 10.13 and later.
    default: false
    key: askForPassword
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.13'
    type: <boolean>
  - content: The number of seconds to delay before the password will be required to unlock or stop the screen saver (the grace period). A value of '2147483647' (for example, '0x7FFFFFFF') disables this requirement. To use this option, you must set 'askForPassword' to 'true'. Available in macOS 10.13 and later.
    key: askForPasswordDelay
    presence: optional
    supportedOS:
      macOS:
        introduced: '10.13'
    type: <integer>
  - content: The number of seconds of inactivity before the screen saver activates (0 = Never activate).
    key: loginWindowIdleTime
    presence: optional
    type: <integer>
  - content: The full path to the screen-saver module to use.
    key: loginWindowModulePath
    presence: optional
    type: <string>
  - content: The name of the screen saver module.
    key: moduleName
    presence: required
    type: <string>
  title: Screensaver
com.apple.screensaver.user:
  description: ''
  payload:
    content: Specifies *user* screensaver settings. (Settings for loginwindow screensaver use a different payload)
    payloadtype: com.apple.screensaver.user
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.11'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The name of the screen saver module.
    key: moduleName
    presence: required
    type: <string>
  - content: A full path to the screen-saver module to use.
    key: modulePath
    presence: optional
    type: <string>
  - content: The number of seconds of inactivity before the screen saver activates ('0' = Never activate).
    key: idleTime
    presence: optional
    type: <integer>
  title: Screensaver User
com.apple.secondactiveethernet.managed:
  description: ''
  payload:
    payloadtype: com.apple.secondactiveethernet.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: Keys relevant to 802.1x configuration.   User enrollment payloads do not support the various proxy keys including ProxyType, ProxyServer, ProxyServerPort, ProxyUsername, ProxyPassword,, ProxyPACURL and ProxyPACFallbackAllowed.
    key: ANY
    presence: optional
    type: <any>
  title: '802.1X: Second Active Ethernet'
com.apple.secondethernet.managed:
  description: ''
  payload:
    payloadtype: com.apple.secondethernet.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: Keys relevant to 802.1x configuration.   User enrollment payloads do not support the various proxy keys including ProxyType, ProxyServer, ProxyServerPort, ProxyUsername, ProxyPassword,, ProxyPACURL and ProxyPACFallbackAllowed.
    key: ANY
    presence: optional
    type: <any>
  title: '802.1X: Second Ethernet'
com.apple.security.FDERecoveryKeyEscrow:
  description: ''
  payload:
    content: 'If FileVault is enabled after this payload is installed on the system, the FileVault PRK will be encrypted with the specified certificate, wrapped with a CMS envelope and stored at:

      /var/db/FileVaultPRK.dat

      The encrypted data will be made available to the MDM server as part of the SecurityInfo command. Alternatively, if a site uses their own administration software, they can extract the PRK from the above location at any time. As the PRK will be encrypted using the certificate provided in the profile, only the author of the profile can extract the data.

      Notes:

      * The payload must exist in a "system" scoped profile.

      * It will be an error to install more than one payload of this type per machine.

      * The old payload ("com.apple.security.FDERecoveryRedirect") will no longer be supported. It will still be allowed to be installed, but will be ignored. (This is so servers can send out the same profile to old and new clients).

      * If only an old-style redirection payload is installed at the time FileVault is turned on (via Security Pref pane), an error will be displayed and FileVault will not be allowed to be enabled.

      * No warning/error will be provided if FileVault is already enabled and an old-style payload is installed. In this case, it''s assumed the recovery key has already been escrowed with the server.'
    payloadtype: com.apple.security.FDERecoveryKeyEscrow
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.13'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The description of the location where the recovery key will be escrowed. This text will be inserted into the message the user sees when enabling FileVault.
    key: Location
    presence: required
    type: <string>
  - content: The UUID of a payload within the same profile that contains the certificate that will be used to encrypt the recovery key. The referenced payload must be of type 'com.apple.security.pkcs1'.
    key: EncryptCertPayloadUUID
    presence: required
    type: <string>
  - content: 'The string that''s included in help text if the user appears to have forgotten the password. Site admins can use this key to look up the escrowed key for the particular computer.


      This key replaces the ''RecordNumber'' key used in the previous escrow mechanism. If the key is missing, the device serial number is used instead.'
    key: DeviceKey
    presence: optional
    type: <string>
  title: FDE Recovery Key Escrow
com.apple.security.FDERecoveryRedirect:
  description: ''
  payload:
    content: '*** This payload will be ignored on macOS 10.13 and later. See "com.apple.security.FDERecoveryKeyEscrow" payload. ***

      Old notes:

      Once installed, this payload will cause any FDE (Full Disk Encryption) recovery keys to be redirected to the specified URL instead of being sent to Apple. This will require sites to implement their own HTTPS server that will receive the recovery keys via a POST request. Details of the data sent to the server will be provided in a different document.

      Notes:

      * The payload must exist in a "system" scoped profile.

      * It will be an error to install more than one payload of this type per machine.'
    payloadtype: com.apple.security.FDERecoveryRedirect
    supportedOS:
      macOS:
        allowmanualinstall: true
        deprecated: '10.13'
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The URL to which FDE recovery keys should be sent instead of to Apple. The URL must begin with https://.
    key: RedirectURL
    presence: required
    type: <string>
  - content: The UUID of a payload within the same profile that contains a certificate used to encrypt the recovery key when it's sent to the redirected URL. The referenced payload must be of type `com.apple.security.pkcs1`.
    key: EncryptCertPayloadUUID
    presence: required
    type: <string>
  title: FDE Recovery Key Redirection
com.apple.security.acme:
  description: Use this section to define settings to have an ACME server issue a client certificate.
  payload:
    content: Use this payload to specify settings that allow the device to request a client certificate from an ACME server. The device generates an asymmetric key pair based upon the KeyType, KeySize, and HardwareBound fields. If attest is true it requests an attestation of the key and device properties. Then it communicates with the ACME server to authenticate the device, provide the attestation, and request a matching certificate based upon the ClientIdentifier, Subject, SubjectAltName, KeyUsage, and ExtendedKeyUsage fields. The ACME server issues a certificate and the device installs it in the keychain. Other payloads can reference the resulting client identity by the payload's PayloadUUID.
    payloadtype: com.apple.security.acme
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '16.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '13.1'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '16.0'
        supervised: false
  payloadkeys:
  - content: The directory URL of the ACME server. The URL must use the https scheme.
    key: DirectoryURL
    presence: required
    title: ACME directory URL
    type: <string>
  - content: A unique string identifying a specific device. The server may use this as a nonce to prevent issuing multiple certificates. This identifier also indicates to the ACME server that the device has access to a valid client identifier issued by the enterprise infrastructure. This can help the ACME server determine whether to trust the device. Though this is a relatively weak indication because of the risk that an attacker can intercept the client identifier.
    key: ClientIdentifier
    presence: required
    title: Client identifier
    type: <string>
  - content: The valid values for 'KeySize' depend on the values of 'KeyType' and 'HardwareBound'. See those keys for specific requirements.
    key: KeySize
    presence: required
    title: Key Size
    type: <integer>
  - content: 'The type of key pair to generate.

      * ''RSA'': Specifies an RSA key pair. RSA key pairs must have a KeySize in the range [1024..4096] inclusive and a multiple of 8, and ''HardwareBound'' must be false.

      * ''ECSECPrimeRandom'': Specifies a key pair on the P-192, P-256, P-384 or P-521 curves as defined in FIPS Pub 186-4. KeySize defines the particular curve, which must be 192, 256, 384 or 521. Hardware bound keys only support values of 256 and 384. Note that the key size is 521, not 512, even though the other key sizes are multiples of 64.'
    key: KeyType
    presence: required
    rangelist:
    - RSA
    - ECSECPrimeRandom
    title: Key Type
    type: <string>
  - content: 'If ''false'', the private key isn''t bound to the device.

      If ''true'', the private key is bound to the device. The Secure Enclave generates the key pair, and the private key is cryptographically entangled with a system key. This prevents the system from exporting the private key.

      If ''true'', ''KeyType'' must be ''ECSECPrimeRandom'' and ''KeySize'' must be 256 or 384.

      On macOS, this key is required but must have a value of ''false''.'
    key: HardwareBound
    presence: required
    title: Hardware Bound
    type: <boolean>
  - content: "The device requests this subject for the certificate that the ACME server issues. The ACME server may override or ignore this field in the certificate it issues.\nThe representation of a X.500 name represented as an array of OID and value. For example, /C=US/O=Apple Inc./CN=foo/1.2.5.3=bar corresponds to:\n[ [ [\u201DC\u201D, \u201CUS\u201D] ], [ [\u201DO\u201D, \u201CApple Inc.\u201D] ], ..., [ [ \u201C1.2.5.3\u201D, \u201Cbar\u201D ] ] ]\nDotted numbers can represent OIDs , with shortcuts for country (C), locality (L), state (ST), organization (O), organizational unit (OU), and common name (CN)."
    key: Subject
    presence: required
    subkeys:
    - key: SCEPSubjectArrayInnerArray
      subkeys:
      - key: SCEPSubjectArrayPair
        subkeys:
        - key: SCEPSubjectArrayPairItem
          repetition:
            max: 2
            min: 2
          title: SCEP Subject Array Pair Item
          type: <string>
        title: Subject Array Pair
        type: <array>
      title: Array Inside SCEP Subject Array
      type: <array>
    title: Subject
    type: <array>
  - content: The Subject Alt Name that the device requests for the certificate that the ACME server issues. The ACME server may override or ignore this field in the certificate it issues.
    key: SubjectAltName
    presence: optional
    subkeys:
    - content: The RFC 822 (email address) string.
      key: rfc822Name
      presence: optional
      title: RFC 822 Name
      type: <string>
    - content: The DNS name.
      key: dNSName
      presence: optional
      title: DNS Name
      type: <string>
    - content: The Uniform Resource Identifier.
      key: uniformResourceIdentifier
      presence: optional
      title: URI
      type: <string>
    - content: The NT principal name.
      key: ntPrincipalName
      presence: optional
      title: NT Principal Name
      type: <string>
    title: Subject Alt Name
    type: <dictionary>
  - content: 'This value is a bit field.

      * Bit ''0x01'' indicates digital signature.

      * Bit ''0x10'' indicates key agreement.

      The device requests this key for the certificate that the ACME server issues. The ACME server may override or ignore this field in the certificate it issues.'
    key: UsageFlags
    presence: optional
    title: Key Usage
    type: <integer>
  - content: "The value is an array of strings. Each string is an OID in dotted notation. For instance, [\u201D1.3.6.1.5.5.7.3.2\u201D, \u201C1.3.6.1.5.5.7.3.4\u201D] indicates client authentication and email protection.\nThe device requests this field for the certificate that the ACME server issues. The ACME server may override or ignore this field in the certificate it issues."
    key: ExtendedKeyUsage
    presence: optional
    subkeys:
    - key: OID
      presence: optional
      type: <string>
    title: Extended Key Usage
    type: <array>
  - content: 'If ''true'', the device provides attestations describing the device and the generated key to the ACME server. The server can use the attestations as strong evidence that the key is bound to the device, and that the device has properties listed in the attestation. The server can use that as part of a trust score to decide whether to issue the requested certificate.

      When ''Attest'' is ''true'', ''HardwareBound'' must also be ''true''.

      On macOS, this key, if present, must have a value of ''false''.'
    default: false
    key: Attest
    presence: optional
    title: Attest
    type: <boolean>
  - content: Whether the private key of the identity obtained via SCEP should be tagged as "non-extractable" in the keychain.
    default: true
    key: KeyIsExtractable
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    type: <boolean>
  - content: If true, all apps have access to the private key.
    default: false
    key: AllowAllAppsAccess
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      tvOS:
        introduced: n/a
    title: Allow All Apps Access
    type: <boolean>
  title: ACME Certificate
com.apple.security.certificatepreference:
  description: ''
  payload:
    content: Defines a Certificate Preference item in the user's keychain that references a certificate payload included in the same profile. Can only appear in a user profile (not a device profile). See also "com.apple.security.identitypreference" for setting up identity preferences.
    payloadtype: com.apple.security.certificatepreference
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.12'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: An email address (in RFC 822 format) or other name for which a preferred certificate is requested.
    key: Name
    presence: required
    type: <string>
  - content: The UUID of the certificate payload within the same profile to use for the identity credential.
    key: PayloadCertificateUUID
    presence: required
    type: <string>
  title: Certificate Preference
com.apple.security.certificaterevocation:
  description: Use this section to define settings for certificate revocation.
  payload:
    content: Policies that affect system-wide certificate revocation checking.
    payloadtype: com.apple.security.certificaterevocation
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '14.2'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: 'An array of certificates that the system checks for revocation.

      Specifying a certificate authority (CA) enables revocation checking for all certificates chaining up to that CA.

      It is not necessary to specify trusted root certificates because they are implicitly specified. See <https://support.apple.com/en-us/HT209143> for the available trusted root certificates for Apple operating systems.'
    key: EnabledForCerts
    presence: optional
    subkeys:
    - key: SubjectPublicKeyInfoHashDict
      subkeys:
      - content: The algorithm must be 'sha256'.
        key: Algorithm
        presence: required
        rangelist:
        - sha256
        type: <string>
      - content: 'The hash of the DER-encoding of the certificate''s ''subjectPublicKeyInfo''.

          The hash field requires the data (''subjectPublicKeyInfo'' hash) in a specific format: a Base64 encoded (binary) SHA-256 hash of the certificate''s public key.'
        key: Hash
        presence: required
        type: <data>
      type: <dictionary>
    title: Enabled Certs
    type: <array>
  title: Certificate Revocation
com.apple.security.certificatetransparency:
  description: Use this section to define settings for certificate transparency.
  payload:
    content: Policies that affect system-wide certificate transparency enforcement.
    payloadtype: com.apple.security.certificatetransparency
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: 12.1.1
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: 10.14.2
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: 12.1.1
        supervised: false
      watchOS:
        allowmanualinstall: true
        introduced: 5.1.1
        supervised: false
  payloadkeys:
  - content: 'An array of certificates for which certificate transparency is disabled. For Certificate Transparency enforcement to be disabled when this policy is set, one of the following conditions must be met:

      * The hash is of the server certificate''s ''subjectPublicKeyInfo''.

      * The hash is of a ''subjectPublicKeyInfo'' that appears in a CA certificate in the certificate chain; the CA certificate is constrained through the X.509v3 ''nameConstraints'' extension; one or more ''directoryName'' ''nameConstraints'' are present in the ''permittedSubtrees;'' and the ''directoryName'' contains an ''organizationName'' attribute.

      * The hash is of a ''subjectPublicKeyInfo'' that appears in a CA certificate in the certificate chain; the CA certificate has one or more ''organizationName'' attributes in the certificate ''Subject;'' and the server''s certificate contains the same number of ''organizationName'' attributes, in the same order, and with byte-for-byte identical values.'
    key: DisabledForCerts
    presence: optional
    subkeys:
    - key: SubjectPublicKeyInfoHashDict
      subkeys:
      - content: The algorithm must be 'sha256'.
        key: Algorithm
        presence: required
        rangelist:
        - sha256
        type: <string>
      - content: 'The hash of the DER-encoding of the certificate''s ''subjectPublicKeyInfo''.

          The hash field requires the data (''subjectPublicKeyInfo'' hash) in a specific format: a Base64 encoded (binary) SHA-256 hash of the certificate''s public key.'
        key: Hash
        presence: required
        type: <data>
      type: <dictionary>
    title: Disabled Certs
    type: <array>
  - content: 'An array of strings representing the domains to be excluded from certificate transparency enforcement. A leading period (.) is supported to signify subdomains.

      Wildcard domains are not supported. If a leading period (.) is specified, the domain cannot be a top-level domain (for example, ''.com'' and ''.co.uk'' are disallowed).'
    key: DisabledForDomains
    presence: optional
    subkeys:
    - key: domain
      type: <string>
    title: Disabled domains
    type: <array>
  title: Certificate Transparency
com.apple.security.firewall:
  description: ''
  payload:
    content: 'Manages the Application Firewall settings (e.g. Security pref pane -> Firewall).

      Notes:

      * The payload must exist in a "system" scoped profile.

      * If more than one profile contains this payload, the most restrictive union of settings will be used.

      * Per Firewall team''s request, the "Automatically allow signed downloaded software" and "Automatically allow built-in software" options are not supported but both will be forced ON when this payload is present.'
    payloadtype: com.apple.security.firewall
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.12'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables the firewall.
    key: EnableFirewall
    presence: required
    type: <boolean>
  - content: If 'true', enables blocking of all incoming connections.
    key: BlockAllIncoming
    presence: optional
    type: <boolean>
  - content: If 'true', enables stealth mode.
    key: EnableStealthMode
    presence: optional
    type: <boolean>
  - content: The list of apps with connections controlled by the firewall.
    key: Applications
    presence: optional
    subkeys:
    - key: ApplicationsItem
      subkeys:
      - content: The bundle identifier for an app.
        key: BundleID
        presence: required
        title: Application Identifier
        type: <string>
      - content: If true, allows connections for the app.
        key: Allowed
        presence: required
        title: Allow connections
        type: <boolean>
      title: Applications
      type: <dictionary>
    type: <array>
  - content: 'If ''true'', enables logging.

      Available in macOS 12 and later.'
    key: EnableLogging
    presence: optional
    supportedOS:
      macOS:
        introduced: '12.0'
    type: <boolean>
  - content: 'This string specifies the type of logging.

      Available in macOS 12 and later.'
    key: LoggingOption
    presence: optional
    rangelist:
    - throttled
    - brief
    - detail
    supportedOS:
      macOS:
        introduced: '12.0'
    type: <string>
  - content: 'If ''true'', allows built-in software to receive incoming connections.

      Available in macOS 12.3 and later.'
    key: AllowSigned
    presence: optional
    supportedOS:
      macOS:
        introduced: '12.3'
    type: <boolean>
  - content: 'If ''true'', allows downloaded signed software to receive incoming connections.

      Available in macOS 12.3 and later.'
    key: AllowSignedApp
    presence: optional
    supportedOS:
      macOS:
        introduced: '12.3'
    type: <boolean>
  title: Firewall
com.apple.security.identitypreference:
  description: ''
  payload:
    content: Defines an Identity Preference item in the user's keychain that references a identity payload included in the same profile. Can only appear in a user profile (not a device profile). See also "com.apple.security.certificatepreference" for setting up certificate preferences.
    payloadtype: com.apple.security.identitypreference
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.12'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The email address (in RFC 822 format), DNS host name, or other name that uniquely identifies a service requiring this identity.
    key: Name
    presence: required
    type: <string>
  - content: The UUID of the certificate payload within the same profile to use for the identity credential.
    key: PayloadCertificateUUID
    presence: required
    type: <string>
  title: Identity Preference
com.apple.security.pem:
  description: Use this section to define settings for a pem certificate.
  payload:
    content: PEM-encoded certificate without private key. May contain root certificates.
    payloadtype: com.apple.security.pem
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '5.0'
        supervised: false
      watchOS:
        allowmanualinstall: true
        introduced: '3.0'
  payloadkeys:
  - content: The file name of the enclosed certificate.
    key: PayloadCertificateFileName
    presence: optional
    title: Payload Certificate Filename
    type: <string>
  - content: The binary representation of the payload, encoded in Base64.
    key: PayloadContent
    presence: required
    title: Payload Certificate Filename
    type: <data>
  title: Certificate (PEM)
com.apple.security.pkcs1:
  description: Use this section to define settings for a pkcs1 certificate.
  payload:
    content: DER-encoded certificate without private key. May contain root certificates.
    payloadtype: com.apple.security.pkcs1
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '5.0'
        supervised: false
      watchOS:
        allowmanualinstall: true
        introduced: '3.0'
  payloadkeys:
  - content: The file name of the enclosed certificate.
    key: PayloadCertificateFileName
    presence: optional
    title: Payload Certificate Filename
    type: <string>
  - content: The binary representation of the payload, encoded in Base64.
    key: PayloadContent
    presence: required
    title: Payload Certificate Filename
    type: <data>
  title: 'Certificate (PKCS #1)'
com.apple.security.pkcs12:
  description: Use this section to define settings for a pkcs12 certificate.
  payload:
    content: Password-protected identity certificate. Only one certificate may be included.
    payloadtype: com.apple.security.pkcs12
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '5.0'
        supervised: false
      watchOS:
        allowmanualinstall: true
        introduced: '3.0'
  payloadkeys:
  - content: The file name of the enclosed certificate.
    key: PayloadCertificateFileName
    presence: optional
    title: Payload Certificate Filename
    type: <string>
  - content: The binary representation of the payload, encoded in Base64.
    key: PayloadContent
    presence: required
    title: Payload Certificate Filename
    type: <data>
  - content: 'This is the password to the identity.

      Security Caution: Because the password string is stored in the clear (unencrypted) in the profile, you should encrypt the entire profile.'
    key: Password
    presence: optional
    title: Password
    type: <string>
  - content: If 'true', allows apps access to the private key.
    default: false
    key: AllowAllAppsAccess
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.10'
      tvOS:
        introduced: n/a
      watchOS:
        introduced: n/a
    title: Allow All Apps Access
    type: <boolean>
  - content: If false, does not tag the private key data as extractable in the keychain.
    default: true
    key: KeyIsExtractable
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.15'
      tvOS:
        introduced: n/a
      watchOS:
        introduced: n/a
    type: <boolean>
  title: 'Certificate (PKCS #12)'
com.apple.security.root:
  description: Use this section to define settings for a root certificate.
  payload:
    content: Alias for com.apple.security.pkcs1.
    payloadtype: com.apple.security.root
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '5.0'
        supervised: false
      watchOS:
        allowmanualinstall: true
        introduced: '3.0'
  payloadkeys:
  - content: The file name of the enclosed certificate.
    key: PayloadCertificateFileName
    presence: optional
    title: Payload Certificate Filename
    type: <string>
  - content: The binary representation of the payload encoded in base64.
    key: PayloadContent
    presence: required
    title: Payload Certificate Filename
    type: <data>
  title: Certificate (Root)
com.apple.security.scep:
  description: Use this section to define settings for configuration access to SCEP servers.
  payload:
    payloadtype: com.apple.security.scep
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '6.0'
        supervised: false
  payloadkeys:
  - content: An array of payload dictionaries. This array isn't present if 'IsEncrypted' is 'true'.
    key: PayloadContent
    presence: required
    subkeys:
    - content: The SCEP URL. See Over-the-Air Profile Delivery and Configuration for more information about SCEP.
      key: URL
      presence: required
      supportedOS:
        macOS:
          introduced: '10.7'
      title: URL
      type: <string>
    - content: A string that's understood by the SCEP server; for example, a domain name like example.org. If a certificate authority has multiple CA certificates, this field can be used to distinguish which is required.
      key: Name
      presence: optional
      title: Name
      type: <string>
    - content: "The representation of an X.500 name as an array of OID and value.\nFor example, '/C=US/O=Apple Inc./CN=foo/1.2.5.3=bar' translates to '[ [ [\u201CC\u201D, \u201CUS\u201D] ], [ [\u201CO\u201D, \u201CApple Inc.'] ], \u2026, [ [ \u201C1.2.5.3\u201D, \u201Cbar\u201D ] ] ]'.\n\nOIDs can be represented as dotted numbers, with shortcuts for country (C), locality (L), state (ST), organization (O), organizational unit (OU), and common name (CN)."
      key: Subject
      presence: optional
      subkeys:
      - key: SCEPSubjectArrayInnerArray
        subkeys:
        - key: SCEPSubjectArrayPair
          subkeys:
          - key: SCEPSubjectArrayPairItem
            repetition:
              max: 2
              min: 2
            title: SCEP Subject Array Pair Item
            type: <string>
          title: Subject Array Pair
          type: <array>
        title: Array Inside SCEP Subject Array
        type: <array>
      title: Subject
      type: <array>
    - content: A preshared secret.
      key: Challenge
      presence: optional
      title: Challenge
      type: <string>
    - content: The key size, in bits.
      default: 1024
      key: Keysize
      presence: optional
      rangelist:
      - 1024
      - 2048
      - 4096
      title: Key Size
      type: <integer>
    - content: Always 'RSA'.
      default: RSA
      key: Key Type
      presence: optional
      title: Key Type
      type: <string>
    - content: 'A bitmask indicating the use of the key.


        * 1: Signing

        * 4: Encryption


        Some certificate authorities, such as Windows CA, support only encryption or signing, but not both at the same time.'
      default: 0
      key: Key Usage
      presence: optional
      supportedOS:
        macOS:
          introduced: '10.11'
      title: Key Usage
      type: <integer>
    - content: The fingerprint of the Certificate Authority certificate.
      key: CAFingerprint
      presence: optional
      title: Fingerprint
      type: <data>
    - content: The number of times the device should retry if the server sends a PENDING response.
      default: 3
      key: Retries
      presence: optional
      supportedOS:
        macOS:
          introduced: '10.10'
      title: Retries
      type: <integer>
    - content: The number of seconds to wait between subsequent retries. The first retry is attempted without this delay.
      default: 10
      key: RetryDelay
      presence: optional
      supportedOS:
        macOS:
          introduced: '10.10'
      title: Retry Delay
      type: <integer>
    - content: The SCEP payload can specify an optional 'SubjectAltName' dictionary that provides values required by the CA for issuing a certificate. You can specify a single string or an array of strings for each key. The values you specify depend on the CA you're using, but might include DNS name, URL, or email values. For an example, see Sample Configuration Profile or Over-the-Air Profile Delivery and Configuration.
      key: SubjectAltName
      presence: optional
      subkeys:
      - content: The RFC 822 (email address) string.
        key: rfc822Name
        presence: optional
        title: RFC 822 Name
        type: <string>
      - content: The DNS name.
        key: dNSName
        presence: optional
        title: DNS Name
        type: <string>
      - content: The Uniform Resource Identifier.
        key: uniformResourceIdentifier
        presence: optional
        title: URI
        type: <string>
      - content: The NT principal name.
        key: ntPrincipalName
        presence: optional
        title: NT Principal Name
        type: <string>
      title: Subject Alt Name
      type: <dictionary>
    - content: If 'false', disables exporting the private key from the keychain.
      default: true
      key: KeyIsExtractable
      presence: optional
      supportedOS:
        macOS:
          introduced: 10.13.4
      type: <boolean>
    - content: If 'true', all apps have access to the private key.
      default: false
      key: AllowAllAppsAccess
      presence: optional
      supportedOS:
        macOS:
          introduced: '10.10'
      title: Allow All Apps Access
      type: <boolean>
    title: Payload Content
    type: <dictionary>
  title: SCEP
com.apple.security.smartcard:
  description: ''
  payload:
    content: Restrictions and settings for SmartCard pairing on macOS
    payloadtype: com.apple.security.smartcard
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: 10.12.4
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'false', users don't get the pairing dialog, although existing pairings still work.
    default: true
    key: UserPairing
    presence: optional
    type: <boolean>
  - content: If 'false', disables the SmartCard for logins, authorizations, and screen saver unlocking. It is still allowed for other functions, such as signing emails and accessing the web. A restart is required for a setting change to take effect.
    default: true
    key: allowSmartCard
    presence: optional
    type: <boolean>
  - content: 'Valid values are 0 to 3:

      ''0'': Turns off certificate trust check.

      ''1'': Turns on certificate trust check. A standard validity check is performed but doesn''t include additional revocation checks.

      ''2'': Turns on certificate trust check. A soft revocation check is also performed. Until the certificate is explicitly rejected by CRL/OCSP, it''s considered valid. This setting means that unavailable or unreachable CRL/OCSP allow this check to succeed.

      ''3'': Turns on certificate trust check. A hard revocation check is also performed. Unless CRL/OCSP explicitly says ''This certificate is OK,'' it''s considered invalid. This option is the most secure.'
    default: 0
    key: checkCertificateTrust
    presence: optional
    rangelist:
    - 0
    - 1
    - 2
    - 3
    type: <integer>
  - content: If 'true', a user can pair with only one SmartCard, although existing pairings are allowed if already set up.
    default: false
    key: oneCardPerUser
    presence: optional
    type: <boolean>
  - content: If '1', enables the screen saver when the SmartCard is removed. Available in macOS 10.13.4 and later.
    default: 0
    key: tokenRemovalAction
    presence: optional
    rangelist:
    - 0
    - 1
    supportedOS:
      macOS:
        introduced: 10.13.4
    type: <integer>
  - content: If 'true', a user can only log in or authenticate with a SmartCard. Available in macOS 10.13.2 and later.
    default: false
    key: enforceSmartCard
    presence: optional
    supportedOS:
      macOS:
        introduced: 10.13.2
    type: <boolean>
  title: SmartCard
com.apple.security.wapi-identity:
  description: ''
  payload:
    payloadtype: com.apple.security.wapi-identity
  payloadkeys:
  - content: Certificate data in PEM format.
    key: PEMData
    presence: required
    type: <data>
  title: WAPI Identity Certificate
com.apple.servicemanagement:
  description: Control the user experience for ServiceManagement login items (including launchd agents and daemons) in Login Items Settings.
  payload:
    content: This payload defines rules for tagging login items as managed, which will auto-enable and auto-allow matched items.
    payloadtype: com.apple.servicemanagement
    supportedOS:
      macOS:
        allowmanualinstall: false
        devicechannel: true
        introduced: '13.0'
        requiresdep: false
        userapprovedmdm: true
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: An array of rule dictionaries.
    key: Rules
    presence: required
    subkeys:
    - content: A specification for matching one or more login items.
      key: Rule
      presence: required
      subkeys:
      - content: The type of comparison to make.
        key: RuleType
        presence: required
        rangelist:
        - BundleIdentifier
        - BundleIdentifierPrefix
        - Label
        - LabelPrefix
        - TeamIdentifier
        title: Rule Type
        type: <string>
      - content: The value to compare with each login item's value, to determine a match to this rule.
        key: RuleValue
        presence: required
        title: Rule Value
        type: <string>
      - content: An optional description of the rule.
        key: Comment
        presence: optional
        title: Comment
        type: <string>
      - content: An additional constraint to limit the scope of the rule that is tested after matching the RuleType/RuleValue.
        key: TeamIdentifier
        presence: optional
        title: Team Identifier
        type: <string>
      title: Rule
      type: <dictionary>
    title: Rules
    type: <array>
  title: Service Management - Managed Login Items
com.apple.shareddeviceconfiguration:
  description: Use this section to define text displayed by shared devices in the login window and lock screen.
  payload:
    content: Allows admins to specify optional text displayed on the login window and lock screen (i.e. a footnote and Asset Tag Information).
    payloadtype: com.apple.shareddeviceconfiguration
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '9.3'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The asset tag information for the device, displayed in the login window and Lock screen.
    key: AssetTagInformation
    presence: optional
    title: Asset Tag
    type: <string>
  - content: Deprecated. Use 'LockScreenFootnote' instead.
    key: IfLostReturnToMessage
    presence: optional
    supportedOS:
      iOS:
        introduced: 9.3.1
    title: If Lost message
    type: <string>
  - content: The footnote displayed in the login window and Lock screen.
    key: LockScreenFootnote
    presence: optional
    supportedOS:
      iOS:
        introduced: 9.3.1
    type: <string>
  title: Lock Screen Message
com.apple.sso:
  description: ''
  payload:
    payloadtype: com.apple.sso
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '7.0'
        sharedipad:
          mode: forbidden
        supervised: false
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The human-readable name for the account.
    key: Name
    presence: required
    type: <string>
  - content: The Kerberos dictionary.
    key: Kerberos
    presence: optional
    subkeys:
    - content: The principal name. If not provided, the user will be prompted for one during profile installation. This field is required for MDM installation.
      key: PrincipalName
      presence: optional
      type: <string>
    - content: The 'PayloadUUID' of an identity certificate payload that can be used to renew the Kerberos credential without user interaction. The certificate payload must have either the 'com.apple.security.pkcs12' or 'com.apple.security.scep' payload type. Both the Single Sign On payload and the identity certificate payload must be included in the same configuration profile.
      key: PayloadCertificateUUID
      presence: optional
      supportedOS:
        iOS:
          introduced: '8.0'
      type: <string>
    - content: The realm name. This value should be properly capitalized.
      key: Realm
      presence: required
      type: <string>
    - content: 'The list of URL prefixes that must be matched in order to use this account for Kerberos authentication over HTTP. If this key is missing, the account will be eligible to match all ''http://'' and ''https://'' URLs.

        The URL matching patterns must begin with either ''http://'' or ''https://''. A simple string match is performed, so the URL prefix ''http://www.apple.com/'' will not match ''http://www.apple.com:80/''. However, if a matching pattern does not end in ''/'', a ''/'' will be appended to it.'
      key: URLPrefixMatches
      presence: optional
      subkeys:
      - content: A URL prefix.
        key: URLPrefixMatchesItem
        presence: required
        type: <string>
      type: <array>
    - content: 'The list of app identifiers that are allowed to use this login. If this field missing, this login will match all app identifiers.

        This array may not be empty.

        This array must contain strings that match App Bundle IDs. These strings may be exact matches, e.g. ''com.mycompany.myapp'' or may specify a prefix match on the Bundle ID by using the ''*'' wildcard character. The wildcard character must appear after a period character (''.''), and may only appear once, at the end of the string, e.g. ''com.mycompany.*''. When a wildcard is given, any app whose Bundle ID begins with the prefix will be granted access to the account.'
      key: AppIdentifierMatches
      presence: optional
      subkeys:
      - content: An app identifier.
        key: AppIdentifierMatchesItem
        presence: required
        type: <string>
      type: <array>
    type: <dictionary>
  title: Single Sign-On
com.apple.subscribedcalendar.account:
  description: Use this section to define settings for subscribed calendar account.
  payload:
    payloadtype: com.apple.subscribedcalendar.account
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The description of the account.
    key: SubCalAccountDescription
    presence: optional
    title: Description
    type: <string>
  - content: The server's address.
    key: SubCalAccountHostName
    presence: required
    title: URL
    type: <string>
  - content: The user's user name.
    key: SubCalAccountUsername
    presence: optional
    title: Username
    type: <string>
  - content: The user's password.
    key: SubCalAccountPassword
    presence: optional
    title: Password
    type: <string>
  - content: If 'true', enables SSL.
    default: false
    key: SubCalAccountUseSSL
    presence: optional
    title: Use SSL
    type: <boolean>
  - content: 'The VPNUUID of the per-app VPN the account uses for network communication.

      Available in iOS 14 and later.'
    key: VPNUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
    title: VPNUUID
    type: <string>
  title: Subscribed Calendars
com.apple.syspolicy.kernel-extension-policy:
  description: ''
  payload:
    content: Provides a way of enabling a set of team identifiers or specific kernel extensions for loading without user approval. Also provides a way to block users from approving additional kernel extensions. Payload must be user-approved only.
    payloadtype: com.apple.syspolicy.kernel-extension-policy
    supportedOS:
      macOS:
        allowmanualinstall: false
        devicechannel: true
        introduced: 10.13.2
        requiresdep: false
        userapprovedmdm: true
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: 'If ''true'', nonadministrative users can approve additional kernel extensions in the Security & Privacy preferences.

      Available in macOS 11 and later.'
    default: false
    key: AllowNonAdminUserApprovals
    presence: optional
    supportedOS:
      macOS:
        introduced: '11.0'
    type: <boolean>
  - content: If 'true', users can approve additional kernel extensions that configuration profiles don't explicitly allow.
    default: false
    key: AllowUserOverrides
    presence: optional
    type: <boolean>
  - content: The array of team identifiers that define which validly signed kernel extensions can load.
    key: AllowedTeamIdentifiers
    presence: optional
    subkeys:
    - key: AllowedTeamIdentifiersItem
      title: Identifier
      type: <string>
    type: <array>
  - content: The dictionary that represents a set of kernel extensions that the system always allows to load on the computer. The dictionary maps team identifiers (keys) to arrays of bundle identifiers.
    key: AllowedKernelExtensions
    presence: optional
    subkeys:
    - content: The kernel extension data.
      key: ANY
      presence: optional
      subkeys:
      - content: Kernel extension data.
        key: AllowedKernelExtensionsItems
        presence: required
        type: <string>
      type: <array>
    type: <dictionary>
  title: System Policy - Kernel Extensions
com.apple.system-extension-policy:
  description: ''
  payload:
    content: Provides a way of enabling a set of team identifiers or specific system extensions for loading without user approval. Also provides a way to block users from approving additional system extensions. Payload must be user-approved only. Starting in macOS 11.3, installing or removing this payload can change the state of system extensions on the machine. If a system extension has been activated by its containing application but is still in a pending state, installing a payload which specifies that extension is Allowed will complete the activation process. If a system extension is active, removing a payload which specified that extension was Allowed will deactivate the extension.
    payloadtype: com.apple.system-extension-policy
    supportedOS:
      macOS:
        allowmanualinstall: false
        devicechannel: true
        introduced: '10.15'
        requiresdep: false
        userapprovedmdm: true
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'false', restricts users from approving additional system extensions that configuration profiles don't explicitly allow.
    default: true
    key: AllowUserOverrides
    presence: optional
    type: <boolean>
  - content: 'An array of team identifiers that defines valid, signed system extensions that are allowable to load. Approved system extensions are those signed with any of the specified team identifiers.

      To avoid requiring an administrator to authorize the operation, you can activate system extensions that this key specifies using activationRequestForExtension:queue:.

      It''s an error for the same team identifier to appear in both this array and as a key in the ''AllowedSystemExtensions'' dictionary.'
    key: AllowedTeamIdentifiers
    presence: optional
    subkeys:
    - key: AllowedTeamIdentifiersItem
      title: Identifier
      type: <string>
    type: <array>
  - content: 'A dictionary that maps a team identifier to an array of strings, where each string is a type of system extension that you can install for that team identifier. The allowed extension types are ''DriverExtension'', ''NetworkExtension'', and ''EndpointSecurityExtension''.

      If there''s no entry for a specified team identifier in the dictionary, the system allows all extension types.'
    key: AllowedSystemExtensionTypes
    presence: optional
    subkeys:
    - content: The mapping of team identifier to an array of strings, where each string is a type of system extension that may be installed for that team identifier.
      key: ANY
      presence: optional
      subkeys:
      - content: Permitted System Extension Type
        key: AllowedSystemExtensionTypesItems
        presence: required
        type: <string>
      type: <array>
    type: <dictionary>
  - content: 'A dictionary of approved system extensions on the computer. The dictionary maps the team identifiers (keys) to arrays of bundle identifiers, where the bundle identifier defines the system extension to install.

      To avoid requiring an administrator to authorize the operation, you can activate system extensions that this key specifies using activationRequestForExtension:queue:.

      It''s an error for the same team identifier to appear in both the ''AllowedTeamIdentifiers'' array and as a key in this dictionary.'
    key: AllowedSystemExtensions
    presence: optional
    subkeys:
    - content: The mapping of team identifiers to arrays of bundle identifiers, where the bundle identifier is that of the system extension to be installed.
      key: ANY
      presence: optional
      subkeys:
      - content: Allowed system extension bundle ID
        key: AllowedSystemExtensionsItems
        presence: required
        type: <string>
      type: <array>
    type: <dictionary>
  - content: 'A dictionary of system extensions that are allowed to remove themselves from the machine. The dictionary maps team identifiers (keys) to arrays of bundle identifiers, where the bundle identifier defines the system extension. An application using the ''OSSystemExtensionDeactivationRequest'' API can deactivate the specified system extensions without requiring an administrator to authorize the operation.

      Available in macOS 12 and later.'
    key: RemovableSystemExtensions
    presence: optional
    subkeys:
    - content: The dictionary maps team identifiers (keys) to arrays of bundle identifiers, where the bundle identifier defines the system extension.
      key: ANY
      presence: optional
      subkeys:
      - content: Removed system extension bundle ID
        key: RemovableSystemExtensionsItems
        presence: required
        type: <string>
      type: <array>
    supportedOS:
      macOS:
        introduced: '12.0'
    type: <dictionary>
  title: System Extensions
com.apple.system.logging:
  description: ''
  payload:
    payloadtype: com.apple.system.logging
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.12'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: Not to be used.
    key: Processes
    presence: optional
    subkeys: &id013
    - content: TBD
      key: ANY
      presence: optional
      type: <any>
    subkeytype: Item
    supportedOS:
      macOS:
        introduced: n/a
    type: <dictionary>
  - content: A dictionary enabling the logging level for subsystems. See 'Customizing Logging Behavior While Debugging' for more details about the format of the dictionary.
    key: Subsystems
    presence: optional
    subkeys: *id013
    subkeytype: Item
    supportedOS:
      macOS:
        introduced: n/a
    type: <dictionary>
  - content: This dictionary has one key, 'Enable-Private-Data'. Setting that value to 'true' enables private data logging for the entire system.
    key: System
    presence: optional
    subkeys: *id013
    subkeytype: Item
    supportedOS:
      macOS:
        introduced: n/a
    type: <dictionary>
  title: System Logging
com.apple.systemmigration:
  description: ''
  payload:
    content: Provides a way of customizing items migrated during System Migration.
    payloadtype: com.apple.systemmigration
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: 10.12.4
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The list of custom behavior dictionaries.
    key: CustomBehavior
    presence: optional
    subkeys:
    - key: CustomBehaviorItem
      subkeys:
      - content: The context that custom paths apply to.
        key: Context
        presence: required
        type: <string>
      - content: The list of custom behavior path dictionaries.
        key: Paths
        presence: required
        subkeys:
        - key: PathsItem
          subkeys:
          - content: The path to the migrating file or directory on the source system.
            key: SourcePath
            presence: required
            type: <string>
          - content: If 'true', the source path is located within a user home directory.
            key: SourcePathInUserHome
            presence: required
            type: <boolean>
          - content: The path to the destination file or directory on the target system.
            key: TargetPath
            presence: required
            type: <string>
          - content: If 'true', the target path is located within a user home directory.
            key: TargetPathInUserHome
            presence: required
            type: <boolean>
          type: <dictionary>
        type: <array>
      type: <dictionary>
    type: <array>
  title: System Migration
com.apple.systempolicy.control:
  description: ''
  payload:
    content: Provides a way of enabling System Policy assessment processing. This corresponds to the Gatekeeper UI in the Security pref pane.
    payloadtype: com.apple.systempolicy.control
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.8'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', enables Gatekeeper.
    key: EnableAssessment
    presence: optional
    type: <boolean>
  - content: 'If ''true'', enables Gatekeeper''s ''Mac App Store and identified developers'' option.

      If ''false'', enables Gatekeeper''s ''Mac App Store'' option.

      If the value of ''EnableAssessment'' isn''t set to ''true'', this key has no effect.'
    key: AllowIdentifiedDevelopers
    presence: optional
    type: <boolean>
  title: System Policy Control
com.apple.systempolicy.managed:
  description: ''
  payload:
    content: Provides a way of disabling the Finder's contextual menu that allows bypass of System Policy restrictions.
    payloadtype: com.apple.systempolicy.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.8'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', disables the Finder's contextual menu item.
    default: false
    key: DisableOverride
    presence: optional
    type: <boolean>
  title: System Policy Managed
com.apple.systempolicy.rule:
  description: ''
  payload:
    content: This payload allows control over Gatekeeper's system policy rules. The keys and functionality are tightly related to the spctl command line tool. For more information, see the manual page for spctl.
    payloadtype: com.apple.systempolicy.rule
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.8'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The policy requirement. This key must follow the syntax described in Code Signing Requirement Language <https://developer.apple.com/library/archive/documentation/Security/Conceptual/CodeSigningGuide/RequirementLang/RequirementLang.html#//apple_ref/doc/uid/TP40005929-CH5>.
    key: Requirement
    presence: optional
    type: <string>
  - content: This string appears in the System Policy UI. If it's missing, 'PayloadDisplayName' or 'PayloadDescription' is entered into this field before the rule is added to the System Policy database.
    key: Comment
    presence: optional
    type: <string>
  - content: The rule's priority.
    key: Priority
    presence: optional
    type: <real>
  - content: The expiration date for rules being processed.
    key: Expiration
    presence: optional
    type: <date>
  - content: The type of operation.
    default: operation:execute
    key: OperationType
    presence: optional
    rangelist:
    - operation:execute
    - operation:install
    - operation:lsopen
    type: <string>
  - content: The single leaf certificate for the app that is in the allow list.
    key: LeafCertificate
    presence: optional
    type: <data>
  title: System Policy Rule
com.apple.systempreferences:
  payload:
    content: "Hide and show individual System Preferences panes.\nThe following preference pane items are no longer supported on macOS 10.14:\n\u2022 com.apple.preferences.appstore\nThe following preference pane items are no longer supported on macOS 10.15:\n\u2022 com.apple.preference.ink\n\u2022 com.apple.preferences.icloud\n\u2022 com.apple.preferences.parentalcontrols\nThis payload is deprecated as of macOS 13. When new restrictions become available to control functionality exposed through System Settings, those restrictions should be used instead of disabling the entire preference pane. This allows for user transparency even when the user's control has been disabled by a restriction.\nmacOS 13 introduces a new DisabledSystemSettings key for controlling macOS 13 and newer System Settings extensions. However, note that System Settings extensions within the Privacy & Security section cannot be disabled. If DisabledSystemSettings is not provided, the system will attempt to honor the EnabledPreferencePanes and DisabledPreferencePanes by mapping the old preference pane value to one or more new settings extension values whose content was wholly contained in the old preference pane value."
    payloadtype: com.apple.systempreferences
    supportedOS:
      macOS:
        allowmanualinstall: true
        deprecated: '13.0'
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The list of enabled System Preferences panes.
    key: EnabledPreferencePanes
    presence: optional
    subkeys: &id014
    - key: PreferencePanes
      presence: optional
      rangelist:
      - com.apple.ClassroomSettings
      - com.apple.Localization
      - com.apple.preference.datetime
      - com.apple.preference.desktopscreeneffect
      - com.apple.preference.digihub.discs
      - com.apple.preference.displays
      - com.apple.preference.dock
      - com.apple.preference.energysaver
      - com.apple.preference.expose
      - com.apple.preference.general
      - com.apple.preference.ink
      - com.apple.preference.keyboard
      - com.apple.preference.mouse
      - com.apple.preference.network
      - com.apple.preference.notifications
      - com.apple.preference.printfax
      - com.apple.preference.screentime
      - com.apple.preference.security
      - com.apple.preference.sidecar
      - com.apple.preference.sound
      - com.apple.preference.speech
      - com.apple.preference.spotlight
      - com.apple.preference.startupdisk
      - com.apple.preference.trackpad
      - com.apple.preference.universalaccess
      - com.apple.preferences.AppleIDPrefPane
      - com.apple.preferences.appstore
      - com.apple.preferences.Bluetooth
      - com.apple.preferences.configurationprofiles
      - com.apple.preferences.extensions
      - com.apple.preferences.FamilySharingPrefPane
      - com.apple.preferences.icloud
      - com.apple.preferences.internetaccounts
      - com.apple.preferences.parentalcontrols
      - com.apple.preferences.password
      - com.apple.preferences.sharing
      - com.apple.preferences.softwareupdate
      - com.apple.preferences.users
      - com.apple.preferences.wallet
      - com.apple.prefpanel.fibrechannel
      - com.apple.prefs.backup
      - com.apple.Xsan
      type: <string>
    type: <array>
  - content: The list of disabled System Preferences panes.
    key: DisabledPreferencePanes
    presence: optional
    subkeys: *id014
    type: <array>
  - content: System settings extension IDs for items that will be disabled. All other items will be enabled. When DisabledSystemSettings is specified, DisabledPreferencePanes and EnabledPreferencePanes are ignored. Note that a given System Settings extension may supply more than one section in System Settings; disabling such an extension will disable all sections it supplies.
    devpubs-override: The list of disabled System Settings extensions.
    key: DisabledSystemSettings
    presence: optional
    subkeys:
    - key: SettingsExtensions
      presence: optional
      rangelist:
      - com.apple.Accessibility-Settings.extension
      - com.apple.AirDrop-Handoff-Settings.extension
      - com.apple.Battery-Settings.extension
      - com.apple.BluetoothSettings
      - com.apple.CD-DVD-Settings.extension
      - com.apple.ClassKit-Settings.extension
      - com.apple.Classroom-Settings.extension
      - com.apple.ControlCenter-Settings.extension
      - com.apple.Date-Time-Settings.extension
      - com.apple.Desktop-Settings.extension
      - com.apple.Displays-Settings.extension
      - com.apple.ExtensionsPreferences
      - com.apple.Family-Settings.extension
      - com.apple.Focus-Settings.extension
      - com.apple.Game-Center-Settings.extension
      - com.apple.Game-Controller-Settings.extension
      - com.apple.HeadphoneSettings
      - com.apple.Internet-Accounts-Settings.extension
      - com.apple.Keyboard-Settings.extension
      - com.apple.Localization-Settings.extension
      - com.apple.Lock-Screen-Settings.extension
      - com.apple.LoginItems-Settings.extension
      - com.apple.Mouse-Settings.extension
      - com.apple.Network-Settings.extension
      - com.apple.NetworkExtensionSettingsUI.NESettingsUIExtension
      - com.apple.Notifications-Settings.extension
      - com.apple.Passwords-Settings.extension
      - com.apple.Print-Scan-Settings.extension
      - com.apple.Screen-Time-Settings.extension
      - com.apple.ScreenSaver-Settings.extension
      - com.apple.Sharing-Settings.extension
      - com.apple.Siri-Settings.extension
      - com.apple.Software-Update-Settings.extension
      - com.apple.Sound-Settings.extension
      - com.apple.Startup-Disk-Settings.extension
      - com.apple.Time-Machine-Settings.extension
      - com.apple.Touch-ID-Settings.extension
      - com.apple.Trackpad-Settings.extension
      - com.apple.Transfer-Reset-Settings.extension
      - com.apple.Users-Groups-Settings.extension
      - com.apple.WalletSettingsExtension
      - com.apple.Wallpaper-Settings.extension
      - com.apple.settings.Storage
      - com.apple.systempreferences.AppleIDSettings
      - com.apple.wifi-settings-extension
      type: <string>
    supportedOS:
      macOS:
        introduced: '13.0'
    type: <array>
  title: System Preferences
com.apple.systemuiserver:
  description: ''
  payload:
    payloadtype: com.apple.systemuiserver
    supportedOS:
      macOS:
        allowmanualinstall: true
        deprecated: '11.0'
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The media type dictionary that defines volumes to eject when the user logs out.
    key: logout-eject
    presence: optional
    subkeys: &id016
    - content: Unused; set to an empty string.
      key: all-media
      presence: optional
      type: <string>
    - content: A media action string or an array of media action strings.
      key: cd
      presence: optional
      subkeys: &id015
      - content: 'One of the following values:

          * authenticate - User will be authenticated before media is mounted

          * read-only - The media will be mounted read-only. Not valid for unmount-controls.

          * deny - The media will not be mounted.

          * eject - The media will not be mounted and it will be ejected if possible. Note that some volumes are not defined as ejectable, so using the deny key may be the best solution. Not valid for unmount-controls.'
        key: ActionStringItem
        presence: optional
        rangelist:
        - authenticate
        - read-only
        - deny
        - eject
        type: <string>
      subkeytype: ActionStringItem
      type: <array>
    - content: A media action string or an array of media action strings.
      key: dvd
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    - content: A media action string or an array of media action strings.
      key: bd
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    - content: A media action string or an array of media action strings.
      key: blankcd
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    - content: A media action string or an array of media action strings.
      key: blankdvd
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    - content: A media action string or an array of media action strings.
      key: blankbd
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    - content: A media action string or an array of media action strings.
      key: dvdram
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    - content: A media action string or an array of media action strings.
      key: disk-image
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    - content: A media action string or an array of media action strings.
      key: harddisk-internal
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    - content: 'A string or an array of media action strings. Internally installed SD cards and USB flash drives are included in the hard disk-external category.


        This key is the default for media types that don''t fall into other categories.'
      key: harddisk-external
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    - content: A media action string or an array of media action strings.
      key: networkdisk
      presence: optional
      subkeys: *id015
      subkeytype: ActionStringItem
      type: <array>
    subkeytype: MediaItems
    type: <dictionary>
  - content: The media type dictionary that controls volume mounting.
    key: mount-controls
    presence: optional
    subkeys: *id016
    subkeytype: MediaItems
    type: <dictionary>
  - content: The media type dictionary that controls volume unmounting.
    key: unmount-controls
    presence: optional
    subkeys: *id016
    subkeytype: MediaItems
    type: <dictionary>
  title: 'Media Management: Allowed Media'
com.apple.thirdactiveethernet.managed:
  description: ''
  payload:
    payloadtype: com.apple.thirdactiveethernet.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: Keys relevant to 802.1x configuration.   User enrollment payloads do not support the various proxy keys including ProxyType, ProxyServer, ProxyServerPort, ProxyUsername, ProxyPassword,, ProxyPACURL and ProxyPACFallbackAllowed.
    key: ANY
    presence: optional
    type: <any>
  title: '802.1X: Third Active Ethernet'
com.apple.thirdethernet.managed:
  description: ''
  payload:
    payloadtype: com.apple.thirdethernet.managed
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: Keys relevant to 802.1x configuration.   User enrollment payloads do not support the various proxy keys including ProxyType, ProxyServer, ProxyServerPort, ProxyUsername, ProxyPassword,, ProxyPACURL and ProxyPACFallbackAllowed.
    key: ANY
    presence: optional
    type: <any>
  title: '802.1X: Third Ethernet'
com.apple.tvremote:
  description: ''
  payload:
    payloadtype: com.apple.tvremote
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '11.3'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: true
        supervised: true
        userenrollment:
          mode: forbidden
      tvOS:
        allowmanualinstall: true
        introduced: '11.3'
        supervised: true
  payloadkeys:
  - content: The array of valid devices that Apple TV can connect to.
    key: AllowedRemotes
    presence: optional
    subkeys:
    - key: AllowedRemotesItem
      subkeys:
      - content: The MAC address of a permitted iOS device that can control this Apple TV. Use the format xx:xx:xx:xx:xx:xx. The field isn't case sensitive.
        key: RemoteDeviceID
        presence: required
        type: <string>
      type: <dictionary>
    supportedOS:
      iOS:
        introduced: n/a
    type: <array>
  - content: The array of valid Apple TV identifiers that the remote can connect to.
    key: AllowedTVs
    presence: optional
    subkeys:
    - key: AllowedTVsItem
      subkeys:
      - content: The MAC address of an Apple TV device that this iOS device is permitted to control. Use the format xx:xx:xx:xx:xx:xx. The field isn't case sensitive.
        key: TVDeviceID
        presence: required
        type: <string>
      - content: The name of an Apple TV device that this iOS device is permitted to control.
        key: TVDeviceName
        presence: optional
        supportedOS:
          iOS:
            introduced: '15.0'
        type: <string>
      type: <dictionary>
    supportedOS:
      tvOS:
        introduced: n/a
    type: <array>
  title: TV Remote
com.apple.universalaccess:
  payload:
    payloadtype: com.apple.universalaccess
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The minimum zoom level in the Zoom options.
    key: closeViewFarPoint
    presence: optional
    type: <integer>
  - content: If 'true', enables 'Use keyboard shortcuts' in the Zoom options.
    default: false
    key: closeViewHotkeysEnabled
    presence: optional
    type: <boolean>
  - content: The maximum zoom level in the Zoom options.
    key: closeViewNearPoint
    presence: optional
    type: <integer>
  - content: If 'true', enables 'Use scroll gesture' in the Zoom options.
    default: false
    key: closeViewScrollWheelToggle
    presence: optional
    type: <boolean>
  - content: If 'true', enables 'Show preview rectangle' in the Zoom options. Only available in macOS 10.15 and earlier.
    default: false
    key: closeViewShowPreview
    presence: optional
    supportedOS:
      macOS:
        deprecated: '10.15'
        introduced: '10.9'
    type: <boolean>
  - content: If 'true', enables 'Smooth images' in the Zoom options.
    default: false
    key: closeViewSmoothImages
    presence: optional
    type: <boolean>
  - content: The contrast value in the Display options.
    key: contrast
    presence: optional
    type: <integer>
  - content: If 'true', enables 'Flash the screen' in the Audio options.
    default: false
    key: flashScreen
    presence: optional
    type: <boolean>
  - content: 'If ''true'', enables ''Use grayscale'' in the Display options.

      This option is deprecated in macOS 11.'
    default: false
    key: grayscale
    presence: optional
    supportedOS:
      macOS:
        deprecated: '11.0'
    type: <boolean>
  - content: If 'true', enables Mouse Keys in the Mouse & Trackpad options.
    default: false
    key: mouseDriver
    presence: optional
    type: <boolean>
  - content: The size of the cursor.
    key: mouseDriverCursorSize
    presence: optional
    type: <integer>
  - content: If 'true', ignores the built-in trackpad.
    default: false
    key: mouseDriverIgnoreTrackpad
    presence: optional
    type: <boolean>
  - content: The initial delay before moving the mouse with Mouse Keys.
    key: mouseDriverInitialDelay
    presence: optional
    type: <integer>
  - content: The maximum speed for the cursor when using Mouse Keys.
    key: mouseDriverMaxSpeed
    presence: optional
    type: <integer>
  - content: If 'true', enables 'Slow Keys' in the Keyboard options.
    default: false
    key: slowKey
    presence: optional
    type: <boolean>
  - content: If 'true', enables 'click key sounds' for Slow Keys.
    default: false
    key: slowKeyBeepOn
    presence: optional
    type: <boolean>
  - content: The acceptance delay, in milliseconds, for Slow Keys.
    key: slowKeyDelay
    presence: optional
    type: <integer>
  - content: If 'true', plays stereo audio as mono.
    default: false
    key: stereoAsMono
    presence: optional
    type: <boolean>
  - content: If 'true', enables Sticky Keys in the Keyboard options.
    default: false
    key: stickyKey
    presence: optional
    type: <boolean>
  - content: If 'true', enables the beep when a modifier key is set for Sticky Keys.
    default: false
    key: stickyKeyBeepOnModifier
    presence: optional
    type: <boolean>
  - content: If 'true', enables 'Display pressed keys on screen' for Sticky Keys.
    default: false
    key: stickyKeyShowWindow
    presence: optional
    type: <boolean>
  - content: If 'true', enables Voice Over.
    default: false
    key: voiceOverOnOffKey
    presence: optional
    type: <boolean>
  - content: If 'true', enables Invert Colors in Display Accommodations.
    default: false
    key: whiteOnBlack
    presence: optional
    type: <boolean>
  title: Accessibility
com.apple.vpn.managed:
  description: Use this section to define settings for VPN access.
  payload:
    payloadtype: com.apple.vpn.managed
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: forbidden
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: 'The type of the VPN, which defines which settings are appropriate for this VPN payload.

      If the type is ''VPN'', then ''VPNSubType'' is required.'
    key: VPNType
    presence: required
    rangelist:
    - VPN
    - L2TP
    - PPTP
    - IPSec
    - IKEv2
    - AlwaysOn
    title: Type
    type: <string>
  - content: "An identifier for a vendor-specified configuration dictionary if 'VPNType' is 'VPN'.\nIf 'VPNType' is 'VPN', this field is required. If the configuration is targeted at a VPN solution that uses a VPN plugin, then this field contains the bundle identifier of the plugin. Here are some examples:\n* CiscoAnyConnect: \L'com.cisco.anyconnect.applevpn.plugin'\n* JuniperSSL: 'net.juniper.sslvpn'\n* F5SSL: 'com.f5.F5-Edge-Client.vpnplugin'\n* SonicWALLMobileConnect: \L'com.sonicwall.SonicWALL-SSLVPN.vpnplugin '\n* ''ArubaVIA: \L'com.arubanetworks.aruba-via.vpnplugin'\nIf the configuration is targeted at a VPN solution that uses a network extension provider, then this field contains the bundle identifier of the app that contains the provider. Contact the VPN solution vendor for the value of the identifier.\nIf 'VPNType' is 'IKEv2', then the 'VPNSubType' field is optional and is reserved for future use. If it is specified, it must contain the empty string."
    key: VPNSubType
    presence: optional
    title: VPN Subtype
    type: <string>
  - content: The description of the VPN connection displayed on the device.
    key: UserDefinedName
    presence: required
    title: User Defined Name
    type: <string>
  - content: The vendor-specific configuration dictionary. This dictionary is read only if 'VPNSubType' is specified.
    key: VendorConfig
    presence: optional
    subkeys:
    - content: The Kerberos realm name. This value should be properly capitalized.
      key: Realm
      presence: optional
      title: Realm
      type: <string>
    - content: 'The role to select when connecting to the server.

        This key is valid only for Juniper SSL.'
      key: Role
      presence: optional
      title: Role
      type: <string>
    - content: 'The group to connect to on the head end.

        This key is valid only for Cisco AnyConnect'
      key: Group
      presence: optional
      title: Group
      type: <string>
    - content: The login group or domain.
      key: LoginGroupOrDomain
      presence: optional
      title: Login Group or Domain
      type: <string>
    title: Vendor Configuration Dictionary
    type: <dictionary>
  - content: A dictionary used to specify a VPN when 'VPNType' is set to 'VPN', 'IPSec', or 'IKEv2'.
    key: VPN
    presence: optional
    subkeys:
    - content: The authentication method to use.
      default: Password
      key: AuthenticationMethod
      presence: optional
      rangelist:
      - Password
      - Certificate
      - Password+Certificate
      title: Authentication Method
      type: <string>
    - content: The UUID of the certificate payload within the same profile to use for account credentials.
      key: PayloadCertificateUUID
      presence: optional
      title: Certificate UUID
      type: <string>
    - content: The VPN user password.
      key: Password
      presence: optional
      title: Account Password
      type: <string>
    - content: The bundle identifier for the VPN provider.
      key: ProviderBundleIdentifier
      presence: optional
      title: Provider Bundle Identifier
      type: <string>
    - content: If the VPN provider is implemented as a system extension, then this field is required.
      key: ProviderDesignatedRequirement
      presence: optional
      supportedOS:
        iOS:
          introduced: n/a
        macOS:
          introduced: '10.15'
      title: Provider Designated Requirement
      type: <string>
    - content: If 'true', disconnects after an on-demand connection idles.
      default: 0
      key: DisconnectOnIdle
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable Disconnect on Idle
      type: <integer>
    - content: The length of time to wait before disconnecting an on-demand connection
      key: DisconnectOnIdleTimer
      presence: optional
      title: Disconnect on Idle time
      type: <integer>
    - content: The type of VPN service. If it is 'app-proxy', the service will tunnel traffic at the application level. If it is 'packet-tunnel', the service will tunnel traffic at the IP layer.
      default: packet-tunnel
      key: ProviderType
      presence: optional
      rangelist:
      - packet-tunnel
      - app-proxy
      type: <string>
    - content: If 'true', routes all traffic through the VPN.
      default: 0
      key: IncludeAllNetworks
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '14.0'
        macOS:
          introduced: '10.15'
      title: Include All Networks
      type: <integer>
    - content: 'If ''true'', all the VPN''s non-default routes take precedence over any locally defined routes.

        If ''IncludeAllNetworks'' is ''true'', the value of ''EnforceRoutes'' is ignored.

        Available in iOS 14.2 and later, and macOS 11 and later.'
      default: 0
      key: EnforceRoutes
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '14.2'
        macOS:
          introduced: '11.0'
      title: Enforce Routes
      type: <integer>
    - content: If 'true' and 'IncludeAllNetworks' is 'true', routes all local network traffic outside the VPN.
      key: ExcludeLocalNetworks
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '14.2'
        macOS:
          introduced: '10.15'
      title: Exclude Local Networks
      type: <integer>
    - content: If 'true', enables VPN On Demand.
      default: 0
      key: OnDemandEnabled
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable VPN On Demand
      type: <integer>
    - content: 'If ''true'', the Connect On Demand toggle in Settings is disabled for this configuration.

        Available in iOS 14 and later.'
      default: 0
      key: OnDemandUserOverrideDisabled
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '14.0'
        macOS:
          introduced: n/a
      title: Prevent users from toggling VPN On Demand
      type: <integer>
    - content: 'A list of domain names. The associated domain names are treated as though they were associated with the ''OnDemandMatchDomainsOnRetry'' key.


        This behavior can be overridden by ''OnDemandRules''.'
      key: OnDemandMatchDomainsAlways
      presence: optional
      subkeys: &id017
      - key: MatchDomainAlwaysElement
        title: Match Domain Always Element
        type: <string>
      subkeytype: MatchDomainAlwaysElement
      title: On Demand Match Domains Always
      type: <array>
    - content: 'A list of domain names. If the host name ends with one of these domain names, the VPN isn''t started automatically. This is used to exclude a subdomain within an included domain.


        In iOS 7 and later, this key is deprecated (but still supported) in favor of ''EvaluateConnection'' actions in the ''OnDemandRules'' dictionaries.'
      key: OnDemandMatchDomainsNever
      presence: optional
      subkeys: &id018
      - key: MatchDomainNeverElement
        title: Match Domain Never Element
        type: <string>
      subkeytype: MatchDomainNeverElement
      title: On Demand Match Domains Never
      type: <array>
    - content: 'A list of domain names. If the host name ends with one of these domain names and a DNS query for that domain name fails, the VPN is started automatically.


        In iOS 7 and later, this key is deprecated (but still supported) in favor of ''EvaluateConnection'' actions in the ''OnDemandRules'' dictionaries.'
      key: OnDemandMatchDomainsOnRetry
      presence: optional
      subkeys: &id019
      - key: MatchDomainOnRetryElement
        title: Match Domain On Retry Element
        type: <string>
      subkeytype: MatchDomainOnRetryElement
      title: On Demand Match Domains On Retry
      type: <array>
    - content: An array of dictionaries defining On Demand Rules.
      key: OnDemandRules
      presence: optional
      subkeys: &id020
      - key: OnDemandRulesElement
        subkeys:
        - content: 'The action to take if this dictionary matches the current network. Possible values are:

            * ''Allow'': Deprecated. Allow VPN On Demand to connect if triggered.

            * ''Connect'': Unconditionally initiate a VPN connection on the next network attempt.

            * ''Disconnect'': Tear down the VPN connection and do not reconnect on demand as long as this dictionary matches.

            * ''EvaluateConnection'': Evaluate the ActionParameters array for each connection attempt.

            * ''Ignore:'' Leave any existing VPN connection up, but do not reconnect on demand as long as this dictionary matches.'
          key: Action
          presence: required
          rangelist:
          - Allow
          - Connect
          - Disconnect
          - EvaluateConnection
          - Ignore
          title: On Demand Action
          type: <string>
        - content: 'A dictionary that provides rules similar to the ''OnDemandRules'' dictionary, but evaluated on each connection instead of when the network changes. These dictionaries are evaluated in order, and the behavior is determined by the first dictionary that matches.

            The keys allowed in each dictionary are described below. Note: This array is used only for dictionaries in which ''EvaluateConnection'' is the ''Action'' value.'
          key: ActionParameters
          presence: optional
          subkeys:
          - content: The domains for which this evaluation applies.
            key: Domains
            presence: required
            subkeys:
            - key: DomainsElement
              title: Domains Element
              type: <string>
            title: Domains
            type: <array>
          - content: 'Defines the VPN behavior for the specified domains. Allowed values are:

              * ''ConnectIfNeeded'': The specified domains should trigger a VPN connection attempt if domain name resolution fails, such as when the DNS server indicates that it cannot resolve the domain, responds with a redirection to a different server, or fails to respond (timeout).

              * ''NeverConnect'': The specified domains should never trigger a VPN connection attempt.'
            key: DomainAction
            presence: required
            rangelist:
            - ConnectIfNeeded
            - NeverConnect
            title: Domain Action
            type: <string>
          - content: 'An array of IP addresses of DNS servers to be used for resolving the specified domains. These servers need not be part of the device''s current network configuration. If these DNS servers are not reachable, a VPN connection is established in response. These DNS servers should be either internal DNS servers or trusted external DNS servers.

              Note: This key is valid only if the value of ''DomainAction'' is ''ConnectIfNeeded''.'
            key: RequiredDNSServers
            presence: optional
            subkeys:
            - key: RequiredDNSServersElement
              title: Required DNS Servers Element
              type: <string>
            title: Required DNS Servers
            type: <array>
          - content: 'An HTTP or HTTPS (preferred) URL to probe, using a GET request. If the URL''s hostname cannot be resolved, if the server is unreachable, or if the server does not respond with a 200 HTTP status code, a VPN connection is established in response.

              Note: This key is valid only if the value of ''DomainAction'' is ''ConnectIfNeeded''.'
            key: RequiredURLStringProbe
            presence: optional
            title: Required URL String Probe
            type: <string>
          title: Action Parameters
          type: <dictionary>
        - content: 'An array of domain names. This rule matches if any of the domain names in the specified list matches any domain in the device''s search domains list.

            A wildcard ''*'' prefix is supported. For example, ''*.example.com'' matches against either ''mydomain.example.com'' or ''yourdomain.example.com''.'
          key: DNSDomainMatch
          presence: optional
          subkeys:
          - key: DNSDomainMatchElement
            title: DNS Domain Match Element
            type: <string>
          title: DNS Domain Match
          type: <array>
        - content: 'An array of IP addresses. This rule matches if any of the network''s specified DNS servers match any entry in the array.

            Matching with a single wildcard is supported. For example, 17.* matches any DNS server in the 17.0.0.0/8 subnet.'
          key: DNSServerAddressMatch
          presence: optional
          subkeys:
          - key: DNSServerAddressMatchElement
            title: DNS Server Address Match Element
            type: <string>
          title: DNS Server Address Match
          type: <array>
        - content: An interface type. If specified, this rule matches only if the primary network interface hardware matches the specified type.
          key: InterfaceTypeMatch
          presence: optional
          rangelist:
          - Ethernet
          - WiFi
          - Cellular
          title: Interface Type Match
          type: <string>
        - content: 'An array of SSIDs to match against the current network. If the network is not a Wi-Fi network or if the SSID does not appear in this array, the match fails.

            Omit this key and the corresponding array to match against any SSID.'
          key: SSIDMatch
          presence: optional
          subkeys:
          - key: SSIDMatchElement
            title: SSID Match Element
            type: <string>
          title: SSID Match
          type: <array>
        - content: A URL to probe. If this URL is successfully fetched (returning a 200 HTTP status code) without redirection, this rule matches.
          key: URLStringProbe
          presence: optional
          title: URL String Probe
          type: <string>
        title: On Demand Rules Element
        type: <dictionary>
      subkeytype: OnDemandRulesElement
      title: On Demand Rules
      type: <array>
    title: VPN
    type: <dictionary>
  - content: The dictionary containing IPv4 settings.
    key: IPv4
    presence: optional
    subkeys:
    - content: If 'true', all network traffic is sent over VPN.
      default: 0
      key: OverridePrimary
      presence: optional
      rangelist:
      - 0
      - 1
      title: Override Primary Connection
      type: <integer>
    title: IPv4 Settings
    type: <dictionary>
  - content: The dictionary used when 'VPNType' is set to 'L2TP' or 'PTPP'.
    key: PPP
    presence: optional
    subkeys:
    - content: The VPN account user name. This key is used for L2TP and PPTP networks.
      key: AuthName
      presence: optional
      title: Account Username
      type: <string>
    - content: If TokenCard is 'false', use this password for authentication. This key is used for L2TP and PPTP networks.
      key: AuthPassword
      presence: optional
      title: Account Password
      type: <string>
    - content: 'If ''true'', uses a token card such as an RSA SecurID card for connecting.


        This key is used for L2TP networks.'
      default: 0
      key: TokenCard
      presence: optional
      rangelist:
      - 0
      - 1
      title: Use Token Card
      type: <integer>
    - content: 'The IP address or host name of VPN server.


        This key is used for L2TP and PPTP networks.'
      key: CommRemoteAddress
      presence: optional
      title: Remote Address
      type: <string>
    - content: An array of authentication plugins. If RSA SecurID is being used, this array should only have one value, 'EAP-RSA'. This key is used for L2TP and PPTP networks.
      key: AuthEAPPlugins
      presence: optional
      subkeys:
      - key: EAPPluginElement
        rangelist:
        - EAP-RSA
        - EAP-TLS
        - EAP-KRB
        repetition:
          max: 1
          min: 1
        title: EAP Plugin
        type: <string>
      title: EAP Plugins
      type: <array>
    - content: An array of authentication protocols. If RSA SecurID is being used, this array should have one value, 'EAP'. This key is used for L2TP and PPTP networks.
      key: AuthProtocol
      presence: optional
      subkeys:
      - key: AuthProtocolElement
        rangelist:
        - EAP
        repetition:
          max: 1
          min: 1
        title: Auth Protocol
        type: <string>
      title: Protocol
      type: <array>
    - content: If 'true' and 'CCPEnabled' is also 'true', enables CCPMPPE128 encryption.
      key: CCPMPPE40Enabled
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable CCPMPPE40
      type: <integer>
    - content: If 'true' and 'CCPEnabled' is also 'true', enables CCPMPPE40 encryption.
      key: CCPMPPE128Enabled
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable CCPMPPE128
      type: <integer>
    - content: 'If ''true'', enables encryption on the connection.


        This key is used for PPTP networks.'
      key: CCPEnabled
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable CCP
      type: <integer>
    - content: If 'true', disconnects after an on demand connection idles.
      default: 0
      key: DisconnectOnIdle
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable Disconnect on Idle
      type: <integer>
    - content: The length of time to wait before disconnecting an on demand connection
      key: DisconnectOnIdleTimer
      presence: optional
      title: Disconnect on Idle time
      type: <integer>
    title: PPP
    type: <dictionary>
  - content: The dictionary containing IPSec settings.
    key: IPSec
    presence: optional
    subkeys:
    - content: The IP address or host name of the VPN server.
      key: RemoteAddress
      presence: optional
      title: Remote Address
      type: <string>
    - content: The authentication method. Used for L2TP and Cisco IPSec.
      default: SharedSecret
      key: AuthenticationMethod
      presence: optional
      rangelist:
      - SharedSecret
      - Certificate
      title: Authentication Method
      type: <string>
    - content: The user name for the VPN account for Cisco IPSec.
      key: XAuthName
      presence: optional
      title: Username
      type: <string>
    - content: The VPN account password used for Cisco IPSec.
      key: XAuthPassword
      presence: optional
      title: Password
      type: <string>
    - content: If 'true', enables Xauth for Cisco IPSec VPNs.
      key: XAuthEnabled
      presence: optional
      rangelist:
      - 0
      - 1
      title: XAUTH Enabled
      type: <integer>
    - content: "String value is either \u201CPrompt\u201D or not present."
      key: XAuthPasswordEncryption
      presence: optional
      rangelist:
      - Prompt
      title: XAUTH Password Encryption
      type: <string>
    - content: 'The name of the group. If Hybrid Authentication is used, the string must end with ''hybrid''.


        Present only if ''AuthenticationMethod'' is ''SharedSecret'' and using for Cisco IPSec.'
      key: LocalIdentifier
      presence: optional
      title: Local Identifier
      type: <string>
    - content: 'Present only if ''AuthenticationMethod'' is ''SharedSecret''. The value is ''KeyID''.


        This type is used for L2TP and Cisco IPSec VPNs.'
      default: KeyID
      key: LocalIdentifierType
      presence: optional
      rangelist:
      - KeyID
      title: Local Identifier Type
      type: <string>
    - content: 'The shared secret for this VPN account.


        Only use this with L2TP and Cisco IPSec VPNs and if the ''AuthenticationMethod'' key is set to ''SharedSecret''.'
      key: SharedSecret
      presence: optional
      title: Shared Secret
      type: <data>
    - content: 'The UUID of the certificate payload within the same profile to use for the account credentials.


        Only use this with Cisco IPSec VPNs and if the ''AuthenticationMethod'' key is set to ''Certificate''.'
      key: PayloadCertificateUUID
      presence: optional
      title: Certificate UUID
      type: <string>
    - content: If 'true', prompts for a PIN when connecting to Cisco IPSec VPNs.
      default: false
      key: PromptForVPNPIN
      presence: optional
      title: Prompt for PIN
      type: <boolean>
    - content: If 'true', disconnect after an on-demand connection idles.
      default: 0
      key: DisconnectOnIdle
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable Disconnect on Idle
      type: <integer>
    - content: The length of time to wait before disconnecting an on-demand connection.
      key: DisconnectOnIdleTimer
      presence: optional
      title: Disconnect on Idle time
      type: <integer>
    - content: If 'true', bring the VPN connection up on demand.
      default: 0
      key: OnDemandEnabled
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable VPN On Demand
      type: <integer>
    - content: Deprecated. A list of domain names. In iOS 7 and later, if this key is present, the associated domain names are treated as though they were associated with the 'OnDemandMatchDomainsOnRetry' key. This behavior can be overridden by 'OnDemandRules'.
      key: OnDemandMatchDomainsAlways
      presence: optional
      subkeys: *id017
      subkeytype: MatchDomainAlwaysElement
      title: On Demand Match Domains Always
      type: <array>
    - content: Deprecated. A list of domain names. In iOS 7 and later, this key is deprecated (but still supported) in favor of 'EvaluateConnection' actions in the 'OnDemandRules' dictionaries.
      key: OnDemandMatchDomainsNever
      presence: optional
      subkeys: *id018
      subkeytype: MatchDomainNeverElement
      title: On Demand Match Domains Never
      type: <array>
    - content: Deprecated. A list of domain names. In iOS 7 and later, this key is deprecated (but still supported) in favor of 'EvaluateConnection' actions in the 'OnDemandRules' dictionaries.
      key: OnDemandMatchDomainsOnRetry
      presence: optional
      subkeys: *id019
      subkeytype: MatchDomainOnRetryElement
      title: On Demand Match Domains On Retry
      type: <array>
    - content: The on-demand rules dictionary.
      key: OnDemandRules
      presence: optional
      subkeys: *id020
      subkeytype: OnDemandRulesElement
      title: On Demand Rules
      type: <array>
    title: IPSec Settings
    type: <dictionary>
  - content: The dictionary used when 'VPNType' is set to 'IKEv2.'
    key: IKEv2
    presence: optional
    subkeys:
    - content: The IP address or host name of the VPN server.
      key: RemoteAddress
      presence: required
      title: RemoteAddress
      type: <string>
    - content: Identifier of the IKEv2 client.
      key: LocalIdentifier
      presence: required
      title: LocalIdentifier
      type: <string>
    - content: The remote identifier.
      key: RemoteIdentifier
      presence: required
      title: RemoteIdentifier
      type: <string>
    - content: 'The type of authentication method for the VPN.


        To enable EAP-only authentication, the authentication method should be set to ''None'' and the ''ExtendedAuthEnabled'' key should be set to 1. If this key is set to ''None'' and the ''ExtendedAuthEnabled'' key isn''t set, the authentication configuration defaults to ''SharedSecret''.'
      key: AuthenticationMethod
      presence: required
      rangelist:
      - None
      - SharedSecret
      - Certificate
      title: AuthenticationMethod
      type: <string>
    - content: This key specifies the type of 'PayloadCertificateUUID' used for IKEv2 machine authentication. If this key is included, the 'ServerCertificateIssuerCommonName' key is required.
      default: RSA
      key: CertificateType
      presence: optional
      rangelist:
      - RSA
      - ECDSA256
      - ECDSA384
      - ECDSA521
      - Ed25519
      title: Certificate Type
      type: <string>
    - content: The UUID of the certificate payload within the same profile to use as the account credential. If the value of 'AuthenticationMethod' is 'Certificate', this certificate is sent out for IKEv2 machine authentication. If extended authentication (EAP) is used, it is sent out for EAP-TLS authentication.
      key: PayloadCertificateUUID
      presence: optional
      title: PayloadCertificateUUID
      type: <string>
    - content: If 'AuthenticationMethod' is 'SharedSecret', this value is used for IKE authentication.
      key: SharedSecret
      presence: optional
      title: SharedSecret
      type: <string>
    - content: If 'true', enables EAP-only authentication.
      default: 0
      key: ExtendedAuthEnabled
      presence: optional
      rangelist:
      - 0
      - 1
      title: ExtendedAuthEnabled
      type: <integer>
    - content: The user name used for authentication.
      key: AuthName
      presence: optional
      title: AuthName
      type: <string>
    - content: The password used for authentication.
      key: AuthPassword
      presence: optional
      title: AuthPassword
      type: <string>
    - content: If 1, VPN is brought up on demand.
      default: 0
      key: OnDemandEnabled
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable VPN On Demand
      type: <integer>
    - content: If 1, the Connect On Demand toggle in Settings is disabled for this configuration.
      default: 0
      key: OnDemandUserOverrideDisabled
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '14.0'
        macOS:
          introduced: n/a
      title: Prevent users from toggling VPN On Demand
      type: <integer>
    - content: Determines when and how an OnDemand VPN should be used.
      key: OnDemandRules
      presence: optional
      subkeys: *id020
      subkeytype: OnDemandRulesElement
      title: On Demand Rules
      type: <array>
    - content: 'One of the following:

        * ''None'': No keepalive.

        * ''Low'': Send keepalive every 30 minutes.

        * ''Medium'': Send keepalive every 10 minutes.

        * ''High'': Send keepalive every 1 minute.'
      default: Medium
      key: DeadPeerDetectionRate
      presence: optional
      rangelist:
      - None
      - Low
      - Medium
      - High
      title: Dead Peer Detection Rate
      type: <string>
    - content: Common Name of the server certificate issuer. If set, this field causes IKE to send a certificate request based on this certificate issuer to the server. This key is required if the 'CertificateType' key is included and the 'ExtendedAuthEnabled' key is set to 1.
      key: ServerCertificateIssuerCommonName
      presence: optional
      title: ServerCertificateIssuerCommonName
      type: <string>
    - content: The common name of the server certificate. This name is used to validate the certificate sent by the IKE server. If not set, the remote identifier is used to validate the certificate.
      key: ServerCertificateCommonName
      presence: optional
      title: ServerCertificateCommonName
      type: <string>
    - content: The minimum TLS version to be used with EAP-TLS authentication.
      default: '1.0'
      key: TLSMinimumVersion
      presence: optional
      rangelist:
      - '1.0'
      - '1.1'
      - '1.2'
      supportedOS:
        iOS:
          introduced: '11.0'
        macOS:
          introduced: '10.13'
      title: TLS Minimum Version
      type: <string>
    - content: The maximum TLS version to be used with EAP-TLS authentication.
      default: '1.2'
      key: TLSMaximumVersion
      presence: optional
      rangelist:
      - '1.0'
      - '1.1'
      - '1.2'
      supportedOS:
        iOS:
          introduced: '11.0'
        macOS:
          introduced: '10.13'
      title: TLS Maximum Version
      type: <string>
    - content: If 'true', negotiations should use IKEv2 Configuration Attribute INTERNAL_IP4_SUBNET and INTERNAL_IP6_SUBNET.
      default: 0
      key: UseConfigurationAttributeInternalIPSubnet
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '9.0'
      title: Use IPv4 / IPv6 Internal Subnet Attributes
      type: <integer>
    - content: If 'true', disables MOBIKE.
      default: 0
      key: DisableMOBIKE
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '9.0'
      title: Disable Mobility and Multihoming
      type: <integer>
    - content: If 'true', disables IKEv2 redirect. If not set, the IKEv2 connection is redirected if a redirect request is received from the server.
      default: 0
      key: DisableRedirect
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '9.0'
      title: Disable Redirect
      type: <integer>
    - content: 'If ''true'', enables NAT Keepalive offload for Always On VPN IKEv2 connections. Keepalive packets are sent by the device to maintain NAT mappings for IKEv2 connections that have a NAT on the path. Keepalive packets are sent at regular interval when the device is awake. If ''NATKeepAliveOffloadEnable'' is set to ''true'', Keepalive packets will be offloaded to hardware while the device is asleep.


        NAT Keepalive offload has an impact on the battery life since extra workload is added during sleep. The default interval for the Keepalive offload packets is 20 seconds over WiFi and 110 seconds over Cellular interface. The default NAT Keepalive works well on networks with small NAT mapping timeouts but imposes a potential battery impact. If a network is known to have larger NAT mapping timeouts, larger Keepalive intervals may be safely used to minimize battery impact. The Keepalive interval can be modified by setting the `NATKeepAliveInterval` key.'
      default: 1
      key: NATKeepAliveOffloadEnable
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '9.0'
      title: NAT Keep Alive Offload Enable
      type: <integer>
    - content: The NAT Keepalive interval for Always On VPN IKEv2 connections. This value controls the interval over which Keepalive offload packets are sent by the device. The minimum value is 20 seconds. If no key is specified, the default is 20 seconds over Wi-Fi and 110 seconds over a cellular interface.
      default: 20
      key: NATKeepAliveInterval
      presence: optional
      supportedOS:
        iOS:
          introduced: '9.0'
      title: NAT Keepalive Interval
      type: <integer>
    - content: If 'true',  enables Perfect Forward Secrecy (PFS) for IKEv2 Connections.
      default: 0
      key: EnablePFS
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '9.0'
      title: Enable perfect forward secrecy
      type: <integer>
    - content: If 'true', performs a certificate revocation check for IKEv2 connections. This is a best-effort revocation check; server response timeouts won't cause it to fail.
      default: 0
      key: EnableCertificateRevocationCheck
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '9.0'
      title: Enable certificate revocation check
      type: <integer>
    - content: 'If true, enables a tunnel over cellular data to carry traffic that is eligible for WiFi Assist and also requires VPN.

        Enabling fallback requires that the server support multiple tunnels for a single user.'
      default: 0
      key: EnableFallback
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '13.0'
        macOS:
          introduced: n/a
      title: Enable fallback
      type: <integer>
    - content: 'The Maximum Transmission Unit (MTU) specifies the maximum size in bytes of each packet that will be sent over the IKEv2 VPN interface.

        Available in iOS 14 and later, and macOS 11 and later.'
      default: 1280
      key: MTU
      presence: optional
      range:
        max: 1400
        min: 1280
      supportedOS:
        iOS:
          introduced: '14.0'
        macOS:
          introduced: '11.0'
      title: Maximum Tranmission Unit
      type: <integer>
    - content: These parameters apply to Child Security Association unless 'ChildSecurityAssociationParameters' is specified.
      key: IKESecurityAssociationParameters
      presence: optional
      subkeys: &id021
      - content: The encryption algorithm.
        default: AES-256
        key: EncryptionAlgorithm
        presence: optional
        rangelist:
        - DES
        - 3DES
        - AES-128
        - AES-256
        - AES-128-GCM
        - AES-256-GCM
        - ChaCha20Poly1305
        title: EncryptionAlgorithm
        type: <string>
      - content: The integrity algorithm.
        default: SHA2-256
        key: IntegrityAlgorithm
        presence: optional
        rangelist:
        - SHA1-96
        - SHA1-160
        - SHA2-256
        - SHA2-384
        - SHA2-512
        title: IntegrityAlgorithm
        type: <string>
      - content: The Diffie-Hellman group. For AlwaysOn VPN, minimum allowed Diffie Hellman Group is 14 in iOS 14.2 and later.
        default: 14
        key: DiffieHellmanGroup
        presence: optional
        rangelist:
        - 1
        - 2
        - 5
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 31
        title: DiffieHellmanGroup
        type: <integer>
      - content: The SA lifetime (rekey interval) in minutes.
        default: 1440
        key: LifeTimeInMinutes
        presence: optional
        range:
          max: 1440
          min: 10
        title: LifeTimeInMinutes
        type: <integer>
      subkeytype: SecurityAssociationParameters
      title: IKESecurityAssociationParameters
      type: <dictionary>
    - content: The 'ChildSecurityAssociationParameters' dictionaries.
      key: ChildSecurityAssociationParameters
      presence: optional
      subkeys: *id021
      subkeytype: SecurityAssociationParameters
      title: ChildSecurityAssociationParameters
      type: <dictionary>
    title: IKEv2
    type: <dictionary>
  - content: A dictionary used for all VPN types.
    key: DNS
    presence: optional
    subkeys:
    - content: The array of DNS server IP address strings. These IP addresses can be a mixture of IPv4 and IPv6 addresses.
      key: ServerAddresses
      presence: required
      subkeys:
      - key: ServerAddressesElement
        title: Server Address Element
        type: <string>
      supportedOS:
        iOS:
          introduced: '10.0'
        macOS:
          introduced: '10.12'
      title: DNS Server Addresses
      type: <array>
    - content: The list of domain strings used to fully qualify single-label host names.
      key: SearchDomains
      presence: optional
      subkeys:
      - key: SearchDomainsElement
        title: Search Domains Element
        type: <string>
      supportedOS:
        iOS:
          introduced: '10.0'
        macOS:
          introduced: '10.12'
      title: DNS Search Domains
      type: <array>
    - content: The primary domain of the tunnel.
      key: DomainName
      presence: optional
      supportedOS:
        iOS:
          introduced: '10.0'
        macOS:
          introduced: '10.12'
      title: Domain Name
      type: <string>
    - content: 'The list of domain strings used to determine which DNS queries will use the DNS resolver settings contained in ''ServerAddresses''. This key is used to create a split DNS configuration where only hosts in certain domains are resolved using the tunnel''s DNS resolver. Hosts not in one of the domains in this list are resolved using the system''s default resolver.


        If ''SupplementalMatchDomains'' contains the empty string it becomes the default domain.


        Split-tunnel configurations can direct all DNS queries to the VPN DNS servers before the primary DNS servers. If the VPN tunnel becomes the network''s default route, the servers listed in ''ServerAddresses'' become the default resolver and the ''SupplementalMatchDomains'' list is ignored.'
      key: SupplementalMatchDomains
      presence: optional
      subkeys: &id022
      - key: SupplementalMatchDomainsElement
        title: Supplemental Match Domains Element
        type: <string>
      supportedOS:
        iOS:
          introduced: '10.0'
        macOS:
          introduced: '10.12'
      title: Supplemental Match Domains
      type: <array>
    - content: If 'false', append the domains in the 'SupplementalMatchDomains' list to the resolver's list of search domains.
      default: 0
      key: SupplementalMatchDomainsNoSearch
      presence: optional
      rangelist:
      - 0
      - 1
      supportedOS:
        iOS:
          introduced: '10.0'
        macOS:
          introduced: '10.12'
      title: Supplemental Match Domains No Search
      type: <integer>
    title: DNS
    type: <dictionary>
  - content: The dictionary used to configure 'Proxies' for use with 'VPN'.
    key: Proxies
    presence: optional
    subkeys:
    - content: If 'true', enables automatic proxy configuration.
      key: ProxyAutoConfigEnable
      presence: optional
      rangelist:
      - 0
      - 1
      title: Proxy AutoConfig Enable
      type: <integer>
    - content: If 'true', enables proxy auto discovery.
      default: 1
      key: ProxyAutoDiscoveryEnable
      presence: optional
      rangelist:
      - 0
      - 1
      title: Proxy Auto Discovery Enable
      type: <integer>
    - content: The URL to the location of the proxy auto-configuration file. Used only when 'ProxyAutoConfigEnable' is 'true'.
      key: ProxyAutoConfigURLString
      presence: optional
      title: Proxy Server URL
      type: <string>
    - content: An array of domains that defines which hosts use proxy settings for hosts.
      key: SupplementalMatchDomains
      presence: optional
      subkeys: *id022
      title: Supplemental Match Domains
      type: <array>
    - content: If 'true', enables proxy for HTTP traffic.
      default: 0
      key: HTTPEnable
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable HTTP
      type: <integer>
    - content: The port number of the HTTP proxy. This field is required if 'HTTPProxy' is specified.
      key: HTTPProxy
      presence: optional
      title: HTTP Proxy
      type: <string>
    - content: The host name of the HTTP proxy.
      key: HTTPPort
      presence: optional
      range:
        max: 65535
        min: 0
      title: HTTP Port
      type: <integer>
    - content: The user name used for authentication.
      key: HTTPProxyUsername
      presence: optional
      title: HTTP ProxyUsername
      type: <string>
    - content: The password used for authentication.
      key: HTTPProxyPassword
      presence: optional
      title: HTTP ProxyPassword
      type: <string>
    - content: If 'true', enables proxy for HTTPS traffic.
      default: 0
      key: HTTPSEnable
      presence: optional
      rangelist:
      - 0
      - 1
      title: Enable HTTPS
      type: <integer>
    - content: The host name of the HTTPS proxy.
      key: HTTPSProxy
      presence: optional
      title: HTTPS Proxy
      type: <string>
    - content: The port number of the HTTPS proxy. This field is required if 'HTTPSProxy' is specified.
      key: HTTPSPort
      presence: optional
      range:
        max: 65535
        min: 0
      title: HTTPS Port
      type: <integer>
    title: Proxies
    type: <dictionary>
  - content: The dictionary used when 'VPNType' is set to 'AlwaysOn'.
    key: AlwaysOn
    presence: optional
    subkeys:
    - content: If 'true', allows the user to disable the VPN configuration.
      default: 0
      key: UIToggleEnabled
      presence: optional
      rangelist:
      - 0
      - 1
      title: UI Toggle Enabled
      type: <integer>
    - content: An array that contains an arbitrary number of tunnel configurations.
      key: TunnelConfigurations
      presence: required
      subkeys:
      - key: TunnelConfigurationElement
        subkeys:
        - content: The type of connection, which must be 'IKEv2'.
          key: ProtocolType
          presence: required
          rangelist:
          - IKEv2
          title: Protocol Type
          type: <string>
        - content: The interfaces to apply this configuration to.
          key: Interfaces
          presence: optional
          subkeys:
          - key: InterfacesElement
            rangelist:
            - Cellular
            - WiFi
            title: Interfaces Element
            type: <string>
          title: Interfaces
          type: <array>
        title: A TunnelConfiguration Element
        type: <dictionary>
      title: TunnelConfigurations
      type: <array>
    - content: An array that contains an arbitrary number of service exceptions.
      key: ServiceExceptions
      presence: optional
      subkeys:
      - key: ServiceExceptionElement
        subkeys:
        - content: The name of a service which is exempt from Always On VPN. 'CellularServices' is available in iOS 11.3 and later; it exempts 'VoLTE', 'IMS' and 'MMS'. WiFiCalling is exempted in iOS 13.4 and later.
          key: ServiceName
          presence: required
          rangelist:
          - VoiceMail
          - AirPrint
          - CellularServices
          title: Service Name
          type: <string>
        - content: The action to take with network connections from the named service.
          key: Action
          presence: required
          rangelist:
          - Allow
          - Drop
          title: Action
          type: <string>
        title: A ServiceException Element
        type: <dictionary>
      title: ServiceExceptions
      type: <array>
    - content: An array that contains an arbitrary number of applications whose connections will occur outside the VPN.
      key: ApplicationExceptions
      presence: optional
      subkeys:
      - key: ApplicationExceptionElement
        subkeys:
        - content: The app's bundle identifier.
          key: BundleIdentifier
          presence: required
          title: Bundle Identifier
          type: <string>
        - content: Limit the exception to only the specified list of protocol(s). Only 'UDP' is supported.
          key: LimitToProtocols
          presence: optional
          subkeys:
          - key: LimitToProtocolElement
            rangelist:
            - UDP
            title: LimitToProtocol Element
            type: <string>
          title: LimitToProtocols
          type: <array>
        title: A ApplicationException Element
        type: <dictionary>
      supportedOS:
        iOS:
          introduced: '13.6'
      title: ApplicationExceptions
      type: <array>
    - content: If 'true', allows traffic from Captive Web Sheet outside the VPN tunnel.
      default: 0
      key: AllowCaptiveWebSheet
      presence: optional
      rangelist:
      - 0
      - 1
      title: Allow Captive Web Sheet
      type: <integer>
    - content: If 'true', allows traffic from all captive networking apps outside the VPN tunnel to perform captive network handling.
      default: 0
      key: AllowAllCaptiveNetworkPlugins
      presence: optional
      rangelist:
      - 0
      - 1
      title: Allow All Captive Network Plugins
      type: <integer>
    - content: The array of captive networking apps whose traffic is allowed outside the VPN tunnel, to perform captive network handling. Used only when 'AllowAllCaptiveNetworkPlugins 'is 'false'.
      key: AllowedCaptiveNetworkPlugins
      presence: optional
      subkeys:
      - key: AllowedCaptiveNetworkPluginElement
        subkeys:
        - content: The bundle identifier for the app that is allowed on the captive network.
          key: BundleIdentifier
          presence: required
          title: Bundle Identifier
          type: <string>
        title: An AllowedCaptiveNetworkPlugin Element
        type: <dictionary>
      title: AllowedCaptiveNetworkPlugins
      type: <array>
    supportedOS:
      iOS:
        introduced: '8.0'
      macOS:
        introduced: n/a
    title: AlwaysOn
    type: <dictionary>
  title: VPN
com.apple.vpn.managed.applayer:
  description: ''
  payload:
    content: The fields in this payload are the same as the VPN payload, with the addition of the fields shown below.
    payloadtype: com.apple.vpn.managed.applayer
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '7.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: A globally unique identifier for this VPN configuration.
    key: VPNUUID
    presence: required
    type: <string>
  - content: An array with entries that must each specify a domain that triggers the VPN connection in Safari. Each entry is in the format 'www.apple.com'.
    key: SafariDomains
    presence: optional
    subkeys:
    - content: A domain.
      key: SafariDomainsItem
      presence: required
      type: <string>
    type: <array>
  - content: 'An array with entries that must each specify a domain that triggers this VPN connection in Mail. Each entry is in the format ''www.apple.com''.

      This property is deprecated in iOS 13.4 and later; use the ''VPNUUID'' property of the Mail or ExchangeActiveSync payload instead.'
    key: MailDomains
    presence: optional
    subkeys:
    - content: A domain.
      key: MailDomainsItem
      presence: required
      type: <string>
    supportedOS:
      iOS:
        deprecated: '13.4'
        introduced: '13.0'
      macOS:
        introduced: '10.15'
    type: <array>
  - content: 'An array with entries that must each specify a domain that triggers this VPN connection in Calendar. Each entry is in the format ''www.apple.com''.

      This property is deprecated in iOS 13.4 and later; use the ''VPNUUID'' property of the CalDAV payload instead.'
    key: CalendarDomains
    presence: optional
    subkeys:
    - content: A domain.
      key: CalendarDomainsItem
      presence: required
      type: <string>
    supportedOS:
      iOS:
        deprecated: '13.4'
        introduced: '13.0'
      macOS:
        introduced: '10.15'
    type: <array>
  - content: 'An array with entries that must each specify a domain that triggers this VPN connection in Contacts. Each entry is in the format ''www.apple.com''.

      This property is deprecated in iOS 13.4 and later; use the ''VPNUUID'' property of the CardDAV payload instead.'
    key: ContactsDomains
    presence: optional
    subkeys:
    - content: A domain.
      key: ContactsDomainsItem
      presence: required
      type: <string>
    supportedOS:
      iOS:
        deprecated: '13.4'
        introduced: '13.0'
      macOS:
        introduced: '10.15'
    type: <array>
  - content: 'An array with entries that must each specify a domain that triggers this VPN. The domains must also be part of the ''apple-app-site-association'' file, as described in Supporting associated domains.

      Available in iOS 14 and later, and macOS 11 and later.'
    key: AssociatedDomains
    presence: optional
    subkeys:
    - content: A domain.
      key: AssociatedDomainsItem
      presence: required
      type: <string>
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: '11.0'
    type: <array>
  - content: 'An array with entries that each specify a domain that doesn''t trigger this VPN for connections to the domain.

      Available in iOS 14 and later, and macOS 11 and later.'
    key: ExcludedDomains
    presence: optional
    subkeys:
    - content: A domain.
      key: ExcludedDomainsItem
      presence: required
      type: <string>
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: '11.0'
    type: <array>
  - content: If 'true', automatically connects the VPN when associated apps for this per-app VPN service initiate network communication. Otherwise, the user must initiate the connection manually before those apps can initiate network communication. If this key isn't present, the value of the 'OnDemandEnabled' key determines the status of per-app VPN On Demand.
    key: OnDemandMatchAppEnabled
    presence: optional
    rangelist:
    - 0
    - 1
    type: <integer>
  - content: 'An array of SMB domains that''s accessible through this VPN connection.

      Available in iOS 13 and later.'
    key: SMBDomains
    presence: optional
    subkeys:
    - content: An SMB domain.
      key: SMBDomainsItem
      presence: required
      type: <string>
    supportedOS:
      iOS:
        introduced: '13.0'
      macOS:
        introduced: n/a
    type: <array>
  title: App-Layer VPN
com.apple.vpn.managed.appmapping:
  description: ''
  payload:
    content: This payload is only valid on macOS.
    payloadtype: com.apple.vpn.managed.appmapping
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.9'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: The array of VPN mapping dictionaries.
    key: AppLayerVPNMapping
    presence: required
    subkeys:
    - key: AppLayerVPNMappingItem
      subkeys:
      - content: The bundle identifier of the app using the per-app VPN.
        key: Identifier
        presence: required
        type: <string>
      - content: The identifier of the per-app VPN payload, which defines the per-app VPN that the app uses. See the 'VPNUUID' key of the AppLayerVPN payload.
        key: VPNUUID
        presence: required
        type: <string>
      - content: The code signature designated requirement of the app using the per-app VPN.
        key: DesignatedRequirement
        presence: required
        supportedOS:
          macOS:
            introduced: '10.10'
        type: <string>
      - content: The code signature signing identifier of the app using the per-app VPN.
        key: SigningIdentifier
        presence: required
        supportedOS:
          macOS:
            introduced: '10.10'
        type: <string>
      - content: The file-system path of the executable using the per-app VPN.
        key: Path
        presence: optional
        supportedOS:
          macOS:
            introduced: '10.15'
        type: <string>
      - content: 'An array of dictionaries. Each dictionary specifies a per-app VPN rule. Use this property to restrict this per-app VPN rule to only match the app''s spawned helper tool network traffic.

          For example, to match network traffic that the ''curl'' command generates when run from the Terminal.app, create an app mapping payload for Terminal.app and set the payload''s ''MatchTools'' key to an array that contains a dictionary that matches the ''curl'' command-line tool.

          If you don''t specify the ''MatchTools'' key, this per-app VPN rule matches all network traffic that the matching app and its spawned helper tools generate.'
        key: MatchTools
        presence: optional
        subkeys:
        - key: MatchToolsItem
          subkeys:
          - content: The code signature designated requirement of the command-line tool using the per-app VPN.
            key: DesignatedRequirement
            presence: required
            supportedOS:
              macOS:
                introduced: 10.15.4
            type: <string>
          - content: The code signature signing identifier of the command-line tool using the per-app VPN.
            key: SigningIdentifier
            presence: required
            supportedOS:
              macOS:
                introduced: 10.15.4
            type: <string>
          - content: The file-system path of the command-line tool using the per-app VPN.
            key: Path
            presence: optional
            supportedOS:
              macOS:
                introduced: 10.15.4
            type: <string>
          type: <dictionary>
        supportedOS:
          macOS:
            introduced: 10.15.4
        type: <array>
      type: <dictionary>
    type: <array>
  title: App-to-App-Layer VPN Mapping
com.apple.webClip.managed:
  description: Use this section to define web clips
  payload:
    payloadtype: com.apple.webClip.managed
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: false
          mode: allowed
          userchannel: true
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: false
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
  payloadkeys:
  - content: If 'true', prevents SpringBoard from adding 'shine' to the icon.
    default: false
    key: Precomposed
    presence: optional
    supportedOS:
      macOS:
        introduced: n/a
    title: Precomposed Icon
    type: <boolean>
  - content: If 'true', launches the web clip as a full-screen web app.
    default: false
    key: FullScreen
    presence: optional
    supportedOS:
      macOS:
        introduced: n/a
    title: Full Screen
    type: <boolean>
  - content: The URL that the web clip should open when clicked. If the URL doesn't begin with 'HTTP' or 'HTTPS', it doesn't work.
    key: URL
    presence: required
    subtype: <url>
    title: URL
    type: <string>
  - content: 'The PNG icon to be shown on the Home screen.

      For best results, provide a square image that''s no larger than 400 x 400 pixels and less than 1 MB when uncompressed. The graphics file is automatically scaled and cropped to fit, if necessary, and converted to PNG format. Web clip icons are 144 x 144 pixels for iPad devices with a Retina display, and 114 x 114 pixels for iPhone devices. To prevent the device from adding a shine to the image, set ''Precomposed'' to ''true''.

      If this property isn''t specified, a white square is shown.'
    key: Icon
    presence: optional
    title: Icon
    type: <data>
  - content: If 'true', enables removing the web clip.
    default: true
    key: IsRemovable
    presence: optional
    supportedOS:
      macOS:
        introduced: n/a
    title: Removable
    type: <boolean>
  - content: The name of the web clip as displayed on the Home screen.
    key: Label
    presence: required
    title: Label
    type: <string>
  - content: 'If ''true'', a full screen web clip can navigate to an external web site without showing Safari UI. Otherwise, Safari UI appears when navigating away from the web clip''s URL.

      This key has no effect when ''FullScreen'' is ''false''.'
    default: false
    key: IgnoreManifestScope
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: n/a
    title: Ignore Web Clip manifest scope
    type: <boolean>
  - content: The application bundle identifier that specifies the application which opens the URL. To use this property, the profile must be installed through an MDM.
    key: TargetApplicationBundleIdentifier
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
      macOS:
        introduced: n/a
    title: Target Application Bundle Identifier
    type: <string>
  title: Web Clip
com.apple.webcontent-filter:
  description: Use this section to define managed email and web domains.
  payload:
    content: As of iOS 16.0, this can be installed on Device Enrollments and User Enrollments if ContentFilterUUID is specified. Previously it could only be installed on supervised devices.
    payloadtype: com.apple.webcontent-filter
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '7.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.15'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The type of filter, built-in or plug-in. In macOS, the system supports only the plug-in value.
    default: BuiltIn
    key: FilterType
    presence: optional
    rangelist:
    - BuiltIn
    - Plugin
    supportedOS:
      iOS:
        introduced: '8.0'
    title: FilterType
    type: <string>
  - content: If 'true', automatic filtering is in an enabled state. This function evaluates each web page as it loads and attempts to identify and block content not suitable for children. The search algorithm is complex and may vary from release to release, but it's basically looking for adult language.
    default: false
    key: AutoFilterEnabled
    presence: optional
    supportedOS:
      macOS:
        introduced: n/a
    title: Web filter enabled
    type: <boolean>
  - content: An array or URLs that are accessible whether or not the automatic filter allows access. The system uses this array only when 'AutoFilterEnabled' is 'true'. Otherwise, it ignores this field.
    key: PermittedURLs
    presence: optional
    subkeys:
    - key: PermittedURLItems
      title: Permitted url items
      type: <string>
    supportedOS:
      macOS:
        introduced: n/a
    title: PermittedURLs
    type: <array>
  - content: Use 'DenyListURLs' instead.
    key: BlacklistedURLs
    presence: optional
    subkeys:
    - key: BlacklistedURLItems
      title: Blacklisted url items
      type: <string>
    supportedOS:
      iOS:
        deprecated: '14.5'
      macOS:
        introduced: n/a
    title: BlacklistedURLs
    type: <array>
  - content: An array of URLs that are inaccessible. Limit the number of these URLs to about 500.
    key: DenyListURLs
    presence: optional
    subkeys:
    - key: DenyListURLItems
      title: Denylisted url items
      type: <string>
    supportedOS:
      iOS:
        introduced: '14.5'
      macOS:
        introduced: n/a
    title: DenyListURLs
    type: <array>
  - content: Use 'AllowListBookmarks' instead.
    key: WhitelistedBookmarks
    presence: optional
    subkeys:
    - key: WhitelistedBookmarksItem
      subkeys:
      - content: The URL of the bookmark in the allow list.
        key: URL
        presence: required
        title: URL
        type: <string>
      - content: The title of the bookmark.
        key: Title
        presence: required
        title: Title
        type: <string>
      title: Identifier
      type: <dictionary>
    supportedOS:
      iOS:
        deprecated: '14.5'
      macOS:
        introduced: n/a
    title: White list
    type: <array>
  - content: An array of dictionaries defining the pages that the user can visit.
    key: AllowListBookmarks
    presence: optional
    subkeys:
    - key: AllowListBookmarksItem
      subkeys:
      - content: The URL of the bookmark in the allow list.
        key: URL
        presence: required
        title: URL
        type: <string>
      - content: The title of the bookmark.
        key: Title
        presence: required
        title: Title
        type: <string>
      title: Identifier
      type: <dictionary>
    supportedOS:
      iOS:
        introduced: '14.5'
      macOS:
        introduced: n/a
    title: Allow list
    type: <array>
  - content: The display name for this filtering configuration.
    key: UserDefinedName
    presence: optional
    title: UserDefinedName
    type: <string>
  - content: The bundle ID of the plug-in that provides filtering service.
    key: PluginBundleID
    presence: optional
    title: PluginBundleID
    type: <string>
  - content: The server address, which may be the IP address, hostname, or URL.
    key: ServerAddress
    presence: optional
    title: ServerAddress
    type: <string>
  - content: The user name for the service.
    key: UserName
    presence: optional
    title: Username
    type: <string>
  - content: The password for the service.
    key: Password
    presence: optional
    title: Password
    type: <string>
  - content: The UUID of the certificate payload within the same profile that the system uses to authenticate the user.
    format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
    key: PayloadCertificateUUID
    presence: optional
    title: Certificate UUID
    type: <string>
  - content: The organization string that passes to the third-party plug-in.
    key: Organization
    presence: optional
    title: Organization
    type: <string>
  - content: The custom dictionary that the filtering service plug-in needs.
    key: VendorConfig
    presence: optional
    subkeys:
    - content: The custom key/value pairs for the filtering service.
      key: ANY
      presence: required
      type: <any>
    type: <dictionary>
  - content: If 'true', enables the filtering of WebKit traffic. Either 'FilterBrowsers' or 'FilterSockets' must be 'true'.
    default: false
    key: FilterBrowsers
    presence: optional
    supportedOS:
      macOS:
        introduced: n/a
    title: FilterBrowsers
    type: <boolean>
  - content: If 'true', enables the filtering of socket traffic. Either 'FilterBrowsers' or 'FilterSockets' must be 'true'.
    default: false
    key: FilterSockets
    presence: optional
    title: FilterSockets
    type: <boolean>
  - content: 'The designated requirement string that the system embeds in the code signature of the filter data provider system extension. This string identifies the filter data provider when the filter starts running. This field is a requirement if ''FilterSockets'' is ''true''.

      Available in macOS 10.15 and later.'
    key: FilterDataProviderDesignatedRequirement
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.15'
    title: Filter Data Provider Designated Requirement
    type: <string>
  - content: 'The bundle identifier string of the filter data provider system extension. This string identifies the filter data provider when the filter starts running. This field is a requirement if ''FilterSockets'' is ''true''.

      Available in macOS 10.15 and later.'
    key: FilterDataProviderBundleIdentifier
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.15'
    title: Filter Data Provider Bundle Identifier
    type: <string>
  - content: 'If this value is ''true'', the property enables the filtering of network packets.

      Either ''FilterPackets'' or ''FilterSockets'' must be ''true''.

      You can only use this when ''FilterType'' is ''Plugin''.

      Available in macOS 10.15 and later.'
    default: false
    key: FilterPackets
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.15'
    title: Filter Network Packets
    type: <boolean>
  - content: 'The designated requirement string that the system embeds in the code signature of the filter packet provider system extension. This string identifies the filter packet provider when the filter starts running. This field is a requirement if ''FilterPackets'' is ''true''.

      Available in macOS 10.15 and later.'
    key: FilterPacketProviderDesignatedRequirement
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.15'
    title: Filter Packet Provider Designated Requirement
    type: <string>
  - content: 'The bundle identifier string of the filter packet provider system extension. This string identifies the filter packet provider when the filter starts running. This field is a requirement if ''FilterPackets'' is ''true''.

      Available in macOS 10.15 and later.'
    key: FilterPacketProviderBundleIdentifier
    presence: optional
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.15'
    title: Filter Packet Provider Bundle Identifier
    type: <string>
  - content: 'This value is for deriving the relative order of content filters. Filters with a grade of ''firewall'' see network traffic before filters with a grade of ''inspector''. The system doesn''t define the order of filters within a grade.

      Available in macOS 10.15 and later.'
    default: firewall
    key: FilterGrade
    presence: optional
    rangelist:
    - firewall
    - inspector
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.15'
    title: Filter Grade
    type: <string>
  - content: A globally-unique identifier for this content filter configuration. Managed apps with the same 'ContentFilterUUID' in their app attributes have their network traffic processed by the content filter.
    key: ContentFilterUUID
    presence: optional
    supportedOS:
      iOS:
        introduced: '16.0'
      macOS:
        introduced: n/a
    title: Content Filter UUID
    type: <string>
  title: Web Content Filter
com.apple.wifi.managed:
  description: Use this section to define Wi-Fi settings
  payload:
    payloadtype: com.apple.wifi.managed
    supportedOS:
      iOS:
        allowmanualinstall: true
        introduced: '4.0'
        sharedipad:
          devicechannel: true
          mode: allowed
          userchannel: false
        supervised: false
        userenrollment:
          mode: allowed
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: true
        userenrollment:
          mode: allowed
      tvOS:
        allowmanualinstall: true
        introduced: '5.1'
        supervised: false
      watchOS:
        allowmanualinstall: true
        introduced: '3.2'
  payloadkeys:
  - content: 'If ''true'', the device joins the network automatically.

      If ''false'', the user must tap the network name to join it.

      Available in iOS 5.0 and later, and in macOS 10.7 and later.'
    default: true
    key: AutoJoin
    presence: optional
    supportedOS:
      iOS:
        introduced: '5.0'
    title: Auto Join
    type: <boolean>
  - content: The SSID of the Wi-Fi network to be used. In iOS 7.0 and later, the SSID is optional if a 'DomainName' value is provided.
    key: SSID_STR
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
    title: SSID
    type: <string>
  - content: If 'true', defines this network as hidden.
    default: false
    key: HIDDEN_NETWORK
    presence: optional
    title: Hidden
    type: <boolean>
  - content: 'The proxy type, if any, to use. If you choose the manual proxy type, you need the proxy server address, including its port and optionally a user name and password into the proxy server. If you choose the auto proxy type, you can enter a proxy autoconfiguration (PAC) URL.

      Available in iOS 5.0 and later, and on all versions of macOS.'
    default: None
    key: ProxyType
    presence: optional
    rangelist:
    - None
    - Manual
    - Auto
    supportedOS:
      iOS:
        userenrollment:
          mode: forbidden
    title: Proxy Type
    type: <string>
  - content: 'The encryption type for the network.


      WPA specifies WPA only; WPA2 applies to both encryption types.

      Available in iOS 4.0 and later, and in all versions of macOS. The ''None'' value is available in iOS 5.0 and later, and the ''WPA2'' value is available in iOS 8.0 and later.'
    default: Any
    key: EncryptionType
    presence: optional
    rangelist:
    - WEP
    - WPA
    - WPA2
    - WPA3
    - Any
    - None
    title: Encryption Type
    type: <string>
  - content: The password for the access point.
    key: Password
    presence: optional
    title: Password
    type: <string>
  - content: The UUID of the certificate payload within the same profile to use for the client credential.
    format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
    key: PayloadCertificateUUID
    presence: optional
    title: Certificate UUID
    type: <string>
  - content: The enterprise network configuration.
    key: EAPClientConfiguration
    presence: optional
    subkeys:
    - content: 'The system accepts the following EAP types:

        13 = TLS

        17 = LEAP

        18 = EAP-SIM

        21 = TTLS

        23 = EAP-AKA

        25 = PEAP

        43 = EAP-FAST


        For EAP-TLS authentication without a network payload, install the necessary identity certificates and have your users select EAP-TLS mode in the 802.1X credentials dialog that appears when they connect to the network. For other EAP types, a network payload is necessary and must specify the correct settings for the network.'
      key: AcceptEAPTypes
      presence: required
      subkeys:
      - key: EAPType
        rangelist:
        - 13
        - 17
        - 18
        - 21
        - 23
        - 25
        - 43
        title: EAP Type
        type: <integer>
      title: Accept EAP Types
      type: <array>
    - content: The user name for the account. If you don't specify a value, the system prompts the user during login.
      key: UserName
      presence: optional
      title: Username
      type: <string>
    - content: The user's password. If you don't specify a value, the system prompts the user during login.
      key: UserPassword
      presence: optional
      title: Password
      type: <string>
    - content: If 'true', the user receives a prompt for a password each time they connect to the network.
      default: false
      key: OneTimePassword
      presence: optional
      supportedOS:
        iOS:
          introduced: '8.0'
      type: <boolean>
    - content: An array of the UUID of a certificate payload to trust for authentication. Use this key to prevent the device from asking the user whether to trust the listed certificates. Dynamic trust (the certificate dialogue) is in a disabled state if you specify this property without also enabling  'TLSAllowTrustExceptions'.
      key: PayloadCertificateAnchorUUID
      presence: optional
      subkeys:
      - format: ^[0-9A-Za-z]{8}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}-[0-9A-Za-z]{12}$
        key: CertificateAnchorUUID
        title: Individual Certificate Anchor UUID
        type: <string>
      title: Certificate Anchor UUID
      type: <array>
    - content: An array of trusted certificates. Each entry in the array must contain certificate data that represents an anchor certificate used for verifying the server certificate.
      key: TLSTrustedCertificates
      presence: optional
      subkeys:
      - content: A certificate identifier.
        key: TLSTrustedCertificatesItem
        presence: required
        type: <string>
      title: TLS Trusted Certificates
      type: <array>
    - content: 'The list of accepted server certificate common names. If a server presents a certificate that isn''t in this list, the system doesn''t trust it.

        If you specify this property, the system disables dynamic trust (the certificate dialog) unless you also specify ''TLSAllowTrustExceptions''  with the value ''true''.

        If necessary, use wildcards to specify the name, such as ''wpa.*.example.com''.'
      key: TLSTrustedServerNames
      presence: optional
      subkeys:
      - key: TLSTrustedServerName
        title: Individual Trusted TLS Server Name
        type: <string>
      title: TLS Trusted Server Names
      type: <array>
    - content: 'If ''true'', allows a dynamic trust decision by the user. The dynamic trust is the certificate dialogue that appears when the system doesn''t trust a certificate.

        If ''false'', the authentication fails if the system doesn''t already trust the certificate.

        As of iOS 8, Apple no longer supports this key.'
      default: true
      key: TLSAllowTrustExceptions
      presence: optional
      supportedOS:
        iOS:
          removed: '8.0'
      title: Allow Trust Exceptions
      type: <boolean>
    - content: 'If ''true'', allows for two-factor authentication for EAP-TTLS, PEAP, or EAP-FAST. If ''false'', allows for zero-factor authentication for EAP-TLS.

        If you don''t specify a value, the default is ''true'' for EAP-TLS, and ''false'' for other EAP types.'
      default: false
      key: TLSCertificateIsRequired
      presence: optional
      supportedOS:
        iOS:
          introduced: '7.0'
      type: <boolean>
    - content: The inner authentication that the TTLS module uses.
      default: MSCHAPv2
      key: TTLSInnerAuthentication
      presence: optional
      rangelist:
      - PAP
      - EAP
      - CHAP
      - MSCHAP
      - MSCHAPv2
      title: TTLS Inner Authentication
      type: <string>
    - content: The minimum TLS version for EAP authentication.
      default: '1.0'
      key: TLSMinimumVersion
      presence: optional
      rangelist:
      - '1.0'
      - '1.1'
      - '1.2'
      supportedOS:
        iOS:
          introduced: '11.0'
        macOS:
          introduced: '10.13'
        tvOS:
          introduced: '11.0'
      type: <string>
    - content: The maximum TLS version for EAP authentication.
      default: '1.2'
      key: TLSMaximumVersion
      presence: optional
      rangelist:
      - '1.0'
      - '1.1'
      - '1.2'
      supportedOS:
        iOS:
          introduced: '11.0'
        macOS:
          introduced: '10.13'
        tvOS:
          introduced: '11.0'
      type: <string>
    - content: 'A name that hides the user''s true name. The user''s actual name appears only inside the encrypted tunnel. For example, you might set this to anonymous or anon, or anon@mycompany.net. It can increase security because an attacker can''t see the authenticating user''s name in the clear.


        This key is only relevant to TTLS, PEAP, and EAP-FAST.'
      key: OuterIdentity
      presence: optional
      title: Outer Identity
      type: <string>
    - content: If 'true', the device uses an existing PAC if it's present. Otherwise, the server must present its identity using a certificate.
      default: false
      key: EAPFASTUsePAC
      presence: optional
      title: Use PAC
      type: <boolean>
    - content: 'If ''true'', allows PAC provisioning.


        This value is only applicable if ''EAPFASTUsePAC'' is ''true''. This value must be ''true'' for EAP-FAST PAC usage to succeed because there is no other way to provision a PAC.'
      default: false
      key: EAPFASTProvisionPAC
      presence: optional
      title: Provision PAC
      type: <boolean>
    - content: If 'true', provisions the device anonymously. Note that there are known machine-in-the-middle attacks for anonymous provisioning.
      default: false
      key: EAPFASTProvisionPACAnonymously
      presence: optional
      title: Provision PAC Anonymously
      type: <boolean>
    - content: 'The minimum number of RAND values to accept from the server.

        For use with EAP-SIM only.'
      default: 3
      key: EAPSIMNumberOfRANDs
      presence: optional
      rangelist:
      - 2
      - 3
      supportedOS:
        iOS:
          introduced: '8.0'
      title: Allow Two RANDs
      type: <integer>
    - content: 'Set this string to ''ActiveDirectory'' to use the AD computer name and password credentials.

        If using this property, you can''t use ''SystemModeUseOpenDirectoryCredentials''.'
      key: SystemModeCredentialsSource
      presence: optional
      type: <string>
    - content: 'If ''true'', the system mode connection tries to use the Open Directory credentials.

        If using this property, you can''t use  ''SystemModeCredentialsSource''.'
      default: false
      key: SystemModeUseOpenDirectoryCredentials
      presence: optional
      type: <boolean>
    - content: If 'true', the user receives a prompt for a password each time they connect to the network.
      default: false
      key: OneTimeUserPassword
      presence: optional
      title: Per-Connection Password
      type: <boolean>
    title: EAP Client Configuration
    type: <dictionary>
  - content: 'The operator name to display when connected to this network. Used only with Wi-Fi Hotspot 2.0 access points.

      Available in iOS 7.0 and later, and in macOS 10.9 and later.'
    key: DisplayedOperatorName
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: '10.9'
    title: Displayed Operator Name
    type: <string>
  - content: 'The primary domain of the tunnel.

      Available in iOS 7.0 and later, and in macOS 10.9 and later.'
    key: DomainName
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: '10.9'
    title: Domain Name
    type: <string>
  - content: 'An array of Roaming Consortium Organization Identifiers used for Wi-Fi Hotspot 2.0 negotiation.

      Available in iOS 7.0 and later, and in macOS 10.9 and later.'
    key: RoamingConsortiumOIs
    presence: optional
    subkeys:
    - format: ^([0-9A-Za-z]{6})|([0-9A-Za-z]{9})$
      key: RoamingConsortiumOI
      type: <string>
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: '10.9'
    title: Roaming OIs
    type: <array>
  - content: 'If ''true'', allows connection to roaming service providers.

      Available in iOS 7.0 and later, and in macOS 10.9 and later.'
    default: false
    key: ServiceProviderRoamingEnabled
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: '10.9'
    title: Roaming Enable
    type: <boolean>
  - content: 'If ''true'', the device treats the network as a hotspot.

      Available in iOS 7.0 and later, and in macOS 10.9 and later.'
    default: false
    key: IsHotspot
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: '10.9'
    title: Is Hotspot
    type: <boolean>
  - content: The HESSID used for Wi-Fi Hotspot 2.0 negotiation.
    key: HESSID
    presence: optional
    supportedOS:
      iOS:
        introduced: '7.0'
    type: <string>
  - content: 'An array of Network Access Identifier Realm names used for Wi-Fi Hotspot 2.0 negotiation.

      Available in iOS 7.0 and later, and in macOS 10.9 and later.'
    key: NAIRealmNames
    presence: optional
    subkeys:
    - key: NAIRealmName
      type: <string>
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: '10.9'
    title: Realm Names
    type: <array>
  - content: 'An array of Mobile Country Code/Mobile Network Code (MCC/MNC) pairs used for Wi-Fi Hotspot 2.0 negotiation. Each string must contain exactly six digits.

      Available in iOS 7.0 and later. This feature is not supported in macOS.'
    key: MCCAndMNCs
    presence: optional
    subkeys:
    - format: ^[0-9]{6}$
      key: MCCAndMNC
      type: <string>
    supportedOS:
      iOS:
        introduced: '7.0'
      macOS:
        introduced: n/a
    title: MCC/MNCs
    type: <array>
  - content: 'If ''true'', Captive Network detection will be bypassed when the device connects to the network.

      Available in iOS 10.0 and later.'
    default: false
    key: CaptiveBypass
    presence: optional
    supportedOS:
      iOS:
        introduced: '10.0'
      macOS:
        introduced: n/a
    title: Disable Captive Network Detection
    type: <boolean>
  - content: 'A dictionary that contains the list of apps that are allowed to benefit from L2 and L3 marking. When this dictionary isn''t present, all apps are allowed to use L2 and L3 marking when the Wi-Fi network supports Cisco QoS fast lane.

      Available in iOS 10.0 and later, and in macOS 10.13 and later.'
    key: QoSMarkingPolicy
    presence: optional
    subkeys:
    - content: "An array of app bundle identifiers that defines the allow list for L2 and L3 marking for traffic that goes to the Wi-Fi network. If the array isn't present, but the 'QoSMarkingPolicy' key is present \u2014 even empty \u2014 no apps can use L2 and L3 marking."
      key: QoSMarkingAllowListAppIdentifiers
      presence: optional
      subkeys: &id023
      - key: appBundleID
        title: Allowlisted App
        type: <string>
      supportedOS:
        iOS:
          introduced: '14.5'
        macOS:
          introduced: n/a
      title: Allowlisted App Identifiers
      type: <array>
    - content: Use 'QoSMarkingAllowListAppIdentifiers' instead.
      key: QoSMarkingWhitelistedAppIdentifiers
      presence: optional
      subkeys: *id023
      supportedOS:
        iOS:
          deprecated: '14.5'
      title: Whitelisted App Identifiers
      type: <array>
    - content: If 'true', adds audio and video traffic of built-in audio/video services, such as FaceTime and Wi-Fi Calling, to the allow list for L2 and L3 marking for traffic that goes to the Wi-Fi network.
      default: true
      key: QoSMarkingAppleAudioVideoCalls
      presence: optional
      title: QoS marking for audio/video calls
      type: <boolean>
    - content: 'If ''true'', disables L3 marking and only uses L2 marking for traffic that goes to the Wi-Fi network.


        If ''false'', the system behaves as if Wi-Fi doesn''t have an association with a Cisco QoS fast lane network.'
      default: true
      key: QoSMarkingEnabled
      presence: optional
      title: Allow QoS marking
      type: <boolean>
    supportedOS:
      iOS:
        introduced: '10.0'
      macOS:
        introduced: '10.13'
    title: QoS Marking Policy
    type: <dictionary>
  - content: An array of strings that contain the type of connection mode to be attached.
    key: SetupModes
    presence: optional
    subkeys:
    - content: A type of connection mode.
      key: SetupModesItem
      presence: required
      rangelist:
      - System
      - Loginwindow
      type: <string>
    supportedOS:
      iOS:
        introduced: n/a
      macOS:
        introduced: '10.7'
      tvOS:
        introduced: n/a
      watchOS:
        introduced: n/a
    type: <array>
  - content: If 'true', enables IPv6 on this interface.
    default: true
    key: EnableIPv6
    presence: optional
    type: <boolean>
  - content: 'If ''true'', allows for two-factor authentication for EAP-TTLS, PEAP, or EAP-FAST.

      If ''false'', allows for zero-factor authentication for EAP-TLS.'
    default: false
    key: TLSCertificateRequired
    presence: optional
    title: Certificate Required
    type: <boolean>
  - content: The proxy server's network address.
    key: ProxyServer
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: forbidden
      macOS:
        userenrollment:
          mode: forbidden
    title: Proxy Server
    type: <string>
  - content: The proxy server's port number.
    key: ProxyServerPort
    presence: optional
    range:
      max: 65535
      min: 0
    supportedOS:
      iOS:
        userenrollment:
          mode: forbidden
      macOS:
        userenrollment:
          mode: forbidden
    title: Proxy Server Port
    type: <integer>
  - content: The user name used to authenticate to the proxy server.
    key: ProxyUsername
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: forbidden
      macOS:
        userenrollment:
          mode: forbidden
    title: Proxy Username
    type: <string>
  - content: The password used to authenticate to the proxy server.
    key: ProxyPassword
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: forbidden
    title: Proxy Password
    type: <string>
  - content: The URL of the PAC file that defines the proxy configuration.
    key: ProxyPACURL
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: forbidden
      macOS:
        userenrollment:
          mode: forbidden
    title: Proxy Username
    type: <string>
  - content: If 'true', allows connecting directly to the destination if the PAC file is unreachable.
    default: false
    key: ProxyPACFallbackAllowed
    presence: optional
    supportedOS:
      iOS:
        userenrollment:
          mode: forbidden
      macOS:
        userenrollment:
          mode: forbidden
    title: Proxy PAC Fallback Allowed
    type: <boolean>
  - content: 'If ''true,'' disables MAC address randomization for a Wi-Fi network while associated with that network. This feature also shows a privacy warning in Settings indicating that the network has reduced privacy protections.

      This value is only locked when the profile is installed by MDM. If the profile is manually installed, the value is set but the user can change it.

      Available in iOS 14 and later, and watchOS 7 and later.'
    default: false
    key: DisableAssociationMACRandomization
    presence: optional
    supportedOS:
      iOS:
        introduced: '14.0'
        userenrollment:
          mode: forbidden
      macOS:
        introduced: n/a
      tvOS:
        introduced: n/a
      watchOS:
        introduced: '7.0'
    title: Disable MAC address randomization during association
    type: <boolean>
  title: Wi-Fi
com.apple.xsan:
  description: ''
  payload:
    content: Sets up Xsan clients and controls certain Xsan volume mount behaviors.
    payloadtype: com.apple.xsan
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.10'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: The name of the SAN. This key is required for all Xsan SANs. The name must exactly match the name of the SAN defined in the metadata server.
    key: sanName
    presence: required
    type: <string>
  - content: 'An array of LDAP URLs where Xsan systems can obtain SAN configuration updates. This key is required for all Xsan SANs. There should be one entry for each Xsan MDC.


      Example URL: ''ldaps://mdc1.example.com:389''.'
    key: sanConfigURLs
    presence: required
    subkeys:
    - content: A URL.
      key: sanConfigURLsItem
      presence: required
      type: <string>
    type: <array>
  - content: 'An array of storage area network (SAN) File System Name Server coordinators. The list should contain the same addresses in the same order as the metadata controller (MDC) ''/Library/Preferences/Xsan/fsnameservers'' file.  Xsan SAN clients automatically receive updates to the ''fsnameservers'' list from the SAN configuration servers whenever this list changes. StorNext administrators should update their profile whenever the ''fsnameservers'' list changes.


      This key is required for StorNext SANs.'
    key: fsnameservers
    presence: required
    subkeys:
    - content: A name server.
      key: fsnameserversItem
      presence: required
      type: <string>
    type: <array>
  - content: 'The authentication method for the SAN. This key is required for all Xsan SANs. It''s optional for StorNext SANs but should be set if the StorNext SAN uses an ''auth_secret'' file.


      Only one value is accepted: ''auth_secret'''
    key: sanAuthMethod
    presence: optional
    rangelist:
    - auth_secret
    type: <string>
  - content: The shared secret used for Xsan network authentication. This key is required when the 'sanAuthMethod' key is present. The value should equal the content of the MDC's '/Library/Preferences/Xsan/.auth_secret' file.
    key: sharedSecret
    presence: required
    type: <string>
  title: Xsan
com.apple.xsan.preferences:
  description: ''
  payload:
    content: The Xsan preferences payload can be used to configure which volumes automatically mount at startup. For StorNext volumes this payload also determines whether the mount uses Fibre Channel or Distributed LAN Client (DLC).
    payloadtype: com.apple.xsan.preferences
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.11'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: An array of Xsan or StorNext volume names. The Xsan client attempts to automatically mount these volumes at startup. The system administrator can mount additional volumes manually by using the 'xsanctl(8)' mount command.
    key: onlyMount
    presence: optional
    subkeys:
    - content: A volume name.
      key: onlyMountItem
      presence: required
      type: <string>
    type: <array>
  - content: An array of Xsan or StorNext volume names. If no 'onlyMount' array is present, the Xsan client automatically attempts to mount all SAN volumes except the volumes in this array. The system administrator can mount those volumes manually by using the 'xsanctl(8)' mount command.
    key: denyMount
    presence: optional
    subkeys:
    - content: A volume name.
      key: denyMountItem
      presence: required
      type: <string>
    type: <array>
  - content: An array of StorNext volume names. If the Xsan client is attempting to mount a volume named in this array, the client only mounts the volume if its logical units (LUNs) are available through Fibre Channel. It doesn't attempt to mount the volume using Distributed LAN Client (DLC).
    key: denyDLC
    presence: optional
    subkeys:
    - content: A volume name.
      key: denyDLCItem
      presence: required
      type: <string>
    type: <array>
  - content: An array of StorNext volume names. If the Xsan client is attempting to mount a volume named in this array, the Xsan client attempts to mount the volume using DLC. If DLC isn't available, the client attempts to mount the volume if its LUNs are available through Fibre Channel. The volume name must not also appear in 'denyDLC'.
    key: preferDLC
    presence: optional
    subkeys:
    - content: A volume name.
      key: preferDLCItem
      presence: required
      type: <string>
    type: <array>
  - content: If 'true', use the DLC for all volumes.
    default: false
    key: useDLC
    presence: optional
    type: <boolean>
  title: Xsan Preferences
loginwindow:
  description: ''
  payload:
    content: This payload handles login items management.
    payloadtype: loginwindow
    supportedOS:
      macOS:
        allowmanualinstall: true
        devicechannel: true
        introduced: '10.7'
        requiresdep: false
        userapprovedmdm: false
        userchannel: false
        userenrollment:
          mode: forbidden
  payloadkeys:
  - content: If 'true', prevents the user from disabling login item launches by using the Shift key.
    default: false
    key: DisableLoginItemsSuppression
    presence: optional
    supportedOS:
      macOS:
        introduced: all
    type: <boolean>
  title: 'Login Window: Login Items'
